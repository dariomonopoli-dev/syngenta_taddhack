openapi: 3.0.0
info:
  title: Syngenta Base Platform API
  version: 1.16.0
  description: |-
    # Introduction

    The Syngenta Base Platform offers common functionality for digital agriculture apps (such as OAuth-based Single Sign-On, properties, seasons, field records, etc). The Base API is built on HTTP and is mostly RESTful: It has predictable resource URLs, returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body.

    # Start developing

    Contact Syngenta to obtain the following info needed to connect your app:

    * OAuth `client_id` and `client_secret`
    * URLs for sandbox and production API servers

    Please note this API doc is not for wider circulation at this time.

    This API is describe in OpenAPI 3.0 format. You can download the OpenAPI spec with the link at the top of the doc portal (or find it attached in the bundle sent to you).

    With that, you can use [your](https://www.postman.com/) [favorite](https://insomnia.rest/) [HTTP/REST](https://marketplace.visualstudio.com/items?itemName=42Crunch.vscode-openapi) client to import the spec (use the Download link above or directly import https://docs.cropwise.com/api/alpha/openapi.yaml). There are also  [code generation tools](https://github.com/swagger-api/swagger-codegen) for many programming languages.

    Some notes:
      * Errors are generally developer-readable (though not generally user-readable) in API responses. Format is generally described by the `BasicError` or `ErrorCollection` models. Full error handling docs is in progress.
      * (For internal developers): the client ID for the main UI of the platform is `strix-ui`. That is, add the `Authorization: Basic c3RyaXgtdWk6` header in access management endpoints which need the client ID to be identified.
      * Localized responses will make use of the `Accept-Language` header value. Examples: en, es, pt-BR

    # Concepts

    ## General Concepts

    ### Organization
      An Organization is a master entity that has a set of properties. This entity groups and controls all the resources involved in the culture, for instance, different crops, seasons, etc.

    ### Property
      A property is the representation of a farm with a set of regions and fields.

    ### Region
      The platform has a system of **hierarchical** representation of geographical structures, composed of **Fields and Regions**.
      A region may contain fields or other regions. Regions work like trees: a region can be a root or a node - when it contains other child regions - or a leaf - when it is an actual field, defined by a specific geometry.

    ### Field
      A field is a specialization of a region. Fields are specifically identified as the leaf of the region tree. It is specifically the only entity which has an actual polygon that describes its size and position in the world.

    ## Crop Cycle
    ### What is a Crop Cycle?
    The Crop Cycle is a generical entity responsible for grouping a list of fields with a crop assigned over time.
    ### Crop Cycle Property
    Crop Cycle Property is the association of a Crop Cycle to a property (or part of its fields). This way a property can have different cycles running at the same time, depending on the type of crops that are cultivated in this property.

    ### Crop Cycle Field
    Crop Cycle Field is a cycle defined to a field of a property. This way the property can have multiple cycles assigned depending on how many fields with different crops it has.
    ### Season concept (legacy)
    Season is a legacy concept of representing crop cycles, this name is still used inside the API for backward compatibility measures.
    ## Field Geometry Updates
    ### Basic concepts
    The Cropwise platform has a system of **hierarchical** representation of geographical structures,
    composed of **Field and Regions**. A region may contain fields or other regions.

    ### Structure
    The geographic objects of API use the **GeoJSON** (RFC 7946) format. The regions and fields can be represented
    as GeoJSON `Features` with a specific property schema. The `geometry` field can optionally be specified as
    `null` when the `Feature` is a Region.

    Each region or field is identified at a **Property** by a **key**, a unique client-provided `string` aliased by
    the structure `FeatureID`.

    Their names and other properties are represented using the `FeatureProperties` schema. The hierarchy of regions
    and fields is established by using the `parent_id` field, which is used to specify an field or region as _belonging_ to another field or region.

    ### Update Requests

    Regions and fields can be created, modified and deleted by a `GeometryUpdateRequest`, which is a resource representing
    the map update request operation with is payload and some additional operation-wide controls.

    The `FeatureProperties` structure specifies the operation codes and allows conditional changes to avoid
    race conditions.

    ### Versioning and Conditional Changes

    Every version of a region is identified by a revision hash. To avoid race conditions, clients SHOULD use
    conditions on the regions, which makes the system perform the change only if the conditions are satisfied. Using
    Conditional Changes and `strict` mode is **strongly recommended**.

    ### Rate Limiting and other limitations
    This scope of the API can be called at most 100 times per hour, and request bodies are limited to 5 MB.

    ## Catalog/Organization Catalog
    ### Crop
    A crop is something that can be grown and harvested extensively for profit or subsistence. E.g: Soybean, Cotton, Coffee.

    - **Development Phase**: Development phase represents the plant stage of growth. The classification of these stages can differ from crop to crop.

    ### Product
    A Product is an input that can be used in a property. Products could be Fungicides, Herbicides, Pesticides, Seeds and so on.

    - **Variety**: "Kind" is the term often used for the seed of one or more related plants known by a common name such as carrot, radish, wheat, or soybean. Variety is a subdivision of a kind. A variety has different characteristics from another variety of the same kind of seed.

    ## Captcha
    Some unauthenticated endpoints (singup, password recovery, etc) MAY refuse requests under some circumstances unless a CAPTCHA is provided. To provide a CAPTCHA, include the following field in the object root:

    ``` "_captcha": { "type": "recapcha", "token": "<issue reCaptcha token>" } ```

    ## Error handling

    Requests should return appropriate error codes (e.g. 400 for most request-caused errors) and a JSON object containing error details.



    ```json
    {
      "timestamp": "2019-02-27T04:21:17.740+0000",
      "status": 404,
      "error": "Not Found",
      "code": "EACC012",
      "message": "Account does not exist",
      "path": "/v2/accounts/34550190-7d4f-4a03-91ec-4f5568e50029"
    }
    ```

    ### Error codes

    All error messages should be mapped with error codes.

    These codes will be at this following format: `E{3 character for context}{3 digit for indexing}`.

    ### Common errors

    - `EARG001`: **Missing field on request body.** This error will occur when a required field is not being set on the request body.
    - `EIAM001`:  **Account is not authorized to perform this operation**. This error will occur when the user tries to perform an API operation without the required authorities to do so.
    - `EINT001`: **Intenal server error**. If this error shows up, please contact the support team. It's an unexpected error and it should not happen.

    # Authentication

    <!-- ReDoc-Inject: <security-definitions> -->
  x-logo:
    url: "//docs.cropwise.com/media/base_logo.svg"
    altText: Base Logo
components:
  schemas:
    AccountRoleDTO:
      type: object
      properties:
        id:
          type: string
        role_id:
          type: string
        account_id:
          "$ref": "#/components/schemas/UUID"
        name:
          type: string
        context:
          type: string
        version:
          type: integer
        level:
          type: string
        resource_attachment:
          type: string
        resources:
          type: array
          items:
            type: string
    Workspace:
      type: object
      properties:
        org_id:
          "$ref": "#/components/schemas/UUID"
        workspace_id:
          "$ref": "#/components/schemas/UUID"
      allOf:
      - "$ref": "#/components/schemas/BaseEntity"
      - type: object
        properties:
          contracts:
            "$ref": "#/components/schemas/Contracts"
          name:
            type: string
        required:
        - name
    BasicAccount:
      title: Basic Account
      description: User Account basic info
      x-examples:
        User with company:
          id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
          name: John Doe
          email: john@example.com
          permissions: []
          auto_created_org_id: e76b1e60-b467-427a-b840-a3f13f3f2ab2
      x-tags:
      - Account
      allOf:
      - "$ref": "#/components/schemas/NamedModel"
      - type: object
        properties:
          type:
            type: string
          role:
            "$ref": "#/components/schemas/AccountRole"
          ssn:
            type: string
          tutorial_complete:
            type: boolean
          phone:
            "$ref": "#/components/schemas/Phone"
          authorities:
            type: array
            items:
              "$ref": "#/components/schemas/Authority"
          locale:
            type: string
          clock_format:
            type: string
            enum:
            - ALWAYS_12
            - ALWAYS_24
            - LET_LOCALE_DECIDE
          pending_change_password:
            type: boolean
          default_workspace_id:
            "$ref": "#/components/schemas/UUID"
          workspaces:
            type: array
            items:
              "$ref": "#/components/schemas/Workspace"
          login:
            type: string
          country_code:
            type: string
            maxLength: 2
            minLength: 2
          photo_uri:
            type: string
        required:
        - type
        - authorities
    OptIn:
      title: Signup Opt In
      type: object
      properties:
        type:
          type: string
          enum:
          - EMAIL_OFFERS
          - CELLPHONE_OFFERS
          - DATA_SHARING
        accepted_on:
          "$ref": "#/components/schemas/ISODateTime"
      x-tags:
      - Account
    AccountPasswordUpdate:
      title: Account Password Update
      type: object
      properties:
        email:
          type: string
          format: email
        new_password:
          type: string
          format: password
          minLength: 8
          maxLength: 100
      required:
      - email
      - new_password
      description: Represents a **new password** to be associated with an `Account`
      x-examples:
        Valid request example:
          email: john@example.com
          new_password: N3wStr0ngP4_ss
      x-tags:
      - Account
    AccountRecovery:
      title: Account Recovery
      type: object
      properties:
        email:
          type: string
          format: email
        locale:
          type: string
          enum:
          - pt-BR
          - en
          - es
        recovery_url:
          type: string
          description: Informs the url to be sent on recovery password email.
        custom_email_template:
          type: boolean
          description: If true, it use the email template of the client_id's app.
            If the app doesn't have an email template, the default password recovery
            email template will be used.
      required:
      - email
      - locale
      x-examples:
        Valid account recovery request:
          email: user@example.com
          locale: pt-BR
          recovery_url: https://recovery.url
      description: This model is used to initiate an `Account` recovery flow.
      x-tags:
      - Account
    AccountSignup:
      type: object
      x-examples:
        Signup Example 1:
          opt_ins:
          - type: EMAIL_OFFERS
            accepted_on: '2019-10-02T15:00:00Z'
          - type: CELLPHONE_OFFERS
            accepted_on: '2019-10-02T15:00:00Z'
          terms_accepted_on: '2019-10-02T15:00:00Z'
          org_creation_strategy: auto
          invite_id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
          locale: en
          name: John Doe
          password: V3ryStr0ngP4ssw0rd
          phone: "+5531900000000"
          email: john@example.com
          type: signup_request
          role: OTHER
          photo_uri: https://photo-uri.com
      title: Account Signup
      x-tags:
      - Account
      properties:
        type:
          type: string
          enum:
          - signup_request
        email:
          type: string
          format: email
        phone:
          "$ref": "#/components/schemas/Phone"
        password:
          type: string
          format: password
        name:
          type: string
        locale:
          type: string
        invite_id:
          "$ref": "#/components/schemas/UUID"
        role:
          "$ref": "#/components/schemas/AccountRole"
        org_creation_strategy:
          type: string
          enum:
          - 'no'
          - force
          - auto
          example: auto
          description: |
            `no` - never creates;

            `auto` - creates if not joining from an invite and the inviter indicated the invitee is to join the org upon invite acceptance

            `force` - creates a new org even if invite includes org (still adds user to org invite if present)
        terms_accepted_on:
          "$ref": "#/components/schemas/ISODateTime"
        opt_ins:
          type: array
          items:
            "$ref": "#/components/schemas/OptIn"
        photo_uri:
          type: string
      required:
      - type
      - email
      - phone
      - password
      - name
      - locale
      - org_creation_strategy
      - opt_ins
    AccountMigration:
      type: object
      x-examples:
        Signup Example 1:
          id: aab63ec2-4756-11ea-8d24-5e6d0beb7caa
          org_creation_strategy: auto
          locale: en
          name: John Doe
          phone: "+5531900000000"
          email: john@example.com
          type: signup_request
          role: OTHER
        Migration Example with identity_provider:
          id: aac63ee2-4727-43ra-8d24-5e6d0wqq9cda
          org_creation_strategy: auto
          locale: en
          first_name: Donald
          last_name: Byrd
          phone: "+5531900044675"
          email: donald.byrd@gmail.com
          type: signup_request
          role: OTHER
          identity_provider: GOOGLE
      title: Account Migration
      x-tags:
      - Account
      properties:
        id:
          "$ref": "#/components/schemas/UUID"
        type:
          type: string
          enum:
          - signup_request
        email:
          type: string
          format: email
        phone:
          "$ref": "#/components/schemas/Phone"
        first_name:
          type: string
        last_name:
          type: string
        locale:
          type: string
        role:
          "$ref": "#/components/schemas/AccountRole"
        identity_provider:
          type: string
          enum:
          - GOOGLE
          - MICROSOFT
          - SOCIAL
          description: "This is optional, if not present, the user will authenticate
            itself as usual. \"SOCIAL\" should be used when an account use an undefined
            external identity provider. \n"
      required:
      - id
      - type
      - email
      - first_name
      - last_name
      - locale
    BasicAuthority:
      title: Basic Authority
      type: object
      required:
      - context
      properties:
        context:
          type: string
      discriminator:
        propertyName: context
    OrganizationAuthority:
      title: Organization Authority
      type: object
      allOf:
      - "$ref": "#/components/schemas/BasicAuthority"
      - type: object
        properties:
          id:
            "$ref": "#/components/schemas/UUID"
          permissions:
            type: array
            items:
              "$ref": "#/components/schemas/OrganizationContextPermission"
      required:
      - id
      - permissions
      x-tags:
      - Access Management
      - Organization
    BasicPermission:
      title: Basic Permission
      type: object
      properties:
        scope:
          type: string
          enum:
          - READ
          - WRITE
      required:
      - scope
      x-tags:
      - Access Management
    OrganizationContextPermission:
      title: Organization Context Permission
      allOf:
      - "$ref": "#/components/schemas/BasicPermission"
      - type: object
        properties:
          name:
            type: string
            description: |
              Values:
              - SEASONS
              - ORG
              - USERS
              - PRODUCTS
              - EQUIPMENTS
              - PROPERTIES
              - BUDGETS
              - TRACKER
              - TEMPLATES
              - REVENUES
              - OWNER
              - ASSIGNEES
              - PURCHASE_ORDERS
              - SUPPLIES
              - VENDORS
              - FARMSHOTS
              - REPORTS
              - EXPENSES
              - SEASON_AREA
        required:
        - name
      x-tags:
      - Access Management
      - Organization
    PropertyContextPermission:
      title: Property Context Permission
      allOf:
      - "$ref": "#/components/schemas/BasicPermission"
      - type: object
        properties:
          name:
            type: string
            enum:
            - TASKS
            - EXECUTORS
            - EQUIPMENTS
            - FIELD
            - FIELDS
            - WAREHOUSES
            - INFORMATION
        required:
        - name
      x-tags:
      - Access Management
      - Property
    PropertyAuthority:
      title: Property Authority
      type: object
      allOf:
      - "$ref": "#/components/schemas/BasicAuthority"
      - type: object
        properties:
          id:
            "$ref": "#/components/schemas/UUID"
          permissions:
            type: array
            items:
              "$ref": "#/components/schemas/PropertyContextPermission"
      required:
      - id
      - permissions
      x-tags:
      - Access Management
      - Property
    AppContextPermission:
      title: App Context Permission
      allOf:
      - "$ref": "#/components/schemas/BasicPermission"
      - type: object
        properties:
          name:
            type: string
            enum:
            - INFO
            - PLAN
            - WIDGETS
            - CREDENTIALS
        required:
        - name
      x-tags:
      - Access Management
      - App
    AppAuthority:
      title: App Authority
      type: object
      allOf:
      - "$ref": "#/components/schemas/BasicAuthority"
      - type: object
        properties:
          id:
            "$ref": "#/components/schemas/UUID"
          permissions:
            type: array
            items:
              "$ref": "#/components/schemas/AppContextPermission"
      required:
      - id
      - permissions
      x-tags:
      - Access Management
      - App
    Authority:
      title: Authority
      oneOf:
      - "$ref": "#/components/schemas/OrganizationAuthority"
      - "$ref": "#/components/schemas/PropertyAuthority"
      - "$ref": "#/components/schemas/AppAuthority"
      discriminator:
        propertyName: context
        mapping:
          ORGANIZATION: "#/components/schemas/OrganizationAuthority"
          PROPERTY: "#/components/schemas/PropertyAuthority"
          APP: "#/components/schemas/AppAuthority"
      x-tags:
      - Access Management
    AccountInvitation:
      title: Account Invitation
      allOf:
      - type: object
        properties:
          email:
            type: string
            description: Either `email` or `login` must be present
          login:
            type: string
            description: Either `email` or `login` must be present
          name:
            type: string
          password:
            type: string
            description: Mandatory when `login` is sent instead of `email`
          role:
            type: string
          authorities:
            type: array
            items:
              "$ref": "#/components/schemas/Authority"
          by_concierge:
            type: boolean
          redirect_uri:
            type: string
          client_id:
            type: string
            description: Mandatory when `redirect_uri` is present
          locale:
            type: string
            enum:
            - bg
            - da
            - de
            - el
            - en
            - en_GB
            - es
            - es_419
            - fr
            - hi
            - hu
            - ja
            - nl
            - pl
            - pt_BR
            - ro
            - sv
            - uk
        required:
        - email
        - locale
      x-tags:
      - Account
      x-examples:
        Grower Invitation:
          email: user@example.com
          locale: pt-BR
          name: string
          role: GROWER
          authorities:
          - id: aab63ec2-4756-11ea-8d24-5e6d0beb7caa
            context: ORGANIZATION
            permissions:
            - scope: READ
              name: SEASONS
          - id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
            context: PROPERTY
            permissions:
            - scope: READ
              name: FIELDS
    ManagedAccount:
      title: Managed Account
      allOf:
      - "$ref": "#/components/schemas/IdentifiedAccount"
      x-tags:
      - Account
    UserAccountMigration:
      title: User Account
      allOf:
      - "$ref": "#/components/schemas/IdentifiedAccount"
      - type: object
        properties:
          email:
            type: string
            format: email
        required:
        - email
    UserAccount:
      title: User Account
      allOf:
      - "$ref": "#/components/schemas/IdentifiedAccount"
      - type: object
        properties:
          email:
            type: string
            format: email
          auto_created_org_id:
            "$ref": "#/components/schemas/UUID"
        required:
        - email
    IdentifiedAccount:
      title: Identified Account
      allOf:
      - "$ref": "#/components/schemas/IdentifiedModel"
      - "$ref": "#/components/schemas/BasicAccount"
    PagedAccount:
      title: Paged Account
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/UserAccount"
      - "$ref": "#/components/schemas/PageableMetadata"
      description: ''
    AccountResetPassword:
      title: Account Reset Password
      type: object
      properties:
        account_id:
          "$ref": "#/components/schemas/UUID"
        old_password:
          type: string
        new_password:
          type: string
      x-examples:
        Valid Example:
          account_id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
          old_password: V3ryStr0ngP4ssw0rd
          new_password: N3wStr0ngP4_ss
    ManagedAccountSignup:
      title: Managed Account Signup
      allOf:
      - type: object
        properties:
          login:
            type: string
          password:
            type: string
      - "$ref": "#/components/schemas/BasicAccount"
    EditableAccountInfo:
      title: Editable Account Info
      allOf:
      - type: object
        properties:
          role:
            "$ref": "#/components/schemas/AccountRole"
          ssn:
            type: string
          phone:
            "$ref": "#/components/schemas/Phone"
          opt_ins:
            type: array
            items:
              "$ref": "#/components/schemas/OptIn"
          locale:
            type: string
          country_code:
            type: string
            maxLength: 2
            minLength: 2
          photo_uri:
            type: string
        required:
        - role
        - ssn
        - phone
      - "$ref": "#/components/schemas/IdentifiedNameModel"
      x-examples:
        Valid example:
          role: GROWER
          ssn: '123456'
          phone: "+5531900000000"
          id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
          name: Caiubi Oliveira Fonseca
          json_extended_attributes:
            name: string
      description: ''
    AccountRole:
      type: string
      title: Account Role
      enum:
      - GROWER
      - MANAGER
      - ADMIN
      - DEALER
      - CONSULTANT
      - AGRONOMIST
      - OTHER
    PagedAuthority:
      title: Paged Authority
      description: Info of `Authorities`
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/Authority"
      - "$ref": "#/components/schemas/PageableMetadata"
      x-examples:
        List Authorities:
          content:
          - context: ORGANIZATION
            permissions:
            - scope: WRITE
              name: SEASONS
            - scope: READ
              name: SEASONS
            - scope: WRITE
              name: ORG
            - scope: READ
              name: ORG
            - scope: WRITE
              name: USERS
            - scope: READ
              name: USERS
            - scope: WRITE
              name: PRODUCTS
            - scope: READ
              name: PRODUCTS
            - scope: READ
              name: PROPERTIES
            - scope: WRITE
              name: PROPERTIES
            - scope: READ
              name: EXECUTORS
            - scope: WRITE
              name: EXECUTORS
          - context: PROPERTY
            permissions:
            - scope: WRITE
              name: PROPERTY
            - scope: READ
              name: PROPERTY
            - scope: WRITE
              name: TASKS
            - scope: READ
              name: TASKS
            - scope: WRITE
              name: EQUIPMENTS
            - scope: READ
              name: EQUIPMENTS
            - scope: WRITE
              name: FIELDS
            - scope: WRITE
              name: FIELDS
            - scope: READ
              name: INFORMATION
            - scope: WRITE
              name: INFORMATION
          pageable:
            sort:
              unsorted: true
              sorted: false
              empty: true
            offset: 0
            page_size: 2000
            page_number: 0
            unpaged: false
            paged: true
          total_pages: 1
          total_elements: 2
          last: true
          size: 2000
          number: 0
          first: true
          number_of_elements: 2
          sort:
            unsorted: true
            sorted: false
            empty: true
          empty: false
    AuthorityUpdatesList:
      title: Batch of authority operations
      x-tags:
      - Authority
      type: object
      properties:
        updates:
          type: array
          items:
            "$ref": "#/components/schemas/AuthorityUpdate"
      required:
      - updates
    AuthorityUpdate:
      title: A authority operation
      x-tags:
      - Authority
      properties:
        operation:
          type: string
          enum:
          - add
          - remove
        authorities:
          "$ref": "#/components/schemas/Authority"
      required:
      - operation
      - authorities
    UserSignupInfo:
      title: Existent user on Syngenta iPass tenant.
      x-tags:
      - Account
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        mobilePhone:
          type: string
    RoleTranslateLegacy:
      title: Translate `Role` to Legacy `Authorities`
      x-tags:
      - Account
      properties:
        operation:
          type: string
          enum:
          - add
          - remove
        role_id:
          type: string
        workspace_id:
          "$ref": "#/components/schemas/UUID"
        organization_id:
          "$ref": "#/components/schemas/UUID"
        property_id:
          "$ref": "#/components/schemas/UUID"
        app_id:
          "$ref": "#/components/schemas/UUID"
        account_id:
          "$ref": "#/components/schemas/UUID"
    OauthModel:
      title: Oauth Model
      description: ''
      allOf:
      - "$ref": "#/components/schemas/IdentifiedNameModel"
      - type: object
        properties:
          app_id:
            type: string
            format: uuid
          client_id:
            type: string
          created_at:
            "$ref": "#/components/schemas/ISODateTime"
          last_access:
            "$ref": "#/components/schemas/ISODateTime"
          revoked:
            type: boolean
          redirect_Uris:
            type: array
            items:
              type: string
          create_secret:
            type: boolean
        required:
        - name
        - app_id
    PagedOauthModel:
      title: Paged Oauth Model
      description: Info of `Oauth Clients`
      x-tags:
      - App
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/OauthModel"
      - "$ref": "#/components/schemas/PageableMetadata"
    EditCustomProductDTO:
      type: object
      description: DTO to edit a custom product
      properties:
        name:
          type: string
        indication:
          "$ref": "#/components/schemas/ProductIndication"
        selling_units:
          "$ref": "#/components/schemas/SellingUnits"
      required:
      - name
      - org_id
      - indication
      - selling_units
    CreateCustomProductDTO:
      type: object
      description: DTO to create a custom product
      properties:
        name:
          type: string
        org_id:
          type: string
          format: uuid
        indication:
          "$ref": "#/components/schemas/ProductIndication"
        selling_units:
          "$ref": "#/components/schemas/SellingUnits"
      required:
      - name
      - org_id
      - indication
      - selling_units
    CustomProductDTO:
      type: object
      description: Custom product data
      properties:
        name:
          type: string
        org_id:
          type: string
        indication:
          "$ref": "#/components/schemas/ProductIndication"
        selling_units:
          "$ref": "#/components/schemas/SellingUnits"
        id:
          type: string
          format: uuid
        deleted:
          type: boolean
    CanonProductDTO:
      type: object
      description: Canon product data
      properties:
        name:
          type: string
        source:
          type: string
        country:
          type: string
        indication:
          "$ref": "#/components/schemas/ProductIndication"
        selling_units:
          "$ref": "#/components/schemas/SellingUnits"
        id:
          type: string
          format: uuid
        deleted:
          type: boolean
        company:
          type: string
        company_group:
          type: string
        gov_source:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        registration_number:
          type: string
        twin_pack_code:
          type: string
        language:
          type: string
        phrases:
          type: array
          items:
            "$ref": "#/components/schemas/PhraseDTO"
        formulation:
          "$ref": "#/components/schemas/FormulationDTO"
    FormulationDTO:
      type: object
      description: Product's Formulation data
      properties:
        company_group:
          type: string
        indication:
          type: string
        type:
          type: string
        active_ingredients:
          type: array
          items:
            "$ref": "#/components/schemas/ActiveIngredientDTO"
        type_code:
          type: string
        combination:
          type: string
    ActiveIngredientDTO:
      type: object
      description: Product's Active Ingredients data
      properties:
        name:
          type: string
        concentration_unit:
          type: string
        concentration_value:
          type: string
        hrac_code:
          type: string
    PhraseDTO:
      type: object
      description: Product's PhraseDTO data
      properties:
        name:
          type: string
        group_name:
          type: string
        code:
          type: string
        abbreviation:
          type: string
        group_code:
          type: string
    ProductVisibilityListDTO:
      type: object
      description: List of products to have its visibility changed
      properties:
        products:
          type: array
          items:
            "$ref": "#/components/schemas/ProductVisibilityDTO"
      required:
      - products
    ProductVisibilityDTO:
      type: object
      description: Product and organization status to be changed
      properties:
        product_id:
          type: string
          format: uuid
        org_id:
          type: string
          format: uuid
        hide:
          type: boolean
      required:
      - product_id
      - org_id
      - hide
    HideProductResponseStatusInfoDTO:
      type: object
      description: Products hidden status info dto
      properties:
        success:
          type: array
          items:
            "$ref": "#/components/schemas/HideProductResponseStatusDTO"
        errors:
          type: array
          items:
            "$ref": "#/components/schemas/HideProductResponseStatusDTO"
    HideProductResponseStatusDTO:
      type: object
      description: Product hide status dto
      properties:
        product_id:
          type: string
          format: uuid
        org_id:
          type: string
          format: uuid
        error:
          type: boolean
        status:
          type: string
    ProductIndication:
      type: string
      enum:
      - ACARICIDE
      - ACARICIDE(MICROBIOLOGICAL)
      - ACARICIDE/ADHESIVE(SPREADER)/ADJUVANT/INSECTICIDE
      - ACARICIDE/ADJUVANT/INSECTICIDE
      - ACARICIDE/ADJUVANT/INSECTICIDE/NEMATICIDE
      - ACARICIDE/ATTRACTANT/INSECTICIDE
      - ACARICIDE/BACTERICIDE
      - ACARICIDE/BACTERICIDE/FUNGICIDE
      - ACARICIDE/BACTERICIDE/FUNGICIDE/INSECTICIDE
      - ACARICIDE/BACTERICIDE/FUNGICIDE/INSECTICIDE/SEED-TREATMENT
      - ACARICIDE/FORMICIDE/INSECTICIDE
      - ACARICIDE/FUMIGANT
      - ACARICIDE/FUNGICIDE
      - ACARICIDE/FUNGICIDE/INSECTICIDE
      - ACARICIDE/FUNGICIDE/INSECTICIDE/NEMATICIDE/RODENTICIDE
      - ACARICIDE/GROWTH-REGULATOR/INSECTICIDE
      - ACARICIDE/HERBICIDE/NEMATICIDE
      - ACARICIDE/INSECT-GROWTH-REGULATOR/INSECTICIDE
      - ACARICIDE/INSECTICIDE
      - ACARICIDE/INSECTICIDE(MICROBIOLOGICAL)
      - ACARICIDE/INSECTICIDE/INSECT-REPELLENT/MOLLUSCICIDE
      - ACARICIDE/INSECTICIDE/MOLLUSCICIDE
      - ACARICIDE/INSECTICIDE/NEMATICIDE
      - ACARICIDE/INSECTICIDE/PROD.-AGAINST-STORAGE-PESTS
      - ACARICIDE/INSECTICIDE/RODENTICIDE
      - ACARICIDE/INSECTICIDE/SEED-PROTECTANT
      - ACARICIDE/INSECTICIDE/SEED-TREATMENT
      - ACARICIDE/MOLLUSCICIDE/TADPOLE-SH
      - ACARICIDE/REPELLENT
      - ACRIDICIDE
      - ACRIDICIDE/INSECTICIDE
      - ACTIVATOR
      - ADHESIVE(SPREADER)
      - ADHESIVE(SPREADER)/ADJUVANT
      - ADHESIVE(SPREADER)/ADJUVANT/FUNGICIDE
      - ADJUVANT
      - ADJUVANT/ACARICIDE/FUNGICIDE/INSECTICIDE
      - ADJUVANT/FUNGICIDE/INSECTICIDE
      - ADJUVANT/GROWTH-REGULATOR
      - ADJUVANT/HERBICIDE
      - ADJUVANT/HERBICIDE/SURFACTANT
      - ADJUVANT/INSECTICIDE
      - ADJUVANT/SURFACTANT
      - ALGAECIDE
      - ALGAECIDE/FUNGICIDE
      - ALGAECIDE/FUNGICIDE/SLIMICIDE
      - ALGAECIDE/HERBICIDE
      - ALGAECIDE/HERBICIDE/MOLLUSCICIDE
      - ALGAECIDE/SANITIZER/SLIMICIDE/BACTERICIDE
      - ALGAECIDE/SLIMICIDE
      - ALGICIDE
      - ANIMAL-TOXICANT
      - ANIMAL-TOXICANT/INSECTICIDE/RODENTICIDE
      - ANIMAL-TOXICANT/RODENTICIDE
      - ANTI-FOAMING
      - ANTI-FOULING-PAINT
      - ANTI-MOSS
      - ANTI-MOSS/HERBICIDE
      - ANTI-SCALD
      - ANTI-SPROUTING
      - ATTRACTANT
      - ATTRACTANT/INSECTICIDE
      - AVICIDE
      - BACTERICIDE
      - BACTERICIDE/DISINFECTANT/FUNGICIDE
      - BACTERICIDE/FUMIGANT/FUNGICIDE
      - BACTERICIDE/FUNGICIDE
      - BACTERICIDE/FUNGICIDE(MICROBIOLOGICAL)
      - BACTERICIDE/FUNGICIDE/GROWTH-REGULATOR
      - BACTERICIDE/FUNGICIDE/INSECTICIDE
      - BACTERICIDE/FUNGICIDE/MOLLUSCICIDE
      - BACTERICIDE/FUNGICIDE/NEMATICIDE
      - BACTERICIDE/FUNGICIDE/NEMATICIDE/SOIL-DISINFECTANT
      - BACTERICIDE/FUNGICIDE/SEED-TREATMENT
      - BACTERICIDE/FUNGICIDE/SOIL-DISINFECTANT
      - BACTERICIDE/FUNGICIDE/SPORICIDE
      - BACTERICIDE/FUNGICIDE/VIRUCIDE
      - BACTERICIDE/GROWTH-REGULATOR
      - BACTERICIDE/INSECTICIDE
      - BACTERICIDE/NEMATICIDE
      - BAIT
      - BIO-FUNGICIDE
      - BIO-INSECTICIDE
      - BIO-NEMATICIDE
      - BIOCHEMICAL-PESTICIDE
      - BIOLOGICAL-CONTROL-AGENT
      - BIOLOGICAL-CONTROL-PRODUCT
      - BIOLOGICAL-CTRL.-PROD./INSECTICIDE
      - BIOLOGICAL-CTRL.-PROD./NEMATICIDE
      - BIOLOGICAL-CTRL.-PROD./VIRUCIDE
      - BIOSTIMULANT
      - BIRD-REPELLENT
      - BUFFER-AGENT
      - CROP-BACTERICIDE
      - CROP-BACTERICIDE/FUNGICIDE
      - CROP-BACTERICIDE/FUNGICIDE/HERBICIDE
      - CRUSTICIDE
      - CRUSTICIDE/MOLLUSCICIDE
      - DEFOLIANT
      - DEFOLIANT/DESICCANT
      - DEFOLIANT/DESICCANT/HERBICIDE
      - DEFOLIANT/DESICCANT/REGULATOR
      - DEFOLIANT/GROWTH-REGULATOR(PGR)
      - DEFOLIANT/HERBICIDE
      - DEFOLIANT/HERBICIDE/REGULATOR
      - DEFOLIANT/REGULATOR
      - DESICCANT
      - DESICCANT/HERBICIDE
      - DESICCANT/HERBICIDE/REGULATOR
      - DESICCANT/MICROBIAL/REGULATOR
      - DISINFECTANT
      - DISINFECTANT/FUNGICIDE/HERBICIDE/NEMATICIDE
      - DISINFECTANT/FUNGICIDE/NEMATICIDE
      - DISINFECTANT/INSECTICIDE
      - DISINFECTANT/PRESERVATIVE
      - DISINFECTANT/SEED-TREATMENT
      - ELICITOR
      - FERTILIZER/SOIL-CONDITIONER
      - FORMICIDE
      - FORMICIDE/FUNGICIDE
      - FORMICIDE/FUNGICIDE/INSECTICIDE/NEMATICIDE
      - FORMICIDE/INSECTICIDE
      - FORMICIDE/INSECTICIDE/RODENTICIDE
      - FORMICIDE/INSECTICIDE/SEED-TREATMENT
      - FORMICIDE/INSECTICIDE/TERMITICIDE
      - FUMIGANT
      - FUMIGANT/FUNGICIDE
      - FUMIGANT/INSECTICIDE
      - FUMIGANT/INSECTICIDE/MOLLUSCICIDE/TADPOLE-SH
      - FUMIGANT/INSECTICIDE/RODENTICIDE
      - FUMIGANT/NEMATICIDE
      - FUMIGANT/SEED-TREATMENT
      - FUNGICIDE
      - FUNGICIDE
      - FUNGICIDE(MICROBIOLOGICAL)
      - FUNGICIDE/ACARICIDE
      - FUNGICIDE/DISINFECTANT/PRESERVATIVE
      - FUNGICIDE/GROWTH-REGULATOR
      - FUNGICIDE/GROWTH-REGULATOR/HERBICIDE
      - FUNGICIDE/GROWTH-REGULATOR/INSECTICIDE
      - FUNGICIDE/GROWTH-REGULATOR/SEED-PROTECTANT
      - FUNGICIDE/HERBICIDE
      - FUNGICIDE/HERBICIDE/INSECTICIDE
      - FUNGICIDE/HERBICIDE/INSECTICIDE/NEMATICIDE
      - FUNGICIDE/HERBICIDE/INSECTICIDE/NEMATICIDE/RODENTICIDE
      - FUNGICIDE/HERBICIDE/INSECTICIDE/NEMATICIDE/SOIL-FUMIGANT
      - FUNGICIDE/HERBICIDE/INSECTICIDE/SOIL-FUMIGANT
      - FUNGICIDE/HERBICIDE/INSECTICIDE/VIRUCIDE
      - FUNGICIDE/HERBICIDE/INSECTICIDE/WOOD-PRESERVATIVE
      - FUNGICIDE/HERBICIDE/MOLLUSCICIDE
      - FUNGICIDE/HERBICIDE/MOLLUSCICIDE/NEMATICIDE/TADPOLE-SH
      - FUNGICIDE/HERBICIDE/MOLLUSCICIDE/TADPOLE-SH
      - FUNGICIDE/HERBICIDE/NEMATICIDE
      - FUNGICIDE/HERBICIDE/NEMATICIDE/SLIMICIDE
      - FUNGICIDE/HERBICIDE/NEMATICIDE/SOIL-FUMIGANT
      - FUNGICIDE/HERBICIDE/NEMATICIDE/WOOD-PRESERVATIVE
      - FUNGICIDE/HERBICIDE/REGULATOR
      - FUNGICIDE/HERBICIDE/WOOD-PRESERVATIVE
      - FUNGICIDE/INSECT-GROWTH-REGULATOR/INSECTICIDE
      - FUNGICIDE/INSECTICIDE
      - FUNGICIDE/INSECTICIDE/MICROBIAL
      - FUNGICIDE/INSECTICIDE/MICROBIAL/REGULATOR
      - FUNGICIDE/INSECTICIDE/MISCELLANEOUS
      - FUNGICIDE/INSECTICIDE/MOLLUSCICIDE/NEMATICIDE
      - FUNGICIDE/INSECTICIDE/NEMATICIDE
      - FUNGICIDE/INSECTICIDE/NEMATICIDE/SOIL-FUMIGANT
      - FUNGICIDE/INSECTICIDE/REGULATOR
      - FUNGICIDE/INSECTICIDE/REPELLENT
      - FUNGICIDE/INSECTICIDE/RODENTICIDE
      - FUNGICIDE/INSECTICIDE/SEED-PROTECTANT
      - FUNGICIDE/INSECTICIDE/SEED-TREATMENT
      - FUNGICIDE/INSECTICIDE/VIRUCIDE
      - FUNGICIDE/INSECTICIDE/WOOD-PRESERVATIVE
      - FUNGICIDE/MATERIAL-PRESERVATIVE
      - FUNGICIDE/MICROBIAL
      - FUNGICIDE/MICROBIAL/REGULATOR
      - FUNGICIDE/MOLLUSCICIDE
      - FUNGICIDE/NEMATICIDE
      - FUNGICIDE/NEMATICIDE(MICROBIOLOGICAL)
      - FUNGICIDE/NEMATICIDE/PLANT-GROWTH-REGULATOR
      - FUNGICIDE/NEMATICIDE/SOIL-FUMIGANT
      - FUNGICIDE/REGULATOR
      - FUNGICIDE/REPELLENT
      - FUNGICIDE/SANITIZER
      - FUNGICIDE/SEED-PROTECTANT
      - FUNGICIDE/SEED-TREATMENT
      - FUNGICIDE/SEED-TREATMENT/BIO-FERTILIZER
      - FUNGICIDE/SPORICIDE/TUBERCULOCIDE/VIRUCIDE
      - FUNGICIDE/TUBERCULOCIDE/VIRUCIDE
      - FUNGICIDE/VIRUCIDE
      - FUNGICIDE/WOOD-PRESERVATIVE
      - FUNGISTAT
      - GROWTH-REGULATOR(PGR)
      - GROWTH-REGULATOR(PGR)/WOUND-TREATMENT
      - GROWTH-REGULATOR/GROWTH-STIMULANT
      - GROWTH-REGULATOR/HERBICIDE
      - GROWTH-REGULATOR/HERBICIDE/INSECTICIDE
      - GROWTH-REGULATOR/INSECTICIDE
      - GROWTH-REGULATOR/NEMATICIDE
      - GROWTH-REGULATOR/REPELLENT
      - GROWTH-REGULATOR/SEED-PROTECTANT
      - GROWTH-STIMULANT
      - GROWTH-STIMULANT/NEMATICIDE
      - HERBICIDE
      - HERBICIDE
      - HERBICIDE-W/FERTILIZER
      - HERBICIDE/INSECTICIDE
      - HERBICIDE/INSECTICIDE/ACATICIDE
      - HERBICIDE/INSECTICIDE/NEMATICIDE
      - HERBICIDE/INSECTICIDE/NEMATICIDE/SOIL-FUMIGANT
      - HERBICIDE/MICROBIAL-PESTICIDE
      - HERBICIDE/REGULATOR
      - HERBICIDE/SAFENER
      - IMMUNITY-STIMULATOR
      - INOCULANT
      - INSECT-GROWTH-REGULATOR
      - INSECT-GROWTH-REGULATOR/INSECTICIDE
      - INSECT-GROWTH-REGULATOR/INSECTICIDE/NEMATICIDE
      - INSECT-GROWTH-REGULATOR/INSECTICIDE/REPELLENT
      - INSECT-GROWTH-REGULATOR/REPELLENT
      - INSECT-GROWTH-REGULATOR/SEX-ATTRACTANT
      - INSECT-REPELLENT
      - INSECTICIDE
      - INSECTICIDE
      - INSECTICIDE-SYNERGIST/SAFENER
      - INSECTICIDE(MICROBIOLOGICAL)
      - INSECTICIDE(SOAP)
      - INSECTICIDE(SOAP)/INSECTICIDE
      - INSECTICIDE/CRUSTICIDE
      - INSECTICIDE/MATING-DISRUPTANT
      - INSECTICIDE/MICROBIAL-PESTICIDE
      - INSECTICIDE/MOLLUSCICIDE
      - INSECTICIDE/MOLLUSCICIDE/REGULATOR/TADPOLE-SH
      - INSECTICIDE/MOLLUSCICIDE/TADPOLE-SH
      - INSECTICIDE/NEMATICIDE
      - INSECTICIDE/NEMATICIDE/REPELLENT
      - INSECTICIDE/NEMATICIDE/SEED-TREATMENT
      - INSECTICIDE/NEMATICIDE/SEX-ATTRACTANT
      - INSECTICIDE/NEMATICIDE/SOIL-FUMIGANT
      - INSECTICIDE/PHEROMONE
      - INSECTICIDE/REPELLENT
      - INSECTICIDE/RODENTICIDE
      - INSECTICIDE/SEED-TREATMENT
      - INSECTICIDE/TERMITICIDE
      - INSECTICIDE/VERMIN-DESTROYER
      - INSECTICIDE/VIRUCIDE
      - INSECTICIDE/WOOD-PRESERVATIVE
      - LIMACIDE
      - LIVING-ORGANISMS
      - LIVING-ORGANISMS(AGAINST-FUNGI)
      - LIVING-ORGANISMS(AGAINST-FUNGI)/FUNGICIDE
      - LIVING-ORGANISMS(BACTERIA)/FUNGICIDE
      - LIVING-ORGANISMS(FUNGI)
      - LIVING-ORGANISMS(FUNGI)/FUNGICIDE
      - LIVING-ORGANISMS(INSECTS)
      - LIVING-ORGANISMS(INSECTS)/PRESERVATIVE
      - LIVING-ORGANISMS(MITES)
      - LIVING-ORGANISMS(NEMATODES)
      - LIVING-ORGANISMS(NEMATODES)/INSECTICIDE
      - MATING-DISRUPTANT
      - MATING-DISRUPTANT/SEX-ATTRACTANT
      - MICROBIAL-PESTICIDE
      - MICROBIAL-PESTICIDE/MOLLUSCICIDE/TADPOLE-SH
      - MICROBIAL-PESTICIDE/NEMATICIDE
      - MICROBIAL-PESTICIDE/REGULATOR
      - MICROBIAL-PESTICIDE/SEX-ATTRACTANT
      - MICRONUTRIENTS
      - MISCELLANEOUS
      - MOLLUSCICIDE
      - MOLLUSCICIDE/REPELLENT
      - MOLLUSCICIDE/SLIMICI
      - MOLLUSCICIDE/TADPOLE-SH
      - NATURAL-DEFENCE-STIMULATOR
      - NEMATICIDE
      - NEMATICIDE
      - NEMATICIDE(MICROBIOLOGICAL)
      - NEMATICIDE/REGULATOR
      - NEMATICIDE/SEX-ATTRACTANT
      - NEMATICIDE/SOIL-FUMIGANT
      - NON-PARASITIC-PLANT-DISEASE-CONTROL
      - ORGANISMS(INSECT-VIRUSES)
      - OTHER
      - OTHERS
      - PESTICIDE/FERTILIZER
      - PHEROMONE
      - PHEROMONE-SYNTHETIC
      - PHYSICAL-CONTROL-AGENT
      - PLANT GROWTH REGULATO
      - PLANT-ACTIVATOR
      - PRESERVATIVE
      - PRESERVATIVE/INSECTICIDE
      - PRODUCT-AGAINST-STORAGE-PESTS
      - PROTECTANT
      - PRUNING-PAINT
      - REGULATOR
      - REPELLENT
      - RODENT/REPELLENT
      - RODENTICIDE
      - RODENTICIDE
      - SAFENER
      - SEED TREATMENT
      - SEED-PROTECTANT
      - SEED-TREATMENT
      - SOIL-DISINFECTANT
      - SOIL-DISINFECTANT/NEMATICIDE
      - SOIL-FUMIGANT
      - SOIL-STERILANT
      - SPECIAL-PREPARATIONS
      - SPORICIDE
      - SPORICIDE/VIRUCIDE
      - STERILIZING-PLANTING-AGENT
      - SULPHUR
      - SURFACTANT/FRUIT-COATING
      - TALPICIDE
      - TANK-MIX
      - TECHNICAL
      - TERMITICIDE
      - TUBERCULOCIDE/VIRUCIDE
      - UNSPECIFIED
      - VIRUCIDE
      - WAX
      - WETTING
      - WOOD-PRESERVATIVE
      - WOUND-TREATMENT
    SellingUnits:
      type: string
      enum:
      - KILOGRAMS
      - LITERS
      - UNITS
      - BOXS
      - SACK
      - GALLONS
      - GRAMS
      - TONNES
      - MILLILITER
      - METERS
      - OUNCES
      - POUNDS
      - PINTS
      - DOSE
      - UNKNOWN
    SeasonAndPropertiesIdsList:
      title: Season and Properties Ids List
      x-tags:
      - Season
      - type: object
        properties:
          properties_by_season:
            type: array
            items:
              "$ref": "#/components/schemas/SeasonAndPropertiesIds"
    SeasonAndPropertiesIds:
      title: Season and Properties Ids
      x-tags:
      - Season
      - type: object
        properties:
          season_id:
            "$ref": "#/components/schemas/UUID"
          properties_id: 
          type: array
          items:
            "$ref": "#/components/schemas/UUID"
    BasicSeason:
      title: Basic Season
      description: ''
      x-tags:
      - Season
      allOf:
      - "$ref": "#/components/schemas/NamedModel"
      - type: object
        properties:
          org_id:
            "$ref": "#/components/schemas/UUID"
          start_date:
            "$ref": "#/components/schemas/ISODateTime"
          end_date:
            "$ref": "#/components/schemas/ISODateTime"
          crop_id:
            "$ref": "#/components/schemas/UUID"
        required:
        - org_id
        - crop_id
      x-examples:
        Basic Season Example:
          name: Season Test - 2020/21
          start_date: '2020-01-31T20:47:16.000+0000'
          end_date: '2021-01-31T20:47:16.000+0000'
          crop_id: 010b7b54-e006-4afc-a843-436b909ce90d
          org_id: 34550190-7d4f-4a03-91ec-4f5568e50029
    SeasonProperty:
      allOf:
      - "$ref": "#/components/schemas/IdentifiedModel"
      - type: object
        properties:
          id:
            "$ref": "#/components/schemas/UUID"
          season_id:
            "$ref": "#/components/schemas/UUID"
          deleted:
            type: boolean
            description: If not set, default will be `false`.
        required:
        - id
        - season_id
      title: Season Property
      description: Season/Property relationship model
      x-tags:
      - Season
      - Property
      x-examples:
        Season Property Example:
          id: 75cef3de-4247-4e14-a13a-7b5319f75e99
          season_id: ba69208b-d8fa-4603-be43-aef2ebda9003
          deleted: false
    Season:
      title: Season
      description: ''
      x-tags:
      - Season
      allOf:
      - "$ref": "#/components/schemas/IdentifiedModel"
      - type: object
        properties:
          active:
            type: boolean
          deleted:
            type: boolean
      - "$ref": "#/components/schemas/BasicSeason"
      x-examples:
        Valid Season:
          name: Season Test - 2020/21
          start_date: '2020-01-31T20:47:16.000+0000'
          end_date: '2021-01-31T20:47:16.000+0000'
          crop_id: 010b7b54-e006-4afc-a843-436b909ce90d
          org_id: 34550190-7d4f-4a03-91ec-4f5568e50029
          active: true
          id: 2e59fa72-73ef-423e-a183-7cece15af4df
    SeasonField:
      title: Season Field
      description: ''
      x-tags:
      - Season
      allOf:
      - "$ref": "#/components/schemas/IdentifiedModel"
      - "$ref": "#/components/schemas/BasicSeasonField"
      - type: object
        properties:
          property_id:
            "$ref": "#/components/schemas/UUID"
          season_id:
            "$ref": "#/components/schemas/UUID"
      x-examples:
        Complete Season Field Example:
          id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
          property_id: aab63ec2-4756-11ea-8d24-5e6d0beb7caa
          season_id: 75cef3de-4247-4e14-a13a-7b5319f75e99
          planting_date: '2019-10-02T15:00:00Z'
          emergency_date: '2020-08-02T15:00:00Z'
          harvesting_date: '2020-10-02T15:00:00Z'
          start_date: '2019-10-02T15:00:00Z'
          end_date: '2020-10-03T15:00:00Z'
          varieties_ids:
          - 010b7b54-e006-4afc-a843-436b909ce90d
          json_extended_attributes:
            name: string
    BasicSeasonField:
      title: Basic Season Field
      x-tags:
      - Season
      description: ''
      type: object
      x-examples:
        Basic Season Field Example:
          id: acfce85d-14ce-42d5-9685-cf260192550f
          planting_date: '2019-10-02T15:00:00Z'
          emergency_date: '2020-08-02T15:00:00Z'
          harvesting_date: '2020-10-02T15:00:00Z'
          start_date: '2019-10-02T15:00:00Z'
          end_date: '2020-10-03T15:00:00Z'
          varieties_ids:
          - 010b7b54-e006-4afc-a843-436b909ce90d
          json_extended_attributes:
            name: string
      properties:
        id:
          "$ref": "#/components/schemas/UUID"
        harvesting_date:
          "$ref": "#/components/schemas/ISODateTime"
        planting_date:
          "$ref": "#/components/schemas/ISODateTime"
        emergency_date:
          "$ref": "#/components/schemas/ISODateTime"
        start_date:
          "$ref": "#/components/schemas/ISODateTime"
        end_date:
          "$ref": "#/components/schemas/ISODateTime"
        varieties_ids:
          type: array
          items:
            "$ref": "#/components/schemas/UUID"
        json_extended_attributes:
          "$ref": "#/components/schemas/BasicExtendedAttribute"
      required:
      - id
      - start_date
      - end_date
    SeasonLand:
      title: Season Land
      type: object
      properties:
        season_properties:
          type: array
          items:
            "$ref": "#/components/schemas/IdentifiedModel"
        properties:
          type: array
          items:
            "$ref": "#/components/schemas/IdentifiedNameModel"
        season_fields:
          type: array
          items:
            "$ref": "#/components/schemas/IdentifiedModel"
      x-examples:
        Season Land Example:
          season_properties:
            id: 75cef3de-4247-4e14-a13a-7b5319f75e99
          properties:
          - name: Property Name
            id: 34550190-7d4f-4a03-91ec-4f5568e50029
          season_fields:
            id: ba69208b-d8fa-4603-be43-aef2ebda9003
    SeasonRelationship:
      title: Season Relationship
      type: object
      x-examples:
        Season Relationship examples:
          properties:
          - id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
          fields:
          - id: acfce85d-14ce-42d5-9685-cf260192550f
            planting_date: '2019-10-02T15:00:00Z'
            emergency_date: '2020-08-02T15:00:00Z'
            harvesting_date: '2020-10-02T15:00:00Z'
            start_date: '2019-10-02T15:00:00Z'
            end_date: '2020-10-02T15:00:00Z'
            varieties_ids:
            - 010b7b54-e006-4afc-a843-436b909ce90d
      description: ''
      properties:
        properties:
          type: array
          items:
            "$ref": "#/components/schemas/IdentifiedModel"
        fields:
          type: array
          items:
            "$ref": "#/components/schemas/BasicSeasonField"
    PagedSeason:
      title: Paged Season
      description: Info of `Seasons`
      x-tags:
      - Season
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              allOf:
              - "$ref": "#/components/schemas/Season"
      - "$ref": "#/components/schemas/PageableMetadata"
    PagedSeasonProperty:
      title: Paged Season Properties
      description: Info of `Seasons` and `Properties` relationships
      x-tags:
      - Season
      - Property
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              allOf:
              - "$ref": "#/components/schemas/SeasonProperty"
      - "$ref": "#/components/schemas/PageableMetadata"
    PagedSeasonField:
      title: Paged Season Fields
      description: Info of `Seasons` and `Fields` relationships
      x-tags:
      - Season
      - Field
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/SeasonField"
    SeasonWithLand:
      title: Season with land information
      description: Season with of `Property` and `Fields` relationships that can be
        used on `Season` creation
      x-tags:
      - Season
      - Field
      - Property
      allOf:
      - "$ref": "#/components/schemas/BasicSeason"
      - type: object
        properties:
          land:
            "$ref": "#/components/schemas/SeasonRelationship"
    SeasonLandUpdatesList:
      title: Batch of season-land operations
      description: A list of operations to be peformed againt a Season's and its Fields/Properties
        relationship
      x-tags:
      - Season
      - Field
      - Property
      properties:
        updates:
          type: array
          items:
            "$ref": "#/components/schemas/SeasonLandUpdate"
      required:
      - updates
    SeasonLandUpdate:
      title: A season-land operation
      description: A operation to be peformed againt a Season's and its Fields/Properties
        relationship
      x-tags:
      - Season
      - Field
      - Property
      properties:
        operation:
          type: string
          enum:
          - create
          - remove
        land:
          "$ref": "#/components/schemas/SeasonRelationship"
      required:
      - operation
      - land
    SeasonLandBatchList:
      title: Season-land batch list
      description: A list of operations to be peformed againt each Season's and its
        Fields/Properties relationship
      x-tags:
      - Season
      - Field
      - Property
      properties:
        batch:
          type: array
          items:
            "$ref": "#/components/schemas/SeasonLandBatch"
      required:
      - batch
    SeasonLandBatch:
      title: A season-land batch operation
      description: A list of operation to be peformed againt a Season's and its Fields/Properties
        relationship
      x-tags:
      - Season
      - Field
      - Property
      properties:
        season_id:
          "$ref": "#/components/schemas/UUID"
        updates:
          type: array
          items:
            "$ref": "#/components/schemas/SeasonLandUpdate"
      required:
      - season_id
      - updates
    OperationAttachSeasonDTO:
      type: object
      description: OperationAttachSeasonDTO
      properties:
        operation:
          type: string
          enum:
          - ADD
          - add
          - REMOVE
          - remove
        season:
          type: string
          format: uuid
      required:
      - operation
      - season
    AttachSeasonDTO:
      title: AttachSeasonDTO
      description: AttachSeasonDTO
      type: object
      properties:
        updates:
          type: array
          items:
            "$ref": "#/components/schemas/OperationAttachSeasonDTO"
      required:
      - updates
    AcceptedSeasonDTO:
      type: object
      description: AcceptedSeasonDTO
      properties:
        operation:
          type: string
          enum:
          - ADD
          - add
          - REMOVE
          - remove
        season_id:
          type: string
          format: uuid
    RefusedSeasonDTO:
      type: object
      description: RefusedSeasonDTO
      properties:
        operation:
          type: string
          enum:
          - ADD
          - add
          - REMOVE
          - remove
        season_id:
          type: string
          format: uuid
        reason:
          type: string
    AttachSeasonResultDTO:
      title: AttachSeasonResultDTO
      description: AttachSeasonResultDTO
      type: object
      properties:
        accepted_seasons:
          type: array
          items:
            "$ref": "#/components/schemas/AcceptedSeasonDTO"
        refused_seasons:
          type: array
          items:
            "$ref": "#/components/schemas/RefusedSeasonDTO"
    CycleDTO:
      type: object
      description: CycleDTO details
      properties:
        created_at:
          "$ref": "#/components/schemas/ISODateTime"
        updated_at:
          "$ref": "#/components/schemas/ISODateTime"
        org_id:
          type: string
          format: uuid
        name:
          type: string
        start_at:
          "$ref": "#/components/schemas/ISODateTime"
        end_at:
          "$ref": "#/components/schemas/ISODateTime"
        deleted:
          type: boolean
        id:
          type: string
          format: uuid
    CreateCycleDTO:
      type: object
      description: DTO to create a cycle
      properties:
        org_id:
          type: string
          format: uuid
        name:
          type: string
        start_at:
          "$ref": "#/components/schemas/ISODateTime"
        end_at:
          "$ref": "#/components/schemas/ISODateTime"
        id:
          type: string
          format: uuid
      required:
      - org_id
      - name
      - start_at
      - end_at
    EditCycleDTO:
      type: object
      description: DTO to edit a cycle
      properties:
        name:
          type: string
        start_at:
          "$ref": "#/components/schemas/ISODateTime"
        end_at:
          "$ref": "#/components/schemas/ISODateTime"
      required:
      - name
      - start_at
      - end_at
    PagedCycleDTO:
      title: Paged CycleDTO
      description: Info of `CyclesDTO`
      x-tags:
      - Cycle
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              allOf:
              - "$ref": "#/components/schemas/CycleDTO"
      - "$ref": "#/components/schemas/PageableMetadata"
    BasicRegionV2:
      title: Region
      description: ''
      type: object
      x-tags:
      - Region
      properties:
        name:
          type: string
        parent_id:
          "$ref": "#/components/schemas/UUID"
        property_id:
          "$ref": "#/components/schemas/UUID"
        geometry:
          "$ref": "#/components/schemas/Geometry"
        calculated_area:
          type: number
        declared_area:
          type: number
        reference_point:
          "$ref": "#/components/schemas/Point"
        json_extended_attributes:
          "$ref": "#/components/schemas/BasicExtendedAttribute"
        event_date:
          "$ref": "#/components/schemas/ISODateTime"
      required:
      - name
      - parent_id
      - property_id
      - declared_area
    Region:
      allOf:
      - "$ref": "#/components/schemas/IdentifiedModel"
      - "$ref": "#/components/schemas/BasicRegionV2"
      title: Region
      type: object
      description: A `Region` (or its subtype `Field`) represented by a GeoJSON Feature.
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.2
      properties:
        type:
          type: string
          enum:
          - Feature
        id:
          "$ref": "#/components/schemas/UUID"
        geometry:
          "$ref": "#/components/schemas/Geometry"
        properties:
          "$ref": "#/components/schemas/RegionProperties"
        event_date:
          "$ref": "#/components/schemas/ISODateTime"
      required:
      - type
      - id
      - geometry
    BasicRegion:
      title: Region
      description: ''
      type: object
      x-tags:
      - Region
      properties:
        name:
          type: string
        parent_id:
          "$ref": "#/components/schemas/UUID"
        property_id:
          "$ref": "#/components/schemas/UUID"
      required:
      - name
      - parent_id
      - property_id
    OutputParent:
      allOf:
      - "$ref": "#/components/schemas/IdentifiedModel"
      - "$ref": "#/components/schemas/BasicRegion"
      title: OutPut Parent
    BasicField:
      title: Basic Field
      description: Basic model for Field representation
      type: object
      x-tags:
      - Field
      properties:
        name:
          type: string
        parent_region_id:
          "$ref": "#/components/schemas/UUID"
        property_id:
          "$ref": "#/components/schemas/UUID"
        declared_area:
          type: number
        calculated_area:
          type: number
        geometry:
          "$ref": "#/components/schemas/Geometry"
        tags:
          type: array
          items:
            type: string
        reference_point:
          "$ref": "#/components/schemas/Point"
      required:
      - name
      - parent_region_id
      - property_id
      - declared_area
      allOf:
      - "$ref": "#/components/schemas/NamedModel"
      - type: object
        properties:
          property_id:
            "$ref": "#/components/schemas/UUID"
          parent_region_id:
            "$ref": "#/components/schemas/UUID"
          declared_area:
            "$ref": "#/components/schemas/AreaSize"
          geometry:
            "$ref": "#/components/schemas/Geometry"
          tags:
            type: array
            items:
              type: string
          json_extended_attributes:
            "$ref": "#/components/schemas/BasicExtendedAttribute"
          event_date:
            "$ref": "#/components/schemas/ISODateTime"
        required:
        - name
        - property_id
    OutputRegionDTO:
      type: object
      properties:
        fields:
          type: array
          items:
            "$ref": "#/components/schemas/BasicField"
        childrenRegion:
          type: array
          items:
            "$ref": "#/components/schemas/OutputRegionDTO"
        id:
          "$ref": "#/components/schemas/UUID"
        name:
          type: string
        parent_id:
          "$ref": "#/components/schemas/UUID"
        property_id:
          "$ref": "#/components/schemas/UUID"
        created_at:
          "$ref": "#/components/schemas/ISODateTime"
        last_modified:
          "$ref": "#/components/schemas/ISODateTime"
        deleted_at:
          type: boolean
        declared_area:
          type: number
        calculated_area:
          type: number
        event_date:
          "$ref": "#/components/schemas/ISODateTime"
      title: OutputRegionDTO
    BaseRegionHistoryDTO:
      type: object
      properties:
        current:
          "$ref": "#/components/schemas/BaseRegionVersionDTO"
        history:
          type: array
          items:
            "$ref": "#/components/schemas/BaseRegionVersionDTO"
      title: BaseRegionHistoryDTO
    BaseRegionVersionDTO:
      type: object
      properties:
        calculated_area:
          type: number
          format: double
        created_at:
          type: string
          format: date-time
        declared_area:
          type: number
          format: double
        deleted_at:
          type: string
          format: date-time
        event_date:
          type: string
          format: date-time
        geometry:
          type: string
        id:
          type: string
          format: uuid
        last_modified:
          type: string
          format: date-time
        name:
          type: string
        parent_id:
          type: string
          format: uuid
        property_id:
          type: string
          format: uuid
        reference_point:
          type: string
        version_id:
          type: string
          format: uuid
      title: BaseRegionVersionDTO
    PagedRegion:
      title: Paged Region
      description: Info of `Region`
      x-tags:
      - Region
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              allOf:
              - "$ref": "#/components/schemas/BasicRegionV2"
      - "$ref": "#/components/schemas/PageableMetadata"
    Field:
      allOf:
      - "$ref": "#/components/schemas/IdentifiedModel"
      - "$ref": "#/components/schemas/BasicField"
      title: Field
    PagedField:
      title: Paged Field
      description: Info of `Fields`
      x-tags:
      - Field
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/Field"
      - "$ref": "#/components/schemas/PageableMetadata"
    FieldHistoryDTO:
      type: object
      properties:
        current:
          "$ref": "#/components/schemas/FieldVersionDTO"
        history:
          type: array
          items:
            "$ref": "#/components/schemas/FieldVersionDTO"
      title: FieldHistoryDTO
    FieldVersionDTO:
      type: object
      properties:
        name:
          type: string
        parent_region_id:
          type: string
          format: uuid
        property_id:
          type: string
          format: uuid
        calculated_area:
          type: number
          format: double
        created_at:
          type: string
          format: date-time
        declared_area:
          type: number
          format: double
        deleted_at:
          type: string
          format: date-time
        event_date:
          type: string
          format: date-time
        geometry:
          type: string
        id:
          type: string
          format: uuid
        tags:
          type: array
          items:
            type: string
        last_modified:
          type: string
          format: date-time
        reference_point:
          type: string
        version_id:
          type: string
          format: uuid
      title: AreaVersionDTO
    EditableProperty:
      title: Basic Property
      description: Basic info of a `Property` to be edited
      allOf:
      - "$ref": "#/components/schemas/NamedModel"
      - type: object
        properties:
          org_id:
            "$ref": "#/components/schemas/UUID"
          root_region_id:
            "$ref": "#/components/schemas/UUID"
          time_zone:
            "$ref": "#/components/schemas/TimeZone"
          country:
            type: string
          state:
            type: string
          city:
            type: string
          address:
            type: string
          zip_code:
            type: string
          place_id:
            type: string
          fields_updated_at:
            "$ref": "#/components/schemas/ISODateTime"
          reference_point:
            "$ref": "#/components/schemas/Point"
          regulatory_zone:
            "$ref": "#/components/schemas/ISO3166Alpha2Code"
          json_extended_attributes:
            "$ref": "#/components/schemas/BasicExtendedAttribute"
        required:
        - org_id
        - reference_point
        - time_zone
    BasicProperty:
      title: Basic Property
      description: Basic info of a `Property` to be used
      x-examples:
        Valid Property example:
          org_id: 6d5ccc3b-bf9a-4678-a6fb-0b9f7b9eb425
          name: Sample Farm
          time_zone: America/Sao_Paulo
          country: Brazil
          state: MG
          city: BH
          address: rua
          zip_code: 33333-111
          place_id: ChIJrTLr-GyuEmsRBfy61i59si0
          json_extended_attributes:
            name: string
          reference_point:
            type: Point
            coordinates:
            - 3
            - 4
      x-tags:
      - Property
      allOf:
      - "$ref": "#/components/schemas/EditableProperty"
      - type: object
        properties:
          declared_area:
            "$ref": "#/components/schemas/AreaSize"
          total_area:
            "$ref": "#/components/schemas/AreaSize"
          deleted:
            type: boolean
        required:
        - org_id
        - time_zone
        - reference_point
    Property:
      title: Property
      description: ''
      x-examples:
        Valid property example:
          org_id: 6d5ccc3b-bf9a-4678-a6fb-0b9f7b9eb425
          name: Sample Farm
          time_zone: America/Sao_Paulo
          country: Brazil
          state: MG
          city: BH
          address: rua
          zip_code: 33333-111
          place_id: ChIJrTLr-GyuEmsRBfy61i59si0
          json_extended_attributes:
            name: string
          reference_point:
            type: Point
            coordinates:
            - 3
            - 4
          id: 915f59f9-e351-4ab7-974a-41c347826cfa
      x-tags:
      - Property
      allOf:
      - "$ref": "#/components/schemas/IdentifiedModel"
      - "$ref": "#/components/schemas/BasicProperty"
    PagedProperty:
      title: Paged Property
      description: Info of `Properties`
      x-tags:
      - Property
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/Property"
      - "$ref": "#/components/schemas/PageableMetadata"
    PropertyFieldsHistoryDTO:
      type: object
      properties:
        fields:
          type: array
          items:
            "$ref": "#/components/schemas/PropertyFieldVersionDTO"
      title: PropertyFieldsHistoryDTO
    PropertyFieldVersionDTO:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/UUID"
        versions:
          type: array
          items:
            "$ref": "#/components/schemas/FieldVersionDTO"
      title: PropertyFieldVersionDTO
    BasePropertyRegionsHistoryDTO:
      type: object
      properties:
        regions:
          type: array
          items:
            "$ref": "#/components/schemas/BasePropertyRegionVersionDTO"
      title: BasePropertyRegionsHistoryDTO
    BasePropertyRegionVersionDTO:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/UUID"
        versions:
          type: array
          items:
            "$ref": "#/components/schemas/BaseRegionVersionDTO"
    ISO3166Alpha2Code:
      title: A two letter country code
      type: object
      properties:
        iso3166_alpha2_code:
          type: string
          enum:
          - AF
          - AX
          - AL
          - DZ
          - AS
          - AD
          - AO
          - AI
          - AQ
          - AG
          - AR
          - AM
          - AW
          - AU
          - AT
          - AZ
          - BS
          - BH
          - BD
          - BB
          - BY
          - BE
          - BZ
          - BJ
          - BM
          - BT
          - BO
          - BQ
          - BA
          - BW
          - BV
          - BR
          - IO
          - BN
          - BG
          - BF
          - BI
          - KH
          - CM
          - CA
          - CV
          - KY
          - CF
          - TD
          - CL
          - CN
          - CX
          - CC
          - CO
          - KM
          - CG
          - CD
          - CK
          - CR
          - CI
          - HR
          - CU
          - CW
          - CY
          - CZ
          - DK
          - DJ
          - DM
          - DO
          - EC
          - EG
          - SV
          - GQ
          - ER
          - EE
          - ET
          - FK
          - FO
          - FJ
          - FI
          - FR
          - GF
          - PF
          - TF
          - GA
          - GM
          - GE
          - DE
          - GH
          - GI
          - GR
          - GL
          - GD
          - GP
          - GU
          - GT
          - GG
          - GN
          - GW
          - GY
          - HT
          - HM
          - VA
          - HN
          - HK
          - HU
          - IS
          - IN
          - ID
          - IR
          - IQ
          - IE
          - IM
          - IL
          - IT
          - JM
          - JP
          - JE
          - JO
          - KZ
          - KE
          - KI
          - KP
          - KR
          - KW
          - KG
          - LA
          - LV
          - LB
          - LS
          - LR
          - LY
          - LI
          - LT
          - LU
          - MO
          - MK
          - MG
          - MW
          - MY
          - MV
          - ML
          - MT
          - MH
          - MQ
          - MR
          - MU
          - YT
          - MX
          - FM
          - MD
          - MC
          - MN
          - ME
          - MS
          - MA
          - MZ
          - MM
          - NA
          - NR
          - NP
          - NL
          - NC
          - NZ
          - NI
          - NE
          - NG
          - NU
          - NF
          - MP
          - 'NO'
          - OM
          - PK
          - PW
          - PS
          - PA
          - PG
          - PY
          - PE
          - PH
          - PN
          - PL
          - PT
          - PR
          - QA
          - RE
          - RO
          - RU
          - RW
          - BL
          - SH
          - KN
          - LC
          - MF
          - PM
          - VC
          - WS
          - SM
          - ST
          - SA
          - SN
          - RS
          - SC
          - SL
          - SG
          - SX
          - SK
          - SI
          - SB
          - SO
          - ZA
          - GS
          - SS
          - ES
          - LK
          - SD
          - SR
          - SJ
          - SZ
          - SE
          - CH
          - SY
          - TW
          - TJ
          - TZ
          - TH
          - TL
          - TG
          - TK
          - TO
          - TT
          - TN
          - TR
          - TM
          - TC
          - TV
          - UG
          - UA
          - AE
          - GB
          - US
          - UM
          - UY
          - UZ
          - VU
          - VE
          - VN
          - VG
          - VI
          - WF
          - EH
          - YE
          - ZM
          - ZW
    ISO3166Alpha2Object:
      title: Object Specification of ISO3166Alpha2
      description: ''
      allOf:
      - "$ref": "#/components/schemas/IdentifiedModel"
      - "$ref": "#/components/schemas/ISO3166Alpha2Code"
      - type: object
        properties:
          country_name:
            type: string
            enum:
            - Afghanistan
            - Åland Islands
            - Albania
            - Algeria
            - American Samoa
            - Andorra
            - Angola
            - Anguilla
            - Antarctica
            - Antigua and Barbuda
            - Argentina
            - Armenia
            - Aruba
            - Australia
            - Austria
            - Azerbaijan
            - Bahamas
            - Bahrain
            - Bangladesh
            - Barbados
            - Belarus
            - Belgium
            - Belize
            - Benin
            - Bermuda
            - Bhutan
            - Bolivia, Plurinational State of
            - Bonaire, Sint Eustatius and Saba
            - Bosnia and Herzegovina
            - Botswana
            - Bouvet Island
            - Brazil
            - British Indian Ocean Territory
            - Brunei Darussalam
            - Bulgaria
            - Burkina Faso
            - Burundi
            - Cambodia
            - Cameroon
            - Canada
            - Cape Verde
            - Cayman Islands
            - Central African Republic
            - Chad
            - Chile
            - China
            - Christmas Island
            - Cocos (Keeling) Islands
            - Colombia
            - Comoros
            - Congo
            - Congo, the Democratic Republic of the
            - Cook Islands
            - Costa Rica
            - Côte d'Ivoire
            - Croatia
            - Cuba
            - Curaçao
            - Cyprus
            - Czech Republic
            - Denmark
            - Djibouti
            - Dominica
            - Dominican Republic
            - Ecuador
            - Egypt
            - El Salvador
            - Equatorial Guinea
            - Eritrea
            - Estonia
            - Ethiopia
            - Falkland Islands (Malvinas)
            - Faroe Islands
            - Fiji
            - Finland
            - France
            - French Guiana
            - French Polynesia
            - French Southern Territories
            - Gabon
            - Gambia
            - Georgia
            - Germany
            - Ghana
            - Gibraltar
            - Greece
            - Greenland
            - Grenada
            - Guadeloupe
            - Guam
            - Guatemala
            - Guernsey
            - Guinea
            - Guinea-Bissau
            - Guyana
            - Haiti
            - Heard Island and McDonald Islands
            - Holy See (Vatican City State)
            - Honduras
            - Hong Kong
            - Hungary
            - Iceland
            - India
            - Indonesia
            - Iran, Islamic Republic of
            - Iraq
            - Ireland
            - Isle of Man
            - Israel
            - Italy
            - Jamaica
            - Japan
            - Jersey
            - Jordan
            - Kazakhstan
            - Kenya
            - Kiribati
            - Korea, Democratic People's Republic of
            - Korea, Republic of
            - Kuwait
            - Kyrgyzstan
            - Lao People's Democratic Republic
            - Latvia
            - Lebanon
            - Lesotho
            - Liberia
            - Libya
            - Liechtenstein
            - Lithuania
            - Luxembourg
            - Macao
            - Macedonia, the Former Yugoslav Republic of
            - Madagascar
            - Malawi
            - Malaysia
            - Maldives
            - Mali
            - Malta
            - Marshall Islands
            - Martinique
            - Mauritania
            - Mauritius
            - Mayotte
            - Mexico
            - Micronesia, Federated States of
            - Moldova, Republic of
            - Monaco
            - Mongolia
            - Montenegro
            - Montserrat
            - Morocco
            - Mozambique
            - Myanmar
            - Namibia
            - Nauru
            - Nepal
            - Netherlands
            - New Caledonia
            - New Zealand
            - Nicaragua
            - Niger
            - Nigeria
            - Niue
            - Norfolk Island
            - Northern Mariana Islands
            - Norway
            - Oman
            - Pakistan
            - Palau
            - Palestine, State of
            - Panama
            - Papua New Guinea
            - Paraguay
            - Peru
            - Philippines
            - Pitcairn
            - Poland
            - Portugal
            - Puerto Rico
            - Qatar
            - Réunion
            - Romania
            - Russian Federation
            - Rwanda
            - Saint Barthélemy
            - Saint Helena, Ascension and Tristan da Cunha
            - Saint Kitts and Nevis
            - Saint Lucia
            - Saint Martin (French part)
            - Saint Pierre and Miquelon
            - Saint Vincent and the Grenadines
            - Samoa
            - San Marino
            - Sao Tome and Principe
            - Saudi Arabia
            - Senegal
            - Serbia
            - Seychelles
            - Sierra Leone
            - Singapore
            - Sint Maarten (Dutch part)
            - Slovakia
            - Slovenia
            - Solomon Islands
            - Somalia
            - South Africa
            - South Georgia and the South Sandwich Islands
            - South Sudan
            - Spain
            - Sri Lanka
            - Sudan
            - Suriname
            - Svalbard and Jan Mayen
            - Swaziland
            - Sweden
            - Switzerland
            - Syrian Arab Republic
            - Taiwan, Province of China
            - Tajikistan
            - Tanzania, United Republic of
            - Thailand
            - Timor-Leste
            - Togo
            - Tokelau
            - Tonga
            - Trinidad and Tobago
            - Tunisia
            - Turkey
            - Turkmenistan
            - Turks and Caicos Islands
            - Tuvalu
            - Uganda
            - Ukraine
            - United Arab Emirates
            - United Kingdom
            - United States
            - United States Minor Outlying Islands
            - Uruguay
            - Uzbekistan
            - Vanuatu
            - Venezuela, Bolivarian Republic of
            - Viet Nam
            - Virgin Islands, British
            - Virgin Islands, U.S.
            - Wallis and Futuna
            - Western Sahara
            - Yemen
            - Zambia
            - Zimbabwe
    PagedISO3166Alpha2Object:
      title: Paged ISO3166Alpha2Object
      description: A paged ISO3166Alpha2Object list
      x-tags:
      - Utils
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/ISO3166Alpha2Object"
      - "$ref": "#/components/schemas/PageableMetadata"
    BasicProduct:
      title: Basic Product
      description: ''
      allOf:
      - "$ref": "#/components/schemas/NamedModel"
      - type: object
        properties:
          unit_of_measurement:
            type: string
            enum:
            - KILOGRAMS
            - LITERS
            - UNITS
            - BOXS
            - SACK
            - GALLONS
            - GRAMS
            - TONNES
            - MILLILITER
            - METERS
            - OUNCES
            - POUNDS
            - PINTS
            - DOSE
      - type: object
        properties:
          type:
            type: string
            enum:
            - VARIETY
            - FUEL
            - PART
            - FERTILIZER
            - GENERIC_PRODUCT
            - PESTICIDE
            - ADJUVANT
            - LUBRICANT
            - INOCULANT
            - ACARICIDE
            - MICROBIOLOGICAL_ACARICIDE
            - BIOLOGICAL_CONTROL_AGENT
            - PLANT_ACTIVATOR
            - BACTERICIDE
            - MICROBIOLOGICAL_BACTERICIDE
            - TERMITICIDE
            - PHEROMONE
            - FORMICIDE
            - FUNGICIDE
            - MICROBIOLOGICAL_FUNGICIDE
            - HERBICIDE
            - INSECTICIDE
            - FUMIGANT_INSECTICIDE
            - MICROBIOLOGICAL_INSECTICIDE
            - MOLLUSCICIDE
            - NEMATICIDE
            - MICROBIOLOGICAL_NEMATICIDE
            - SEED_PROTECTOR
            - GROWTH_REGULATOR
            - STIMULATING
      - type: object
        properties:
          org_id:
            "$ref": "#/components/schemas/UUID"
          manufacturer:
            type: string
    ItemPagedProduct:
      title: Item paged product
      allOf:
      - "$ref": "#/components/schemas/BasicProduct"
      - "$ref": "#/components/schemas/IdentifiedNameModel"
    PagedProduct:
      title: Paged Product
      description: Info of a `Product` to be used
      x-tags:
      - Product
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/ItemPagedProduct"
      - "$ref": "#/components/schemas/PageableMetadata"
    ProductResponse:
      title: Product Created Response
      description: ''
      allOf:
      - "$ref": "#/components/schemas/BasicProduct"
      - "$ref": "#/components/schemas/IdentifiedModel"
    BasicOrganization:
      title: Basic Organization
      description: Model to be user on Organization creation
      x-tags:
      - Organization
      allOf:
      - "$ref": "#/components/schemas/NamedModel"
      - type: object
        properties:
          address:
            type: string
          city:
            type: string
          state:
            type: string
          country:
            type: string
          zip_code:
            type: string
          place_id:
            type: string
          phone:
            "$ref": "#/components/schemas/Phone"
          email:
            type: string
            format: email
          employer_identification_number:
            type: string
          currency:
            type: string
            enum:
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BOV
            - BRL
            - BSD
            - BTN
            - BWP
            - BYN
            - BZD
            - CAD
            - CDF
            - CHE
            - CHF
            - CHW
            - CLF
            - CLP
            - CNY
            - COP
            - COU
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - GBP
            - GEL
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - INR
            - IQD
            - IRR
            - ISK
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRU
            - MUR
            - MVR
            - MWK
            - MXN
            - MXV
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLL
            - SOS
            - SRD
            - SSP
            - STN
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - USN
            - UYI
            - UYU
            - UYW
            - UZS
            - VES
            - VND
            - VUV
            - WST
            - XAF
            - XAG
            - XAU
            - XBA
            - XBB
            - XBC
            - XBD
            - XCD
            - XDR
            - XOF
            - XPD
            - XPF
            - XPT
            - XSU
            - XTS
            - XUA
            - XXX
            - YER
            - ZAR
            - ZMW
            - ZWL
          unit_system:
            type: string
            enum:
            - METRIC
            - IMPERIAL
          deleted:
            type: boolean
          reference_point:
            "$ref": "#/components/schemas/Point"
          picture_url:
            type: string
            format: uri
          json_extended_attributes:
            "$ref": "#/components/schemas/BasicExtendedAttribute"
          licensing_account_id:
            "$ref": "#/components/schemas/UUID"
          workspace_id:
            "$ref": "#/components/schemas/UUID"
        required:
        - currency
        - unit_system
        - workspace_id
    Organization:
      allOf:
      - "$ref": "#/components/schemas/IdentifiedModel"
      - "$ref": "#/components/schemas/BasicOrganization"
      title: Organization
      x-examples:
        Valid organization:
          name: Test user's Company
          address: Inconfidentes St, 911
          city: Belo Horizonte
          state: Minas Gerais
          country: Brazil
          zip_code: 33000-999
          place_id: ChIJrTLr-GyuEmsRBfy61i59si0
          currency: USD
          unit_system: METRIC
          phone: "+5531911112222"
          json_extended_attributes:
            name: string
          id: 34550190-7d4f-4a03-91ec-4f5568e50029
    PagedOrg:
      title: Paged Organization
      description: Info of `Organizations`
      x-tags:
      - Organization
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              allOf:
              - "$ref": "#/components/schemas/Organization"
      - "$ref": "#/components/schemas/PageableMetadata"
    BasicInviteStatus:
      title: Invite Status
      description: ''
      allOf:
      - "$ref": "#/components/schemas/IdentifiedNameModel"
      - type: object
        properties:
          name:
            type: string
          email_address:
            type: string
          reference:
            type: string
          login:
            type: string
          phone:
            type: string
          account_role:
            type: string
            enum:
            - GROWER
            - MANAGER
            - ADMIN
            - DEALER
            - CONSULTANT
            - AGRONOMIST
            - OTHER
          user_invite_status:
            type: string
            enum:
            - PENDING
            - ACCEPTED
            - EXPIRED
            - ONE_STEP
            - CONCIERGE
            - BY_LOGIN
          inviter_user_id:
            "$ref": "#/components/schemas/UUID"
          invitee_user_id:
            "$ref": "#/components/schemas/UUID"
          sent_invite_date:
            "$ref": "#/components/schemas/ISODateTime"
          accepted_invite_date:
            "$ref": "#/components/schemas/ISODateTime"
          user_accept_status:
            type: string
            enum:
            - PENDING
            - MANUAL
            - AUTOMATIC
    PagedInviteStatus:
      title: Invite Status
      description: Info of a `Invite Status`
      x-tags:
      - Organization
      allOf:
      - type: object
        properties:
          content:
            type: object
            allOf:
            - "$ref": "#/components/schemas/BasicInviteStatus"
      - "$ref": "#/components/schemas/PageableMetadata"
    TaskFilters:
      title: Filters for Task
      description: Filters for Task
      allOf:
      - type: object
        properties:
          property_ids:
            type: array
            items:
              "$ref": "#/components/schemas/UUID"
          season_ids:
            type: array
            items:
              "$ref": "#/components/schemas/UUID"
          field_ids:
            type: array
            items:
              "$ref": "#/components/schemas/UUID"
          region_ids:
            type: array
            items:
              "$ref": "#/components/schemas/UUID"
          season_field_ids:
            type: array
            items:
              "$ref": "#/components/schemas/UUID"
          status_ids:
            type: array
            items:
              "$ref": "#/components/schemas/UUID"
          tags:
            type: array
            items:
              type: string
    BasicExtendedAttribute:
      type: object
      properties:
        name:
          type: string
    PermissionDTO:
      type: object
      properties:
        resource:
          type: string
        action:
          type: array
          items:
            type: string
    PolicyDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        context:
          type: string
        version:
          type: integer
        level:
          type: string
        quota:
          type: array
          items:
            "$ref": "#/components/schemas/PermissionDTO"
    Point:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      allOf:
      - "$ref": "#/components/schemas/Geometry"
      - properties:
          coordinates:
            "$ref": "#/components/schemas/Point3D"
      x-tags:
      - GeoJSON
    Geometry:
      type: object
      description: GeoJSON Geometry
      required:
      - type
      externalDocs:
        url: http://geojson.org/geojson-spec.html#geometry-objects
      properties:
        type:
          type: string
          description: The geometry type, it should be only ['Polygon', 'MultiPolygon',
            'Point']
      discriminator:
        propertyName: type
      x-tags:
      - GeoJSON
    Point3D:
      type: array
      description: Point in 3D space
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      minItems: 2
      maxItems: 3
      items:
        type: number
      x-tags:
      - GeoJSON
    Polygon:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id4
      allOf:
      - "$ref": "#/components/schemas/Geometry"
      - properties:
          coordinates:
            type: array
            items:
              type: array
              items:
                "$ref": "#/components/schemas/Point3D"
    MultiPolygon:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      allOf:
      - "$ref": "#/components/schemas/Geometry"
      - properties:
          coordinates:
            type: array
            items:
              type: array
              items:
                type: array
                items:
                  "$ref": "#/components/schemas/Point3D"
    GeometryCollection:
      type: object
      description: GeoJSON geometry collection
      required:
      - type
      - geometries
      externalDocs:
        url: http://geojson.org/geojson-spec.html#geometrycollection
      properties:
        type:
          type: string
          enum:
          - GeometryCollection
        geometries:
          type: array
          items:
            "$ref": "#/components/schemas/Geometry"
    Feature:
      type: object
      description: GeoJSON Feature
      required:
      - type
      - id
      - geometry
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.2
      properties:
        type:
          type: string
          enum:
          - Feature
        id:
          type: string
        geometry:
          "$ref": "#/components/schemas/Geometry"
        properties:
          type: object
    FeatureCollection:
      type: object
      description: GeoJSON Feature collection
      required:
      - type
      - features
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.3
      properties:
        type:
          type: string
          enum:
          - FeatureCollection
        features:
          type: array
          items:
            "$ref": "#/components/schemas/Feature"
    Sort:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
      title: Sort
    Pageable:
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          "$ref": "#/components/schemas/Sort"
      title: Pageable
    PageableMetadata:
      type: object
      properties:
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        number_of_elements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        total_elements:
          type: integer
          format: int64
        total_pages:
          type: integer
        sort:
          "$ref": "#/components/schemas/Sort"
        pageable:
          "$ref": "#/components/schemas/Pageable"
      format: int32
    BasicVariety:
      title: Basic Variety
      description: ''
      allOf:
      - "$ref": "#/components/schemas/IdentifiedNameModel"
      - "$ref": "#/components/schemas/Manufacturer"
      - type: object
        properties:
          unit_of_measurement:
            type: string
            enum:
            - KILOGRAMS
            - LITERS
            - UNITS
            - BOXS
            - SACK
            - GALLONS
            - GRAMS
            - TONNES
            - MILLILITER
            - METERS
            - OUNCES
            - POUNDS
            - PINTS
            - DOSE
    PagedVariety:
      title: Paged Variety
      description: Info of a `Variety` to be used
      x-tags:
      - Variety
      allOf:
      - type: object
        properties:
          content:
            type: object
            allOf:
            - "$ref": "#/components/schemas/IdentifiedNameModel"
            - "$ref": "#/components/schemas/BasicVariety"
      - "$ref": "#/components/schemas/PageableMetadata"
    Manufacturer:
      title: Manufacturer
      description: ''
      allOf:
      - "$ref": "#/components/schemas/IdentifiedNameModel"
    ISODateTime:
      title: String with a date format
      description: 'Full-date notation as defined by RFC 3339, section 5.6, for example,
        2017-07-21

        '
      externalDocs:
        url: https://tools.ietf.org/html/rfc3339#section-5.6
      type: string
      example: '2019-10-02'
      format: date-time
      x-tags:
      - Commons
    UUID:
      type: string
      title: UUID Canonical textual representation
      description: |
        A v4 UUID, represented in its canonical textual form (hexadecimal, lowercase, 8-4-4-4-12 groups separated
        by a dash (-)).
      format: uuid
      example: bf1ac975-482e-405d-a9f0-efe8ad7d7481
      x-tags:
      - Commons
    Base64:
      type: string
      title: Base64 Encoded Data
      description: |
        The Base 64 encoding is designed to represent arbitrary sequences of
        octets in a form that allows the use of both upper- and lowercase
        letters but that need not be human readable.
      externalDocs:
        url: https://tools.ietf.org/html/rfc4648#section-4
      format: byte
      example: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdCwgc2VkIGRvIGVpdXNtb2QgdGVtcG9yIGluY2lkaWR1bnQgdXQgbGFib3JlIGV0IGRvbG9yZSBtYWduYSBhbGlxdWFhCg==
      x-examples:
        Simple Example:
          b64_field: U2ltcGxlIEV4YW1wbGU=
      x-tags:
      - Commons
    ErrorCollection:
      title: Error Collection
      type: object
      properties:
        errors:
          type: array
          items:
            "$ref": "#/components/schemas/BasicError"
        timestamp:
          "$ref": "#/components/schemas/ISODateTime"
        status:
          type: integer
        path:
          type: string
      required:
      - errors
      - timestamp
      - status
      - path
      x-tags:
      - Commons
      - Errors
    SimpleError:
      type: object
      properties:
        field:
          type: string
          example: id, name, propertyName
        reason:
          type: string
          example: Failed to convert value of type 'java.lang.String' to required
            type ...
    BasicError:
      type: object
      properties:
        code:
          type: string
          description: Error code.
        message:
          type: string
          description: A human-readable message describing the error.
        status:
          type: integer
        path:
          type: string
        error:
          type: string
        timestamp:
          "$ref": "#/components/schemas/ISODateTime"
        errors:
          type: array
          items:
            "$ref": "#/components/schemas/SimpleError"
      required:
      - code
      - message
      title: Basic Error
      x-examples:
        Error Example 1:
          timestamp: '2019-02-27T04:21:17.740+0000'
          status: 400
          error: Bad request
          code: E00100
          message: Account already exists for email example@example.com
          path: "/signup"
          errors:
          - field: id
            reason: Failed to convert value of type 'java.lang.String' to required
              type ...
      x-tags:
      - Commons
      - Errors
    Phone:
      type: string
      title: Phone Number
      description: 'E.164 international phone number formatting

        '
      externalDocs:
        url: https://www.itu.int/rec/T-REC-E.164/en
      example: "+5531900000000"
      x-tags:
      - Commons
    TimeZone:
      title: TimeZone
      type: string
      enum:
      - Africa/Abidjan
      - Africa/Accra
      - Africa/Addis_Ababa
      - Africa/Algiers
      - Africa/Asmara
      - Africa/Asmera
      - Africa/Bamako
      - Africa/Bangui
      - Africa/Banjul
      - Africa/Bissau
      - Africa/Blantyre
      - Africa/Brazzaville
      - Africa/Bujumbura
      - Africa/Cairo
      - Africa/Casablanca
      - Africa/Ceuta
      - Africa/Conakry
      - Africa/Dakar
      - Africa/Dar_es_Salaam
      - Africa/Djibouti
      - Africa/Douala
      - Africa/El_Aaiun
      - Africa/Freetown
      - Africa/Gaborone
      - Africa/Harare
      - Africa/Johannesburg
      - Africa/Juba
      - Africa/Kampala
      - Africa/Khartoum
      - Africa/Kigali
      - Africa/Kinshasa
      - Africa/Lagos
      - Africa/Libreville
      - Africa/Lome
      - Africa/Luanda
      - Africa/Lubumbashi
      - Africa/Lusaka
      - Africa/Malabo
      - Africa/Maputo
      - Africa/Maseru
      - Africa/Mbabane
      - Africa/Mogadishu
      - Africa/Monrovia
      - Africa/Nairobi
      - Africa/Ndjamena
      - Africa/Niamey
      - Africa/Nouakchott
      - Africa/Ouagadougou
      - Africa/Porto-Novo
      - Africa/Sao_Tome
      - Africa/Timbuktu
      - Africa/Tripoli
      - Africa/Tunis
      - Africa/Windhoek
      - America/Adak
      - America/Anchorage
      - America/Anguilla
      - America/Antigua
      - America/Araguaina
      - America/Argentina/Buenos_Aires
      - America/Argentina/Catamarca
      - America/Argentina/ComodRivadavia
      - America/Argentina/Cordoba
      - America/Argentina/Jujuy
      - America/Argentina/La_Rioja
      - America/Argentina/Mendoza
      - America/Argentina/Rio_Gallegos
      - America/Argentina/Salta
      - America/Argentina/San_Juan
      - America/Argentina/San_Luis
      - America/Argentina/Tucuman
      - America/Argentina/Ushuaia
      - America/Aruba
      - America/Asuncion
      - America/Atikokan
      - America/Atka
      - America/Bahia
      - America/Bahia_Banderas
      - America/Barbados
      - America/Belem
      - America/Belize
      - America/Blanc-Sablon
      - America/Boa_Vista
      - America/Bogota
      - America/Boise
      - America/Buenos_Aires
      - America/Cambridge_Bay
      - America/Campo_Grande
      - America/Cancun
      - America/Caracas
      - America/Catamarca
      - America/Cayenne
      - America/Cayman
      - America/Chicago
      - America/Chihuahua
      - America/Coral_Harbour
      - America/Cordoba
      - America/Costa_Rica
      - America/Creston
      - America/Cuiaba
      - America/Curacao
      - America/Danmarkshavn
      - America/Dawson
      - America/Dawson_Creek
      - America/Denver
      - America/Detroit
      - America/Dominica
      - America/Edmonton
      - America/Eirunepe
      - America/El_Salvador
      - America/Ensenada
      - America/Fort_Nelson
      - America/Fort_Wayne
      - America/Fortaleza
      - America/Glace_Bay
      - America/Godthab
      - America/Goose_Bay
      - America/Grand_Turk
      - America/Grenada
      - America/Guadeloupe
      - America/Guatemala
      - America/Guayaquil
      - America/Guyana
      - America/Halifax
      - America/Havana
      - America/Hermosillo
      - America/Indiana/Indianapolis
      - America/Indiana/Knox
      - America/Indiana/Marengo
      - America/Indiana/Petersburg
      - America/Indiana/Tell_City
      - America/Indiana/Vevay
      - America/Indiana/Vincennes
      - America/Indiana/Winamac
      - America/Indianapolis
      - America/Inuvik
      - America/Iqaluit
      - America/Jamaica
      - America/Jujuy
      - America/Juneau
      - America/Kentucky/Louisville
      - America/Kentucky/Monticello
      - America/Knox_IN
      - America/Kralendijk
      - America/La_Paz
      - America/Lima
      - America/Los_Angeles
      - America/Louisville
      - America/Lower_Princes
      - America/Maceio
      - America/Managua
      - America/Manaus
      - America/Marigot
      - America/Martinique
      - America/Matamoros
      - America/Mazatlan
      - America/Mendoza
      - America/Menominee
      - America/Merida
      - America/Metlakatla
      - America/Mexico_City
      - America/Miquelon
      - America/Moncton
      - America/Monterrey
      - America/Montevideo
      - America/Montreal
      - America/Montserrat
      - America/Nassau
      - America/New_York
      - America/Nipigon
      - America/Nome
      - America/Noronha
      - America/North_Dakota/Beulah
      - America/North_Dakota/Center
      - America/North_Dakota/New_Salem
      - America/Ojinaga
      - America/Panama
      - America/Pangnirtung
      - America/Paramaribo
      - America/Phoenix
      - America/Port-au-Prince
      - America/Port_of_Spain
      - America/Porto_Acre
      - America/Porto_Velho
      - America/Puerto_Rico
      - America/Rainy_River
      - America/Rankin_Inlet
      - America/Recife
      - America/Regina
      - America/Resolute
      - America/Rio_Branco
      - America/Rosario
      - America/Santa_Isabel
      - America/Santarem
      - America/Santiago
      - America/Santo_Domingo
      - America/Sao_Paulo
      - America/Scoresbysund
      - America/Shiprock
      - America/Sitka
      - America/St_Barthelemy
      - America/St_Johns
      - America/St_Kitts
      - America/St_Lucia
      - America/St_Thomas
      - America/St_Vincent
      - America/Swift_Current
      - America/Tegucigalpa
      - America/Thule
      - America/Thunder_Bay
      - America/Tijuana
      - America/Toronto
      - America/Tortola
      - America/Vancouver
      - America/Virgin
      - America/Whitehorse
      - America/Winnipeg
      - America/Yakutat
      - America/Yellowknife
      - Antarctica/Casey
      - Antarctica/Davis
      - Antarctica/DumontDUrville
      - Antarctica/Macquarie
      - Antarctica/Mawson
      - Antarctica/McMurdo
      - Antarctica/Palmer
      - Antarctica/Rothera
      - Antarctica/South_Pole
      - Antarctica/Syowa
      - Antarctica/Troll
      - Antarctica/Vostok
      - Arctic/Longyearbyen
      - Asia/Aden
      - Asia/Almaty
      - Asia/Amman
      - Asia/Anadyr
      - Asia/Aqtau
      - Asia/Aqtobe
      - Asia/Ashgabat
      - Asia/Ashkhabad
      - Asia/Baghdad
      - Asia/Bahrain
      - Asia/Baku
      - Asia/Bangkok
      - Asia/Beirut
      - Asia/Bishkek
      - Asia/Brunei
      - Asia/Calcutta
      - Asia/Chita
      - Asia/Choibalsan
      - Asia/Chongqing
      - Asia/Chungking
      - Asia/Colombo
      - Asia/Dacca
      - Asia/Damascus
      - Asia/Dhaka
      - Asia/Dili
      - Asia/Dubai
      - Asia/Dushanbe
      - Asia/Gaza
      - Asia/Harbin
      - Asia/Hebron
      - Asia/Ho_Chi_Minh
      - Asia/Hong_Kong
      - Asia/Hovd
      - Asia/Irkutsk
      - Asia/Istanbul
      - Asia/Jakarta
      - Asia/Jayapura
      - Asia/Jerusalem
      - Asia/Kabul
      - Asia/Kamchatka
      - Asia/Karachi
      - Asia/Kashgar
      - Asia/Kathmandu
      - Asia/Katmandu
      - Asia/Khandyga
      - Asia/Kolkata
      - Asia/Krasnoyarsk
      - Asia/Kuala_Lumpur
      - Asia/Kuching
      - Asia/Kuwait
      - Asia/Macao
      - Asia/Macau
      - Asia/Magadan
      - Asia/Makassar
      - Asia/Manila
      - Asia/Muscat
      - Asia/Nicosia
      - Asia/Novokuznetsk
      - Asia/Novosibirsk
      - Asia/Omsk
      - Asia/Oral
      - Asia/Phnom_Penh
      - Asia/Pontianak
      - Asia/Pyongyang
      - Asia/Qatar
      - Asia/Qyzylorda
      - Asia/Rangoon
      - Asia/Riyadh
      - Asia/Saigon
      - Asia/Sakhalin
      - Asia/Samarkand
      - Asia/Seoul
      - Asia/Shanghai
      - Asia/Singapore
      - Asia/Srednekolymsk
      - Asia/Taipei
      - Asia/Tashkent
      - Asia/Tbilisi
      - Asia/Tehran
      - Asia/Tel_Aviv
      - Asia/Thimbu
      - Asia/Thimphu
      - Asia/Tokyo
      - Asia/Ujung_Pandang
      - Asia/Ulaanbaatar
      - Asia/Ulan_Bator
      - Asia/Urumqi
      - Asia/Ust-Nera
      - Asia/Vientiane
      - Asia/Vladivostok
      - Asia/Yakutsk
      - Asia/Yekaterinburg
      - Asia/Yerevan
      - Atlantic/Azores
      - Atlantic/Bermuda
      - Atlantic/Canary
      - Atlantic/Cape_Verde
      - Atlantic/Faeroe
      - Atlantic/Faroe
      - Atlantic/Jan_Mayen
      - Atlantic/Madeira
      - Atlantic/Reykjavik
      - Atlantic/South_Georgia
      - Atlantic/St_Helena
      - Atlantic/Stanley
      - Australia/ACT
      - Australia/Adelaide
      - Australia/Brisbane
      - Australia/Broken_Hill
      - Australia/Canberra
      - Australia/Currie
      - Australia/Darwin
      - Australia/Eucla
      - Australia/Hobart
      - Australia/LHI
      - Australia/Lindeman
      - Australia/Lord_Howe
      - Australia/Melbourne
      - Australia/North
      - Australia/NSW
      - Australia/Perth
      - Australia/Queensland
      - Australia/South
      - Australia/Sydney
      - Australia/Tasmania
      - Australia/Victoria
      - Australia/West
      - Australia/Yancowinna
      - Canada/Atlantic
      - Canada/Central
      - Canada/East-Saskatchewan
      - Canada/Eastern
      - Canada/Mountain
      - Canada/Newfoundland
      - Canada/Pacific
      - Canada/Saskatchewan
      - Canada/Yukon
      - Chile/Continental
      - Chile/EasterIsland
      - Cuba
      - Egypt
      - Eire
      - Europe/Amsterdam
      - Europe/Andorra
      - Europe/Athens
      - Europe/Belfast
      - Europe/Belgrade
      - Europe/Berlin
      - Europe/Bratislava
      - Europe/Brussels
      - Europe/Bucharest
      - Europe/Budapest
      - Europe/Busingen
      - Europe/Chisinau
      - Europe/Copenhagen
      - Europe/Dublin
      - Europe/Gibraltar
      - Europe/Guernsey
      - Europe/Helsinki
      - Europe/Isle_of_Man
      - Europe/Istanbul
      - Europe/Jersey
      - Europe/Kaliningrad
      - Europe/Kiev
      - Europe/Lisbon
      - Europe/Ljubljana
      - Europe/London
      - Europe/Luxembourg
      - Europe/Madrid
      - Europe/Malta
      - Europe/Mariehamn
      - Europe/Minsk
      - Europe/Monaco
      - Europe/Moscow
      - Europe/Nicosia
      - Europe/Oslo
      - Europe/Paris
      - Europe/Podgorica
      - Europe/Prague
      - Europe/Riga
      - Europe/Rome
      - Europe/Samara
      - Europe/San_Marino
      - Europe/Sarajevo
      - Europe/Simferopol
      - Europe/Skopje
      - Europe/Sofia
      - Europe/Stockholm
      - Europe/Tallinn
      - Europe/Tirane
      - Europe/Tiraspol
      - Europe/Uzhgorod
      - Europe/Vaduz
      - Europe/Vatican
      - Europe/Vienna
      - Europe/Vilnius
      - Europe/Volgograd
      - Europe/Warsaw
      - Europe/Zagreb
      - Europe/Zaporozhye
      - Europe/Zurich
      - Greenwich
      - Hongkong
      - Iceland
      - Indian/Antananarivo
      - Indian/Chagos
      - Indian/Christmas
      - Indian/Cocos
      - Indian/Comoro
      - Indian/Kerguelen
      - Indian/Mahe
      - Indian/Maldives
      - Indian/Mauritius
      - Indian/Mayotte
      - Indian/Reunion
      - Iran
      - Israel
      - Jamaica
      - Japan
      - Kwajalein
      - Libya
      - Mexico/BajaNorte
      - Mexico/BajaSur
      - Mexico/General
      - Navajo
      - Pacific/Apia
      - Pacific/Auckland
      - Pacific/Bougainville
      - Pacific/Chatham
      - Pacific/Chuuk
      - Pacific/Easter
      - Pacific/Efate
      - Pacific/Enderbury
      - Pacific/Fakaofo
      - Pacific/Fiji
      - Pacific/Funafuti
      - Pacific/Galapagos
      - Pacific/Gambier
      - Pacific/Guadalcanal
      - Pacific/Guam
      - Pacific/Honolulu
      - Pacific/Johnston
      - Pacific/Kiritimati
      - Pacific/Kosrae
      - Pacific/Kwajalein
      - Pacific/Majuro
      - Pacific/Marquesas
      - Pacific/Midway
      - Pacific/Nauru
      - Pacific/Niue
      - Pacific/Norfolk
      - Pacific/Noumea
      - Pacific/Pago_Pago
      - Pacific/Palau
      - Pacific/Pitcairn
      - Pacific/Pohnpei
      - Pacific/Ponape
      - Pacific/Port_Moresby
      - Pacific/Rarotonga
      - Pacific/Saipan
      - Pacific/Samoa
      - Pacific/Tahiti
      - Pacific/Tarawa
      - Pacific/Tongatapu
      - Pacific/Truk
      - Pacific/Wake
      - Pacific/Wallis
      - Pacific/Yap
      - Poland
      - Portugal
      - Singapore
      - Universal
      - US/Alaska
      - US/Aleutian
      - US/Arizona
      - US/Central
      - US/East-Indiana
      - US/Eastern
      - US/Hawaii
      - US/Indiana-Starke
      - US/Michigan
      - US/Mountain
      - US/Pacific
      - US/Pacific-New
      - US/Samoa
      x-tags:
      - Commons
    IdentifiedModel:
      title: IdentifiedModel
      type: object
      x-tags:
      - Commons
      properties:
        id:
          "$ref": "#/components/schemas/UUID"
      required:
      - id
    KeysListModel:
      title: KeysListModel
      type: object
      properties:
        keys:
          type: array
          items:
            type: string
    UUIDList:
      title: UUIDtModel
      type: array
      items:
        "$ref": "#/components/schemas/UUID"
    UUIDListModel:
      title: UUIDListModel
      type: object
      properties:
        ids:
          type: array
          items:
            "$ref": "#/components/schemas/UUID"
    NamedModel:
      title: NamedModel
      type: object
      x-tags:
      - Commons
      properties:
        name:
          type: string
      required:
      - name
    IdentifiedNameModel:
      allOf:
      - "$ref": "#/components/schemas/IdentifiedModel"
      - "$ref": "#/components/schemas/NamedModel"
      x-tags:
      - Commons
      title: Identified Name Model
      x-examples:
        Identified Name Model Example:
          id: Name
          name: 75cef3de-4247-4e14-a13a-7b5319f75e99
    AreaSize:
      type: number
      title: Area representation (ha)
      description: 'Area is always represented in Hectares

        '
      x-tags:
      - Commons
    BasicCatalogue:
      title: Basic Catalogue
      description: ''
      x-tags:
      - Catalogue
      allOf:
      - type: object
        properties:
          name:
            "$ref": "#/components/schemas/I18nString"
        required:
        - name
    Catalogue:
      allOf:
      - "$ref": "#/components/schemas/IdentifiedModel"
      - "$ref": "#/components/schemas/BasicCatalogue"
      title: Catalogue
      x-examples: {}
      x-tags:
      - Catalogue
    SimpleCatalogue:
      title: SimpleCatalogue
      allOf:
      - "$ref": "#/components/schemas/IdentifiedNameModel"
    I18nString:
      title: I18nString
      type: object
      properties:
        localized_strings:
          type: object
          additionalProperties:
            type: string
      x-examples:
        I18nString Example:
          localized_strings:
            en: corn
            es: maíz
            pt-br: milho
    Entitlement:
      type: object
      description: Entitlement that belongs to an app
      properties:
        app_id:
          type: string
        key:
          type: string
        name:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted:
          type: boolean
    EntitlementsList:
      items:
        "$ref": "#/components/schemas/Entitlement"
      type: array
    PageableMetadataLicensing:
      type: object
      format: int32
      title: Pageable Metadata Licensing
      description: ''
      properties:
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number_of_elements:
          type: integer
          format: int64
        pageable:
          "$ref": "#/components/schemas/PageableLicensing"
      required:
      - empty
      - first
      - last
      - number_of_elements
      - pageable
    PageableLicensing:
      type: object
      title: Pageable
      properties:
        current_key:
          type: string
        size:
          type: integer
        next_key:
          type: string
      required:
      - current_key
      - size
      - next_key
    PageableContracts:
      title: PageableContracts
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            "$ref": "#/components/schemas/Contracts"
        required:
        - content
    PageableContractsEntitlementAsId:
      title: PageableContracts
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            "$ref": "#/components/schemas/ContractsEntitlementAsId"
        required:
        - content
    Contract:
      type: object
      description: ''
      properties:
        end:
          type: string
        entitlements:
          "$ref": "#/components/schemas/EntitlementsList"
        start:
          type: string
        plan:
          type: string
        quota:
          type: array
          items:
            "$ref": "#/components/schemas/Quota"
        plan_name:
          type: string
      required:
      - start
      - end
      - plan
    ContractEntitlementAsId:
      type: object
      description: ''
      properties:
        end:
          type: string
        entitlements:
          "$ref": "#/components/schemas/UUIDList"
        start:
          type: string
        plan:
          type: string
        quota:
          type: array
          items:
            "$ref": "#/components/schemas/Quota"
        plan_name:
          type: string
      required:
      - start
      - end
      - plan
    ContractsEntitlementAsId:
      items:
        allOf:
        - "$ref": "#/components/schemas/IdentifiedModel"
        - "$ref": "#/components/schemas/ContractEntitlementAsId"
      type: array
    Contracts:
      items:
        allOf:
        - "$ref": "#/components/schemas/IdentifiedModel"
        - "$ref": "#/components/schemas/ContractData"
      type: array
    Quota:
      title: Quota
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        value:
          type: number
        usage:
          type: number
      required:
      - key
      - name
      - value
      - usage
    ContractData:
      type: object
      description: ''
      properties:
        end:
          type: string
        entitlements:
          "$ref": "#/components/schemas/EntitlementsList"
        start:
          type: string
        plan:
          type: string
        plan_name:
          type: string
        notes:
          type: string
        licensing_account_id:
          type: string
          description: this field is the workspace id of the user
        workspace_id:
          type: string
          description: this field is the workspace id of the user
        quotas:
          type: array
          items:
            "$ref": "#/components/schemas/Quota"
    Plan:
      allOf:
      - "$ref": "#/components/schemas/BaseEntity"
      - type: object
        properties:
          app:
            type: string
          default:
            type: boolean
          default_duration:
            type: integer
          deleted:
            type: boolean
          entitlements:
            "$ref": "#/components/schemas/EntitlementsList"
          name:
            type: string
          quotas:
            type: array
            items:
              type: object
              properties:
                key:
                  type: string
                name:
                  type: string
                value:
                  type: number
                limit:
                  type: number
                  nullable: true
                unit:
                  type: string
                  nullable: true
                entity_type:
                  type: string
                  nullable: true
                over_quota_threshold:
                  type: number
                  nullable: true
              required:
              - key
              - name
              - value
          terms:
            type: array
            items:
              type: string
          valid_countries:
            type: array
            items:
              type: string
          accounts:
            type: array
            items:
              type: string
          location:
            type: string
          legalDocuments:
            type: array
            items:
              type: string
        required:
        - app
        - name
    Plans:
      items:
        "$ref": "#/components/schemas/Plan"
      type: array
    PlanData:
      allOf:
      - "$ref": "#/components/schemas/BaseEntity"
      - type: object
        properties:
          app:
            type: string
          default:
            type: boolean
          default_duration:
            type: integer
          entitlements:
            "$ref": "#/components/schemas/EntitlementsList"
          name:
            type: string
          quotas:
            type: array
            items:
              type: object
              properties:
                key:
                  type: string
                name:
                  type: string
                value:
                  type: number
              required:
              - key
              - name
              - value
          valid_countries:
            type: array
            items:
              type: string
          accounts:
            type: array
            items:
              type: string
          location:
            type: string
          legalDocuments:
            type: array
            items:
              type: string
        required:
        - app
        - name
    BaseEntity:
      type: object
      properties:
        created_at:
          format: date-time
          type: string
        id:
          type: string
        metadata:
          type: object
        updated_at:
          format: date-time
          type: string
    PageableWorkspaces:
      title: PageableWorkspaces
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/Workspace"
        required:
        - content
    WorkspaceData:
      title: WorkspaceData
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        metadata:
          type: object
    Entities:
      title: Entities
      type: array
      items:
        type: object
        properties:
          key:
            type: string
          value:
            type: integer
    LicensingStatus:
      properties:
        account:
          properties:
            id:
              type: string
            name:
              type: string
          type: object
        apps:
          items:
            properties:
              contract:
                properties:
                  end:
                    format: date-time
                    type: string
                  id:
                    type: string
                  notes:
                    type: string
                  start:
                    format: date-time
                    type: string
                  waiting_for_payment:
                    type: number
                type: object
              id:
                type: string
              plan:
                properties:
                  entitlements:
                    "$ref": "#/components/schemas/EntitlementsList"
              quotas:
                items:
                  properties:
                    key:
                      type: string
                    name:
                      type: string
                    value:
                      type: number
                  type: object
                type: array
            type: object
          type: array
        org:
          nullable: true
          properties:
            id:
              type: string
            name:
              type: string
          type: object
      type: object
    ContractsWorkspaceIdsDTO:
      properties:
        workspace_ids:
          items:
            format: uuid
            nullable: true
            type: string
          type: array
      type: object
    ContractsByEntitlements:
      properties:
        contracts:
          type: array
          items:
            "$ref": "#/components/schemas/Contract"
        lastKey:
          nullable: true
          type: object
          properties:
            id:
              type: string
            start:
              type: integer
      type: object
    Term:
      allOf:
      - "$ref": "#/components/schemas/BaseEntity"
      - properties:
          content:
            type: string
          format:
            enum:
            - plaintext
            - html
            - markdown
            type: string
          language:
            type: string
          title:
            type: string
        required:
        - format
        - language
        - title
        type: object
    PageableTerms:
      title: PageableTerms
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/Term"
        required:
        - content
    SignTermAndPlanList:
      items:
        "$ref": "#/components/schemas/SignTermAndPlan"
      type: array
    SignTermAndPlan:
      type: object
      properties:
        term_id:
          type: string
        plan_id:
          type: string
        accepted_on:
          format: date-time
          type: string
    GeometryUpdateRequest:
      type: object
      title: Geometry Update Request
      description: |
        The property operation model aggregates persistent operations on region geometries, specifying its resolution
        strategy and properties of each region.
        The region_set features must have properties directly related to the relative_root.
      required:
      - format
      - region_set
      properties:
        version:
          title: Object version
          description: Version of the request object
          type: string
          enum:
          - v1
        strict:
          title: Strict mode
          type: boolean
          description: |
            If enabled, the request either succeeds completely or fails completely. If disabled,
            regions which can be changed will be changed, and the others will return an error, indicated
            individually by region in the response.
        relative_root:
          "$ref": "#/components/schemas/RelativeRoot"
        format:
          type: string
          description: 'Currently supports only GeoJSON in with the property schema
            listed below.

            '
          enum:
          - geojson
        region_set:
          "$ref": "#/components/schemas/RegionCollection"
      x-tags:
      - Field Geometry Updates
    RelativeRoot:
      "$ref": "#/components/schemas/UUID"
      title: Region Relative Root
      description: 'This is a level which regions are specified relative to and it''s
        represented by a FeatureID

        '
      example: 75cef3de-4247-4e14-a13a-7b5319f75e99
    UpdateResponse:
      type: object
      title: Update Response
      properties:
        status:
          type: string
          enum:
          - FULLY_ACCEPTED
          - PARTIALLY_ACCEPTED
          - REJECTED
          - ERROR
        errors:
          type: array
          items:
            "$ref": "#/components/schemas/RegionError"
      required:
      - status
    RegionCollection:
      type: object
      description: GeoJSON Feature collection
      required:
      - type
      - features
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.3
      properties:
        type:
          type: string
          enum:
          - FeatureCollection
        features:
          type: array
          items:
            "$ref": "#/components/schemas/Region"
      title: Region Collection
    RegionProperties:
      type: object
      title: Region Properties
      description: |
        Identified structure that represents all the feature characteristics and its parenthood relationship.

        If the `operation` is `create`, but an update condition is set, either in this region or in the parent,
        this region will be _rejected_ (and the whole request may be rejected if `strict` mode is turned on in the
        update request).

        If the `operation` is `update`, the `event_date` param will define if the field will be edit or will create
        a new version.
      properties:
        name:
          type: string
        parent_id:
          "$ref": "#/components/schemas/UUID"
        operation:
          type: string
          description: |
            Operation to perform with the geometry. Note that fields must not overlap:
            if a `create` or `update` operation would result in overlap, the operation
            will be refused for the geometry (and possibly for the entire request if
            strict mode is on).
          enum:
          - create
          - update
          - delete
        id:
          "$ref": "#/components/schemas/UUID"
        declared_area:
          "$ref": "#/components/schemas/AreaSize"
        max_cut_out:
          type: number
          description: 'Indicates the maximum percentage of the field that you can
            take out (ratio 0 to 1).

            '
        buffer_zone:
          type: number
          description: 'Indicates the intersection limit (meters).

            '
      required:
      - name
      - parent_id
      - id
      - declared_area
      - operation
    RegionError:
      type: object
      properties:
        key:
          "$ref": "#/components/schemas/UUID"
        code:
          type: string
          description: Error code.
        message:
          type: string
          description: A human-readable message describing the error.
        overlap:
          "$ref": "#/components/schemas/FieldOverlapError"
          description: Details on the overlapping detection
      required:
      - key
      - code
      - message
    RegionKey:
      "$ref": "#/components/schemas/UUID"
    RegionVersionIdentifier:
      type: object
      title: Region Version Identifier
      description: |
        Specifies the version of the field, either in requests or in responses.
        In responses, this field will only be present if `status` is `FULLY_ACCEPTED`
        or `PARTIALLY_ACCEPTED`.
      required:
      - type
      properties:
        type:
          type: string
          description: The Region Version Identifier type, it should be only 'rev_hash'
      discriminator:
        propertyName: type
      example:
        type: rev_hash
        rev: e722e7cdd2a56f63aa6af99ba2df64b026a4967c
    FieldOverlapError:
      type: object
      properties:
        field:
          "$ref": "#/components/schemas/FieldOverlapHistory"
          description: History of the field
        fieldOverlapped:
          "$ref": "#/components/schemas/FieldOverlapHistory"
          description: History of the field overlapped
    FieldOverlapHistory:
      type: object
      properties:
        field_id:
          "$ref": "#/components/schemas/UUID"
        event_date:
          "$ref": "#/components/schemas/ISODateTime"
        previous_date:
          "$ref": "#/components/schemas/ISODateTime"
          description: Previous version date more close to the field
        next_date:
          "$ref": "#/components/schemas/ISODateTime"
          description: Next version date more close to the field
    PageablePolicyDTO:
      title: PageablePolicyDTO
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/PolicyDTO"
        required:
        - content
    PageablePlans:
      title: PageablePlans
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            "$ref": "#/components/schemas/Plans"
        required:
        - content
    Worker:
      title: Worker
      description: ''
      allOf:
      - "$ref": "#/components/schemas/IdentifiedNameModel"
      - type: object
        properties:
          property_ids:
            type: array
            items:
              "$ref": "#/components/schemas/UUID"
          org_id:
            "$ref": "#/components/schemas/UUID"
          json_extended_attributes:
            "$ref": "#/components/schemas/BasicExtendedAttribute"
          name:
            type: string
          note:
            type: string
          address:
            type: string
          type:
            type: string
            enum:
            - EMPLOYEE
            - EXTERNAL_COMPANY
          email:
            type: string
          phone:
            type: string
          applicator_licensing_number:
            type: string
          license_valid_through:
            "$ref": "#/components/schemas/ISODateTime"
        required:
        - org_id
        - name
    WorkerResponse:
      title: Worker Created
      description: ''
      allOf:
      - "$ref": "#/components/schemas/IdentifiedNameModel"
      - type: object
        properties:
          org_id:
            "$ref": "#/components/schemas/UUID"
    PagedWorker:
      title: Paged Worker
      description: Info of `Worker`
      x-tags:
      - Worker
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/Worker"
      - "$ref": "#/components/schemas/PageableMetadata"
    NoteType:
      type: string
      enum:
      - Land Annotation
      - Comment
    NoteObject:
      title: Note Object
      description: Note Object
      allOf:
      - type: object
        properties:
          id:
            "$ref": "#/components/schemas/UUID"
          org_id:
            "$ref": "#/components/schemas/UUID"
          namespace:
            type: string
            example: Namespace Example
          source:
            type: string
          created_by:
            type: string
          author:
            type: string
            example: John Doe
          note:
            type: string
            example: Short description explaining something.
          date:
            type: string
          type:
            "$ref": "#/components/schemas/NoteType"
            example: Land Annotation
            description: 'A Note type can be: Comment or Land Annotation'
          context:
            "$ref": "#/components/schemas/Context"
          user_location:
            "$ref": "#/components/schemas/GeojsonObject"
          manual_location:
            "$ref": "#/components/schemas/GeojsonObject"
          parent_id:
            "$ref": "#/components/schemas/UUID"
          note_attachment:
            type: array
            items:
              "$ref": "#/components/schemas/NoteAttachmentObject"
          note_tag:
            type: array
            items:
              type: string
          external_id:
            type: string
        required:
        - org_id
        - namespace
        - source
        - created_by
        - author
        - note
        - date
        - type
        - context
    NotesEditObjectRequest:
      title: Note Edit Object
      description: 'Note Edit Object. Obs: if the client wants to delete all the Tags
        and/or the Attachemnt, it should send the attribute with an empty array (the
        value `[]`)

        '
      allOf:
      - type: object
        properties:
          org_id:
            "$ref": "#/components/schemas/UUID"
          namespace:
            type: string
            example: Cropzone Example
          source:
            type: string
          created_by:
            type: string
          author:
            type: string
            example: John Doe
          note:
            type: string
            example: Short description explaining something.
          type:
            "$ref": "#/components/schemas/NoteType"
            example: Land Annotation
          context:
            "$ref": "#/components/schemas/Context"
          user_location:
            type: string
            example: "-18.161360,-47.943459"
          manual_location:
            type: string
            example: "-18.161360,-47.943459"
          parent_id:
            "$ref": "#/components/schemas/UUID"
          note_attachment:
            type: array
            items:
              "$ref": "#/components/schemas/UUID"
          note_tag:
            type: array
            items:
              type: string
          external_id:
            type: string
        required:
        - org_id
        - namespace
        - source
        - note
        - context
    NotesBySourceObject:
      title: Notes by source
      description: Notes by source
      allOf:
      - type: object
        properties:
          source:
            type: string
          tags:
            type: array
            items:
              type: string
        required:
        - source
    NotesByFieldsObject:
      title: Notes by fields
      description: Notes by fields in a time interval
      allOf:
      - type: object
        properties:
          fields:
            type: array
            items:
              type: string
          org_id:
            "$ref": "#/components/schemas/UUID"
          start_date:
            type: string
          end_date:
            type: string
          tags:
            type: array
            items:
              type: string
        required:
        - fields
        - org_id
    NotesByNamespaceObject:
      title: Notes by namespace
      description: Notes by namespace
      allOf:
      - type: object
        properties:
          org_id:
            type: string
          namespace:
            type: string
          tags:
            type: array
            items:
              type: string
        required:
        - namespace
        - org_id
    NotesByNearestPointsObject:
      title: Notes by nearest points
      description: Notes by nearest points
      allOf:
      - type: object
        properties:
          org_id:
            "$ref": "#/components/schemas/UUID"
          latitude:
            type: string
            example: "-18.161360"
          longitude:
            type: string
            example: "-47.943459"
          source:
            type: string
          radius:
            type: string
            example: '10'
          tags:
            type: array
            items:
              type: string
        required:
        - org_id
        - latitude
        - longitude
        - source
        - radius
    NotesByTagsObject:
      title: Notes by tags
      description: Notes by tags
      allOf:
      - type: object
        properties:
          tags:
            type: array
            items:
              type: string
    PageableNotesObject:
      title: Pageable Notes Object
      description: Pageable Notes Object
      allOf:
      - type: object
        properties:
          empty:
            type: boolean
          first:
            type: boolean
          last:
            type: boolean
          number_of_elements:
            type: number
          pageable:
            "$ref": "#/components/schemas/PageableObject"
          content:
            type: array
            items:
              "$ref": "#/components/schemas/NoteObject"
    PageableNotesByNearestPointsObject:
      title: Pageable Notes By Nearest Points Object
      description: Pageable Notes By Nearest Points Object
      allOf:
      - type: object
        properties:
          empty:
            type: boolean
          first:
            type: boolean
          last:
            type: boolean
          number_of_elements:
            type: number
          pageable:
            "$ref": "#/components/schemas/PageableObject"
          content:
            type: array
            items:
              "$ref": "#/components/schemas/NotesByNearestPointsResponseObject"
    NotesByNearestPointsResponseObject:
      title: Note Object
      description: Note Object
      allOf:
      - type: object
        properties:
          id:
            "$ref": "#/components/schemas/UUID"
          org_id:
            "$ref": "#/components/schemas/UUID"
          namespace:
            type: string
            example: Namespace Example
          source:
            type: string
          created_by:
            type: string
          author:
            type: string
            example: John Doe
          note:
            type: string
            example: Short description explaining something.
          date:
            type: string
          type:
            "$ref": "#/components/schemas/NoteType"
            example: Land Annotation
            description: 'A Note type can be: Comment or Land Annotation'
          context:
            "$ref": "#/components/schemas/Context"
          user_location:
            "$ref": "#/components/schemas/GeojsonObject"
          manual_location:
            "$ref": "#/components/schemas/GeojsonObject"
          parent_id:
            "$ref": "#/components/schemas/UUID"
          note_attachment:
            type: array
            items:
              "$ref": "#/components/schemas/NoteAttachmentObject"
          distance:
            type: number
          note_tag:
            type: array
            items:
              type: string
          external_id:
            type: string
    NoteAttachmentObject:
      title: Note Attachment Object
      description: Note Attachment Object
      allOf:
      - type: object
        properties:
          id:
            "$ref": "#/components/schemas/UUID"
          key:
            type: string
            description: original file name
          created_by:
            "$ref": "#/components/schemas/UUID"
          created_at:
            type: string
            example: 2023-02-14T19
          status:
            type: string
            enum:
            - C
            - N
            - D
            description: Status can be N (New, waiting for upload), C (upload Completed)
              or D (Deleted)
          file_type:
            type: string
            enum:
            - video
            - audio
            - documents
            - pictures
            - other
            description: file_type can be video, audio, documents, pictures or other
          url:
            type: string
            description: url generated by AWS to get the file in bucket
            example: https://notes-v1-attachments-beta.s3.amazonaws.com/image1.png
    NoteTagObject:
      title: Note Tag Object
      description: Note Tag Object
      example:
      - Tag1
      - Tag2
      - PROJECT-NEW
      allOf:
      - type: array
        items:
          type: string
    TagObject:
      title: Tag Object
      description: Tag Object
      allOf:
      - type: object
        properties:
          tag:
            type: string
    TotalTagsObject:
      title: Total Tag Object
      description: Total Tag Object
      allOf:
      - type: object
        properties:
          total:
            type: number
    PageableTagsObject:
      title: Pageable Tags Object
      description: Pageable Tags Object
      allOf:
      - type: object
        properties:
          empty:
            type: boolean
          first:
            type: boolean
          last:
            type: boolean
          number_of_elements:
            type: number
          pageable:
            "$ref": "#/components/schemas/PageableObject"
          content:
            type: array
            items:
              "$ref": "#/components/schemas/TagObject"
    PageableObject:
      title: Pageable Object
      description: Pageable Object
      allOf:
      - type: object
        properties:
          current_key:
            type: string
          size:
            type: number
          next_key:
            type: string
    NoteCommentObject:
      title: Note Comment Object
      description: Note Comment Object
      allOf:
      - type: object
        properties:
          id:
            type: string
          org_id:
            "$ref": "#/components/schemas/UUID"
          source:
            type: string
          created_by:
            type: string
          author:
            type: string
            example: John Doe
          created_at:
            type: string
          note:
            type: string
            example: Short description explaining something.
          date:
            type: string
          type:
            type: string
            example: Comment
            description: A Note Comment must have Comment type.
          context:
            "$ref": "#/components/schemas/Context"
          parent_id:
            "$ref": "#/components/schemas/UUID"
            description: A Note Parend ID
    NoteCommentCreationObject:
      title: Note Comment Creation Object
      description: Note Comment Creation Object
      allOf:
      - type: object
        properties:
          id:
            type: string
          source:
            type: string
          created_by:
            type: string
          author:
            type: string
            example: John Doe
          note:
            type: string
            example: Short description explaining something.
          date:
            type: string
          type:
            type: string
            example: Comment
            description: A Note Comment must have Comment type.
          parent_id:
            "$ref": "#/components/schemas/UUID"
            description: A Note Parent ID
        required:
        - source
        - created_by
        - note
        - author
        - date
        - type
        - parent_id
    NoteCommentUpdateObject:
      title: Note Comment Update Object
      description: Note Comment Update Object
      allOf:
      - type: object
        properties:
          id:
            type: string
          source:
            type: string
          author:
            type: string
            example: John Doe
          note:
            type: string
            example: Short description explaining something.
        required:
        - id
        - source
    PageableNotesCommentsObject:
      title: Pageable Notes Comments Object
      description: Pageable Notes Comments Object
      allOf:
      - type: object
        properties:
          empty:
            type: boolean
          first:
            type: boolean
          last:
            type: boolean
          number_of_elements:
            type: number
          pageable:
            "$ref": "#/components/schemas/PageableObject"
          content:
            type: array
            items:
              "$ref": "#/components/schemas/NoteCommentObject"
    Context:
      type: string
      title: Note context value
      description: 'A key:value collection with the format: `key:value/key:value/key:value/key:value/
        ...` There are two keywords previously defined: `field` and `property`. The
        app client can use any value as a key to customize.

        '
      example: property:cf4ff242-674c-42a7-837d-f52a82fd2648/field:daf2d4f8-6029-4035-b571-01ce03f4b422
    NotesByContextObject:
      title: Notes by context
      description: "There are two special values for the parameter `context` to search
        notes, `null` and `*`\nEx: `property:cf4ff242-674c-42a7-837d-f52a82fd2648/parent_region:null/field:*`,
        \nThis example should return all notes without the key `parent_region` and
        with any value at the key `field`.\nThe dates format (YYYY-MM-DD HH:MM:SS)\n"
      allOf:
      - type: object
        properties:
          org_id:
            "$ref": "#/components/schemas/UUID"
          context:
            "$ref": "#/components/schemas/Context"
          start_date:
            type: string
            description: format (YYYY-MM-DD HH:MM:SS)
            example: '2023-01-20 21:00:00'
          end_date:
            type: string
            description: format (YYYY-MM-DD HH:MM:SS)
            example: '2023-01-31 00:00:00'
          tags:
            type: array
            items:
              type: string
        required:
        - org_id
        - context
    GeojsonObject:
      title: Geojson object
      allOf:
      - type: object
        properties:
          type:
            type: string
          geometry:
            "$ref": "#/components/schemas/GeometryObject"
    GeometryObject:
      title: Geometry object
      allOf:
      - type: object
        properties:
          type:
            type: string
          coordinates:
            type: array
            items:
              type: number
    LegalDocument:
      allOf:
      - "$ref": "#/components/schemas/BaseEntity"
      - properties:
          location:
            type: string
            example: BR
          language:
            type: string
            example: en-US
          startDate:
            type: string
            format: date-time
            example: '2021-12-23T20:14:59.087Z'
          endDate:
            type: string
            format: date-time
            example: '2021-12-24T20:14:59.087Z'
          filePath:
            type: string
            example: https://example.com/example.pdf
          plan:
            type: string
            example: 5883609f-c163-4e71-8baf-63965d452f0b
          app:
            type: string
            example: 43524f50-5749-5345-4253-434149554249
          signedDocumentId:
            type: string
            example: 21d658f0-19ec-4b1b-b08f-253786df1799
          userId:
            type: string
            example: f60c3544-e3f8-48a9-ac92-7114d95fb858
          typeRow:
            enum:
            - terms_and_conditions
            - privacy_notice
            - commercial_offer
            - signature
        type: object
    PageableLegalDocuments:
      title: PageableLegalDocuments
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/LegalDocument"
        required:
        - content
    BasicEquipment:
      title: BasicEquipment
      description: ''
      type: object
      properties:
        type:
          type: string
          enum:
          - IMPLEMENT
          - VEHICLE
      x-tags:
      - Equipment
      - Catalogue
    Equipment:
      allOf:
      - "$ref": "#/components/schemas/SimpleCatalogue"
      - "$ref": "#/components/schemas/BasicEquipment"
      title: Equipment
      x-examples: {}
      x-tags:
      - Equipment
      - Catalogue
    PagedEquipment:
      title: Paged Equipment
      description: Info of `Equipment`
      x-tags:
      - Equipment
      - Catalogue
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/EquipmentCatalogue"
      - "$ref": "#/components/schemas/PageableMetadata"
    PagedEquipmentCatalogue:
      title: Paged Equipment Catalogue
      description: Info of `Equipment Catalogue`
      x-tags:
      - Catalogue
      - Equipment
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/EquipmentCatalogue"
      - "$ref": "#/components/schemas/PageableMetadata"
    BasicEquipmentCatalogue:
      title: Basic Equipment Catalogue
      allOf:
      - type: object
        properties:
          org_id:
            "$ref": "#/components/schemas/UUID"
          name:
            type: string
          property_ids:
            type: array
            items:
              "$ref": "#/components/schemas/UUID"
          json_extended_attributes:
            "$ref": "#/components/schemas/BasicExtendedAttribute"
          label:
            type: string
            enum:
            - EARTH_MOVING
            - FORAGE_AND_HAY
            - HARVESTING
            - PLANTER
            - SPRAYER
            - TILLAGE
            - TRACTOR
            - TRAILER
            - TRUCK
            - GENERICAL_VEHICLE
            - IRRIGATION
            - MANURE
            - MISC
            - FERTILIZER
            - SHOP
          licensing_number:
            type: string
          unit_id:
            type: string
          serial_number:
            type: string
          notes:
            type: string
          current_status:
            type: string
            enum:
            - OWNER
            - CONTRACTED
            - LEASED
            - SOLD
            - JUNKED
            - CONTRACT_TERMINATED
            - LEASE_TERMINATED
          current_status_date:
            "$ref": "#/components/schemas/ISODateTime"
          model:
            type: string
          year:
            type: integer
          manufacturer:
            type: string
      - "$ref": "#/components/schemas/BasicEquipment"
      x-tags:
      - Equipment
      - Catalogue
    EquipmentCatalogue:
      title: Equipment Catalogue
      allOf:
      - "$ref": "#/components/schemas/IdentifiedModel"
      - "$ref": "#/components/schemas/BasicEquipmentCatalogue"
      x-tags:
      - Equipment
      - Catalogue
    PageableEntitlements:
      title: PageablePlans
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/Entitlement"
        required:
        - content
    BasicTask:
      title: Basic Task
      description: ''
      type: object
      x-tags:
      - Task
      properties:
        org_id:
          "$ref": "#/components/schemas/UUID"
        property_ids:
          type: array
          items:
            "$ref": "#/components/schemas/UUID"
        season_ids:
          type: array
          items:
            "$ref": "#/components/schemas/UUID"
        description:
          type: string
        duration:
          description: The duration must be in minutes
          type: integer
        external_id:
          description: The external_id is an incremental value by default, but the
            value can be provided by the client
          type: integer
        start_date:
          "$ref": "#/components/schemas/ISODateTime"
        end_date:
          "$ref": "#/components/schemas/ISODateTime"
        status_id:
          "$ref": "#/components/schemas/UUID"
        category_resources:
          "$ref": "#/components/schemas/SamplingCategoryResources"
        json_extended_attributes:
          "$ref": "#/components/schemas/BasicExtendedAttribute"
        tags:
          type: array
          items:
            type: string
      required:
      - org_id
      - status_id
      - description
      - start_date
      - end_date
      - status
      - category_resources
    PagedTask:
      title: Paged Task
      description: Info of a `Task` to be used
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/Task"
      - "$ref": "#/components/schemas/PageableMetadata"
      x-tags:
      - Task
    PagedTaskCategory:
      title: Paged Task Category
      description: Info of a `TaskCategory` to be used
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/TaskCategory"
      - "$ref": "#/components/schemas/PageableMetadata"
      x-tags:
      - Task
    TaskProgressDrilldown:
      title: Task Progress Drilldown
      type: object
      discriminator:
        propertyName: type
        mapping:
          LOG_DRILLDOWN: "#/components/schemas/ProgressLogDrilldown"
      properties:
        type:
          type: string
          description: The Task Progress Drilldown type, it should be only 'LOG_DRILLDOWN'
      required:
      - type
      x-tags:
      - Task
    CategoryResources:
      title: Category Resources
      type: object
      properties:
        category_type_id:
          "$ref": "#/components/schemas/UUID"
      required:
      - category_type_id
      x-tags:
      - Task
    Task:
      title: Task
      allOf:
      - "$ref": "#/components/schemas/IdentifiedModel"
      - "$ref": "#/components/schemas/BasicTask"
      - type: object
        properties:
          comments:
            type: array
            items:
              "$ref": "#/components/schemas/BasicTaskComment"
          progress_drilldown:
            description: Only available for Get wont be available in Post call.
            type: array
            items:
              "$ref": "#/components/schemas/ProgressLogDrilldown"
      x-tags:
      - Task
    ProgressLogDrilldown:
      title: ProgressLogDrilldown
      type: object
      properties:
        start_date:
          "$ref": "#/components/schemas/ISODateTime"
        end_date:
          "$ref": "#/components/schemas/ISODateTime"
        progress_amount:
          type: number
      required:
      - start_date
      - end_date
      - progress_amount
      x-tags:
      - Task
    SamplingCategoryResources:
      title: SamplingCategoryResources
      allOf:
      - "$ref": "#/components/schemas/CategoryResources"
      - type: object
        properties:
          field_ids:
            type: array
            items:
              "$ref": "#/components/schemas/UUID"
          product_usages:
            type: array
            items:
              "$ref": "#/components/schemas/ProductUsage"
          equipment_ids:
            type: array
            items:
              "$ref": "#/components/schemas/UUID"
          workers_roles:
            type: array
            items:
              "$ref": "#/components/schemas/TaskWorkerRole"
          season_field_ids:
            type: array
            items:
              "$ref": "#/components/schemas/UUID"
        required:
        - field_ids
        - property_id
        - product_usages
        - equipment_ids
      x-tags:
      - Task
    ProductUsage:
      title: ProductUsage
      type: object
      properties:
        product_id:
          "$ref": "#/components/schemas/UUID"
        warehouse_id:
          "$ref": "#/components/schemas/UUID"
        unit:
          type: string
        dose:
          type: number
        amount:
          type: number
        withdraw:
          type: number
      required:
      - product_id
      - warehouse_id
      - unit
      - dose
      - amount
      - withdraw
      description: ''
      x-tags:
      - Task
    TaskWorkerRole:
      title: TaskWorkerRole
      type: object
      properties:
        worker_id:
          "$ref": "#/components/schemas/UUID"
        worker_role:
          type: string
          enum:
          - RESPONSIBLE
          - APPLICATOR
          - ASSIGNEE
      description: ''
      x-tags:
      - Task
    TaskCategory:
      title: Task Category
      description: ''
      allOf:
      - "$ref": "#/components/schemas/IdentifiedNameModel"
      - type: object
        properties:
          icon_slug:
            type: string
        required:
        - icon_slug
      x-tags:
      - Task
    BasicTaskComment:
      title: Basic Task Comment
      type: object
      properties:
        comment:
          type: string
      x-tags:
      - Task
      required:
      - content
    TaskComment:
      title: TaskComment
      allOf:
      - "$ref": "#/components/schemas/IdentifiedModel"
      - "$ref": "#/components/schemas/BasicTaskComment"
      - type: object
        properties:
          created_at:
            "$ref": "#/components/schemas/ISODateTime"
          account_id:
            "$ref": "#/components/schemas/UUID"
        required:
        - created_at
        - account_id
      x-tags:
      - Task
    PagedTaskStatus:
      title: Paged Task Status
      description: Info of a `TaskStatus` to be used
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/IdentifiedNameModel"
      - "$ref": "#/components/schemas/PageableMetadata"
      x-tags:
      - Task
    EmailTemplate:
      title: EmailTemplate
      description: ''
      type: object
      x-tags:
      - EmailTemplate
      properties:
        language:
          type: string
        subject:
          type: string
        html_content:
          type: string
        branding:
          type: string
        type:
          type: string
        version:
          type: string
        app_id:
          "$ref": "#/components/schemas/UUID"
      required:
      - language
      - subject
      - html_content
      - branding
      - type
      - version
    SendEmail:
      title: SendEmail
      description: ''
      type: object
      x-type:
      - EmailTemplate
      properties:
        email:
          type: string
        emails:
          type: array
          items:
            type: string
        placeholders:
          type: object
        attachments:
          type: array
          items:
            type: string
        cc_emails:
          type: array
          items:
            type: string
        sender:
          type: string
      required:
      - email
    BasicCrop:
      title: Basic Crop
      description: ''
      allOf:
      - "$ref": "#/components/schemas/IdentifiedNameModel"
      - type: object
        properties:
          image_path:
            type: string
            description: A URL that points to the Crop image
            example: https://protector-v4-static.s3.amazonaws.com/crop/010b7b54-e006-4afc-a843-436b909ce90d.png
          wk_slug:
            type: string
          default_variety_id:
            "$ref": "#/components/schemas/UUID"
          varieties_ids:
            type: array
            items:
              "$ref": "#/components/schemas/UUID"
      x-examples:
        Crop example:
        - name: Mandioca
          image_path: https://protector-v4-static.s3.amazonaws.com/crop/002f4753-5c5b-5dbd-8ed6-f0a83f86090d.png
          wk_slug: MANDIOCA
          varieties_ids:
          - 3f830f32-5a36-4ec7-81f3-39f7d904d9f4
          - 2f0a685c-f1e3-11e9-9192-f01898ebf004
          default_variety_id: 2f0a685c-f1e3-11e9-9192-f01898ebf004
          id: 002f4753-5c5b-5dbd-8ed6-f0a83f86090d
    PagedCrop:
      title: Paged Crop
      description: Info of a `Crop` to be used
      x-tags:
      - Crop
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/BasicCrop"
      - "$ref": "#/components/schemas/PageableMetadata"
    PageableCanonProductDTO:
      title: PageableCanonProductDTO
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/CanonProductDTO"
        required:
        - content
    PageableOrganizationProductsDTO:
      title: PageableOrganizationProductsDTO
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            type: array
            items:
              anyOf:
              - "$ref": "#/components/schemas/CanonProductDTO"
              - "$ref": "#/components/schemas/CustomProductDTO"
        required:
        - content
    AttachmentObject:
      title: Attachment Object
      description: Attachment Object
      allOf:
      - type: object
        properties:
          id:
            "$ref": "#/components/schemas/UUID"
          url:
            type: string
            example: https://s3.amazonaws.com/notes-v1-attachments/notes-attach-example
          created_at:
            type: string
          created_by:
            "$ref": "#/components/schemas/UUID"
          status:
            type: string
            enum:
            - C
            - N
            - D
            description: Status can be N (New), C (Complete) or D (Deleted)
          key:
            type: string
            example: file-uploaded.png
          file_type:
            type: string
            enum:
            - video
            - audio
            - documents
            - pictures
            - other
            description: file_type can be video, audio, documents, pictures or other
    AttachmentPostObject:
      title: Attachment
      description: Attachment
      allOf:
      - type: object
        properties:
          extension:
            type: string
            description: 'Allowed extensions: mp4, mov, wmv, m4a, mp3, amr, aac, jpg,
              png, gif, pdf, doc, txt'
            example: video.mp4
          metadata:
            type: string
            description: Metadata from file. Source (gallery or camera) or other metadata
              file
            example: source:gallery
          size:
            type: number
            description: Size in bytes
            example: 1024 bytes (1mb)
        required:
        - extension
        - size
    PageableEppoDTO:
      title: PageableEppoDTO
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/PageableMetadata"
        required:
        - content
    EppoDTO:
      title: Eppo Model
      type: object
      description: EppoDTO
      properties:
        created_by:
          type: string
        updated_by:
          type: string
        deleted_at:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        id:
          type: string
        eppo_code:
          type: string
        scientific_name:
          type: string
        en_name:
          type: string
      required:
      - created_by
      - updated_by
      - deleted_at
      - created_at
      - updated_at
      - id
      - eppo_code
      - scientific_name
      - en_name
    CreateEppoDTO:
      title: Create Eppo Model
      type: object
      description: Create Eppo DTO
      properties:
        eppo_code:
          type: string
          required: true
        scientific_name:
          type: string
        en_name:
          type: string
      required:
      - eppo_code
      - scientific_name
      - en_name
    EditEppoDTO:
      title: Edit Eppo Model
      type: object
      description: Edit Eppo DTO
      properties:
        scientific_name:
          type: string
        en_name:
          type: string
      required:
      - scientific_name
      - en_name
    VerifyEppoDTO:
      type: object
      properties:
        eppos:
          type: array
          items:
            type: string
      required:
      - eppos
    VerifyEppoResonseDTO:
      type: object
      properties:
        valid_eppos:
          type: array
          items:
            type: string
        invalid_eppos:
          type: array
          items:
            type: string
      required:
      - eppos
    PageableGrowthScaleDTO:
      title: PageableGrowthScaleDTO
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/PageableMetadata"
        required:
        - content
    TypeOrder:
      title: Type Order
      type: integer
      enum:
      - 1
      - 2
      - 3
    Types:
      title: Types of Growth Stage
      type: string
      enum:
      - emergence
      - vegetative
      - reproductive
    Growth-Stage:
      type: object
      properties:
        name:
          type: string
        order:
          type: integer
          minimum: 1
        type_order:
          "$ref": "#/components/schemas/TypeOrder"
        type:
          "$ref": "#/components/schemas/Types"
        image_url:
          type: string
        instruction:
          type: string
    PageableCropsDTO:
      title: PageableCropsDTO
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/PageableMetadata"
        required:
        - content
    CropNameModel:
      type: object
      properties:
        language:
          type: string
        name:
          type: string
      required:
      - name
      - language
    LocalizedCrop:
      type: object
      properties:
        location:
          type: string
        default_crop_zone_duration:
          type: integer
        default_growth_scale_id:
          "$ref": "#/components/schemas/UUID"
        varieties_ids:
          type: array
          items:
            "$ref": "#/components/schemas/UUID"
      required:
      - location
      - varieties_ids
    Voucher:
      type: object
      properties:
        campaign:
          type: string
        campaign_id:
          type: string
        code:
          type: string
        consumed:
          default: false
          type: boolean
        id:
          type: string
        link_id:
          type: string
    Vouchers:
      items:
        "$ref": "#/components/schemas/Voucher"
      type: array
    PageableVouchers:
      title: PageableVouchers
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/VoucherData"
        required:
        - content
    VoucherData:
      type: object
      properties:
        campaign_id:
          type: string
        campaign:
          type: string
        code:
          type: string
        consumed:
          default: false
          type: boolean
        id:
          type: string
        link_id:
          type: string
    RedeemVoucherResponse:
      title: RedeemVoucherResponse
      type: object
      description: Response when a Voucher is redeem
      properties:
        apps:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              is_new:
                type: boolean
              name:
                type: string
              plan:
                type: object
                properties:
                  plan_id:
                    type: string
                  plan_name:
                    type: string
              icon_uri:
                type: string
    CampaignData:
      type: object
      title: ''
      properties:
        active:
          type: boolean
        duration:
          type: integer
        start_date:
          format: date-time
          type: string
        id:
          type: string
        name:
          type: string
        notes:
          type: string
        plans:
          type: array
          items:
            "$ref": "#/components/schemas/PlanData"
        voucher_count:
          type: integer
        available_vouchers:
          type: integer
        shareable_links:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              initial_usage_quota:
                type: number
              remaining_quota:
                type: number
              used_quota:
                type: number
        created_at:
          type: string
          format: date-time
        sv:
          type: string
        updated_at:
          type: string
          format: date-time
        vouchers:
          type: array
          items:
            type: string
      required:
      - active
      - duration
      - start_date
      - name
      - voucher_count
      - plans
    Campaign:
      type: object
      title: ''
      properties:
        active:
          type: boolean
        duration:
          type: integer
        start_date:
          format: date-time
          type: string
        id:
          type: string
        name:
          type: string
        notes:
          type: string
        plans:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
            required:
            - id
        voucher_count:
          type: integer
        available_vouchers:
          type: integer
        shareable_links:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              initial_usage_quota:
                type: number
              remaining_quota:
                type: number
              used_quota:
                type: number
        created_at:
          type: string
          format: date-time
        sv:
          type: string
        updated_at:
          type: string
          format: date-time
        vouchers:
          type: array
          items:
            type: string
      required:
      - active
      - duration
      - start_date
      - name
      - voucher_count
      - plans
    PageableCampaigns:
      title: PageableCampaigns
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/CampaignData"
        required:
        - content
    RedeemInfoAppResponse:
      title: RedeemInfoAppResponse
      type: object
      description: Response Redeem Info
      required:
      - active_campaign
      - campaign_duration
      - linkId
      - campaignId
      - plans
      properties:
        active_campaign:
          type: boolean
        campaign_duration:
          type: number
        linkId:
          type: string
        campaignId:
          type: string
        plans:
          type: array
          items:
            "$ref": "#/components/schemas/Plan"
    BasicApp:
      title: Basic App
      description: ''
      allOf:
      - "$ref": "#/components/schemas/NamedModel"
      - type: object
        properties:
          short_description:
            type: string
          published:
            type: boolean
          supported_apps:
            type: array
            items:
              "$ref": "#/components/schemas/UUID"
          site_uri:
            type: string
            format: uri
          apple_store_uri:
            type: string
            format: uri
          play_store_uri:
            type: string
            format: uri
          icon_uri:
            type: string
            format: uri
          image_uri:
            type: string
            format: uri
          type:
            type: string
          detailed_description:
            type: string
        required:
        - icon_uri
        - type
    AppEnrollment:
      title: App Enrollment
      allOf:
      - "$ref": "#/components/schemas/BasicApp"
      - type: object
        properties:
          authentication:
            type: object
            properties:
              type:
                type: string
          api_version:
            type: string
          integrations:
            "$ref": "#/components/schemas/AppIntegrations"
    AppIntegrations:
      title: AppIntegrations
      type: object
      properties:
        menu_items:
          type: array
          items:
            "$ref": "#/components/schemas/BasicAppIntegration"
        side_panels:
          type: array
          items:
            "$ref": "#/components/schemas/BasicAppIntegration"
    BasicAppIntegration:
      title: Basic App Integration
      type: object
      properties:
        key:
          type: string
        path:
          type: string
          format: uri
        location:
          type: string
        name:
          type: object
          properties:
            value:
              type: string
    PagedUserApp:
      title: Paged User App
      description: Info of `User App`
      x-tags:
      - App
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/UserApp"
      - "$ref": "#/components/schemas/PageableMetadata"
    PagedBasicApp:
      title: Paged Basic App
      description: Info of `Basic App`
      x-tags:
      - App
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/BasicApp"
      - "$ref": "#/components/schemas/PageableMetadata"
    PagedDeveloperApp:
      title: Paged Developer App
      description: Info of `Developer App`
      x-tags:
      - App
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/DeveloperApp"
      - "$ref": "#/components/schemas/PageableMetadata"
    UserApp:
      title: User App
      allOf:
      - "$ref": "#/components/schemas/App"
      - type: object
        properties:
          installed:
            type: boolean
          vendor:
            type: object
            required:
            - name
            properties:
              name:
                type: string
              url:
                type: string
                format: uri
    DeveloperApp:
      title: Developer App
      allOf:
      - "$ref": "#/components/schemas/BasicApp"
      - type: object
        properties:
          org_id:
            type: string
            format: uuid
          fallback_details_language:
            type: string
          details_review_status:
            type: string
      description: ''
    App:
      title: App
      allOf:
      - "$ref": "#/components/schemas/BasicApp"
      - type: object
        properties:
          vendor:
            "$ref": "#/components/schemas/BasicVendor"
      description: ''
    AppInstallation:
      title: App Installation
      type: object
      properties:
        consents:
          type: array
          items:
            "$ref": "#/components/schemas/Authority"
        org_id:
          "$ref": "#/components/schemas/UUID"
      required:
      - consents
      - org_id
    BasicVendor:
      title: Basic Vendor
      allOf:
      - "$ref": "#/components/schemas/NamedModel"
      - type: object
        properties:
          developer_contact:
            type: string
            format: email
    Vendor:
      title: Vendor
      allOf:
      - "$ref": "#/components/schemas/BasicVendor"
      - "$ref": "#/components/schemas/IdentifiedModel"
    StorePerWorkspace:
      title: Store per Workspace
      type: object
      properties:
        name:
          type: string
        workspace_id:
          "$ref": "#/components/schemas/UUID"
        workspace_apps:
          type: array
          items:
            "$ref": "#/components/schemas/BasicApp"
    PagedStorePerWorkspace:
      title: Paged Basic App
      description: Info of `Basic App`
      x-tags:
      - App
      allOf:
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/StorePerWorkspace"
      - "$ref": "#/components/schemas/PageableMetadata"
    PaymentIntent:
      type: object
      description: ''
      properties:
        price_id:
          type: string
        transaction_mode:
          type: string
        product_quantity:
          type: integer
        cancel_callback_url:
          type: string
        success_callback_url:
          type: string
        contract:
          allOf:
          - "$ref": "#/components/schemas/IdentifiedModel"
          - "$ref": "#/components/schemas/ContractData"
    IntentConfirmation:
      type: object
      description: ''
      properties:
        payment_page_url:
          type: string
        contract:
          allOf:
          - "$ref": "#/components/schemas/IdentifiedModel"
          - "$ref": "#/components/schemas/ContractData"
    PageableAccountRoleDTO:
      title: PageableAccountRoleDTO
      allOf:
      - "$ref": "#/components/schemas/PageableMetadataLicensing"
      - type: object
        properties:
          content:
            type: array
            items:
              "$ref": "#/components/schemas/AccountRoleDTO"
        required:
        - content
    Error:
      title: Error
      type: object
      x-examples: {}
      properties:
        status:
          type: number
          minimum: 100
          maximum: 600
        code:
          type: string
        error:
          type: string
        message:
          type: string
        path:
          type: string
        timestamp:
          type: string
          format: date-time
  examples:
    PagedAccount:
      value:
        content:
        - name: Akash
          authorities:
          - context: ORGANIZATION
            permissions:
            - scope: WRITE
              name: TEMPLATES
            - scope: READ
              name: FARMSHOTS
            - scope: WRITE
              name: VENDORS
            - scope: WRITE
              name: SUPPLIES
            - scope: WRITE
              name: PRODUCTS
            - scope: WRITE
              name: BUDGETS
            - scope: WRITE
              name: REPORTS
            - scope: WRITE
              name: REVENUES
            - scope: WRITE
              name: SEASONS
            - scope: WRITE
              name: USERS
            - scope: WRITE
              name: ASSIGNEES
            - scope: WRITE
              name: PURCHASE_ORDERS
            - scope: WRITE
              name: PROPERTIES
            - scope: WRITE
              name: EXPENSES
            - scope: WRITE
              name: ORG
            - scope: WRITE
              name: TRACKER
            id: 384f0b5f-25a5-4102-85ca-7c4fa43a7832
          - context: PROPERTY
            permissions:
            - scope: WRITE
              name: FIELDS
            - scope: WRITE
              name: WAREHOUSES
            - scope: WRITE
              name: EQUIPMENTS
            - scope: WRITE
              name: INFORMATION
            - scope: WRITE
              name: TASKS
            id: dc2b45a4-3554-4c81-ab55-635d231c2810
          type: USER
          orgs:
          - name: Akash's Organization
            id: 384f0b5f-25a5-4102-85ca-7c4fa43a7832
          ssn: 
          role: 
          phone: "+91 98765-4321"
          locale: en
          country_code: BR
          clock_format: LET_LOCALE_DECIDE
          login: akash_anand.rangari@syngenta.com
          email: akash_anand.rangari@syngenta.com
          auto_created_org_id: 384f0b5f-25a5-4102-85ca-7c4fa43a7832
          opt_ins:
          - type: CELLPHONE_OFFERS
            accepted_on: '2020-05-28T13:52:56.000+0000'
            id: 15587d25-67bd-4b45-8ae4-f8d06f780940
          - type: EMAIL_OFFERS
            accepted_on: '2020-05-28T13:52:56.000+0000'
            id: aa68ea62-7ab1-42b7-84da-bbb4d1c54536
          id: c8f6a433-a8a2-481d-83c9-c2ee29681f6b
        pageable:
          sort:
            sorted: false
            unsorted: true
            empty: true
          page_size: 2000
          page_number: 0
          offset: 0
          unpaged: false
          paged: true
        total_pages: 1
        total_elements: 1
        last: true
        first: true
        sort:
          sorted: false
          unsorted: true
          empty: true
        number_of_elements: 1
        size: 2000
        number: 0
        empty: false
    CustomProductDTO:
      value:
        name: Product navigate
        indication: ACARICIDE
        selling_units: LITERS
        id: f801e123-206e-4821-8ed0-b6a06fc029cf
        deleted: false
        org_id: 8521b1d2-23c4-4340-bbc8-eb787f0edd4e
    CreateCustomProductDTO:
      value:
        name: Product A
        org_id: 8521b1d2-23c4-4340-bbc8-eb787f0edd4e
        indication: ACARICIDE
        selling_units: LITERS
    EditCustomProductDTO:
      value:
        name: Product A
        indication: ACARICIDE
        selling_units: LITERS
    SeasonLandBatchUpdate:
      value:
        updates:
        - operation: create
          land:
            properties:
            - id: 76fb58fe-1a0e-4681-a5b6-8f8dab5431be
            fields:
            - id: fec847e9-2909-4548-a3ea-772c29a62787
              planting_date: '2019-10-02T15:00:00Z'
              emergency_date: '2020-08-02T15:00:00Z'
              harvesting_date: '2020-10-02T15:00:00Z'
              start_date: '2019-10-02T15:00:00Z'
              end_date: '2020-10-02T15:00:00Z'
              varieties_ids:
              - 010b7b54-e006-4afc-a843-436b909ce90d
        - operation: remove
          land:
            properties:
            - id: '08ac19fb-14c8-457e-893f-95e054cc98a3'
            fields:
            - id: 89c8e4e5-2230-4366-80a0-ef0bd8ec37c0
    SeasonLandBatchUpdatesList:
      value:
        batch:
        - season_id: b5f51a97-c2e4-427f-bced-c384cae3b161
          updates:
          - operation: create
            land:
              properties:
              - id: 76fb58fe-1a0e-4681-a5b6-8f8dab5431be
              fields:
              - id: fec847e9-2909-4548-a3ea-772c29a62787
                planting_date: '2019-10-02T15:00:00Z'
                emergency_date: '2020-08-02T15:00:00Z'
                harvesting_date: '2020-10-02T15:00:00Z'
                start_date: '2019-10-02T15:00:00Z'
                end_date: '2020-10-02T15:00:00Z'
                varieties_ids:
                - 010b7b54-e006-4afc-a843-436b909ce90d
          - operation: remove
            land:
              properties:
              - id: '08ac19fb-14c8-457e-893f-95e054cc98a3'
              fields:
              - id: 89c8e4e5-2230-4366-80a0-ef0bd8ec37c0
    PagedSeason:
      value:
        content:
        - name: Wheat season 2020
          start_date: '2019-12-01T08:24:28.000+0000'
          end_date: '2020-05-31T08:24:28.000+0000'
          crop_id: 5ae35c1e-35f1-4c67-ba05-997c5191759f
          org_id: 384f0b5f-25a5-4102-85ca-7c4fa43a7832
          active: false
          deleted: false
          json_extended_attributes:
            name: string
          id: 6dba7432-fc66-4659-b4af-91e8a8ab021a
        - name: Watermelon season 2020
          start_date: '2020-04-01T09:06:26.000+0000'
          end_date: '2020-07-31T09:06:26.000+0000'
          crop_id: 6d5203f7-2b5c-485e-a6f8-b080ef1cf1a9
          org_id: 384f0b5f-25a5-4102-85ca-7c4fa43a7832
          active: true
          deleted: false
          json_extended_attributes:
            name: string
          id: d06e2de7-6b50-4dda-853e-ab7952def05f
        pageable:
          sort:
            sorted: false
            unsorted: true
            empty: true
          page_size: 2000
          page_number: 0
          offset: 0
          unpaged: false
          paged: true
        total_pages: 1
        total_elements: 2
        last: true
        first: true
        sort:
          sorted: false
          unsorted: true
          empty: true
        number_of_elements: 2
        size: 2000
        number: 0
        empty: false
    SeasonAndPropertiesIdsList:
      value:
        properties_by_season:
        - season_id: 77d056b9-06af-4db1-a177-2310cd1ba62e
          property_ids:
          - 77d056b9-06af-4db1-a177-2310cd1ba62e
          - 2b303caa-2dd9-49ae-addc-3b30a9c85a75
          - c7bdc03d-2257-44a3-b2a2-62b8223e42f7
          - 85ed3cee-6a91-4b4b-b4b8-d285ab62e6b1
          - 1b656569-47fb-4da7-a350-8e601167eb2d
    PagedSeasonField:
      value:
        content:
        - season_id: d06e2de7-6b50-4dda-853e-ab7952def05f
          property_id: dc2b45a4-3554-4c81-ab55-635d231c2810
          deleted: false
          varieties_ids:
          - a55e72ad-5be9-41ed-832b-5d6f61c67cf2
          planting_date: '2020-04-01T09:06:26.000+0000'
          emergency_date: '2020-06-01T09:06:26.000+0000'
          harvesting_date: '2020-07-31T09:06:26.000+0000'
          start_date: '2020-04-01T09:06:26.000+0000'
          end_date: '2020-07-31T09:06:26.000+0000'
          id: 027f565b-77f8-49d2-82e9-5ed452e2cb85
        pageable:
          sort:
            sorted: false
            unsorted: true
            empty: true
          page_size: 2000
          page_number: 0
          offset: 0
          unpaged: false
          paged: true
        total_pages: 1
        total_elements: 1
        last: true
        first: true
        sort:
          sorted: false
          unsorted: true
          empty: true
        number_of_elements: 1
        size: 2000
        number: 0
        empty: false
    CycleDTO:
      value:
        created_at: '2023-02-07T12:27:01.893+0000'
        updated_at: '2023-02-07T12:27:01.893+0000'
        org_id: 86d72961-803a-4505-94e2-c9e39fe14380
        name: CycleDTO Example
        start_at: '2022-02-28T15:26:02.135+0000'
        end_at: '2030-02-28T15:26:02.135+0000'
        deleted: false
        id: e55a7708-e42b-442d-9aea-cad5de550629
    CreateCycleDTO:
      value:
        org_id: 86d72961-803a-4505-94e2-c9e39fe14380
        name: CraateCycleDTO Example
        start_at: '2022-02-28T15:26:02.135+0000'
        end_at: '2030-02-28T15:26:02.135+0000'
    EditCycleDTO:
      value:
        name: CraateCycleDTO Example
        start_at: '2022-02-28T15:26:02.135+0000'
        end_at: '2030-02-28T15:26:02.135+0000'
    AttachSeasonDTO:
      value:
        updates:
        - operation: ADD
          season: fd41e610-6a1d-490a-a754-65932a930824
        - operation: remove
          season: aa9e6626-1b9b-4073-8337-b20615becc37
    AttachSeasonResultDTO:
      value:
        accepted_seasons:
        - season_id: fd41e610-6a1d-490a-a754-65932a930824
          operation: ADD
        refused_seasons:
        - season_id: aa9e6626-1b9b-4073-8337-b20615becc37
          operation": remove
          error: The Season and Cycle must belong to the same organization
    PagedCycleDTO:
      value:
        content:
        - created_at: '2023-02-07T12:27:01.893+0000'
          updated_at: '2023-02-07T12:27:01.893+0000'
          org_id: 86d72961-803a-4505-94e2-c9e39fe14380
          name: CycleDTO Example
          start_at: '2022-02-28T15:26:02.135+0000'
          end_at: '2030-02-28T15:26:02.135+0000'
          deleted: false
          id: e55a7708-e42b-442d-9aea-cad5de550629
        - created_at: '2023-02-07T12:27:01.893+0000'
          updated_at: '2023-02-07T12:27:01.893+0000'
          org_id: 86d72961-803a-4505-94e2-c9e39fe14380
          name: CycleDTO Example 2
          start_at: '2022-02-28T15:26:02.135+0000'
          end_at: '2030-02-28T15:26:02.135+0000'
          deleted: true
          id: e55a7708-e42b-442d-9aea-cad5de550620
        pageable:
          sort:
            sorted: false
            unsorted: true
            empty: true
          page_size: 2000
          page_number: 0
          offset: 0
          unpaged: false
          paged: true
        total_pages: 1
        total_elements: 2
        last: true
        first: true
        sort:
          sorted: false
          unsorted: true
          empty: true
        number_of_elements: 2
        size: 2000
        number: 0
        empty: false
    PagedRegion:
      value:
        content:
        - id: b152e9b1-f858-4f89-83ca-be18054c8048
          name: region35
          parent_id: 20b014b1-e81e-4a4f-991e-e8db908aee42
          property_id: 2e5e26a4-95d8-4198-83eb-3bcfc62f95e3
          declared_area: 30
          calculated_area: 2.5
          geometry:
            type: Feature
            properties:
              name: Example
            geometry:
              type: Polygon
              coordinates:
              - - - -78.3984375
                  - 59.35559611001632
                - - -69.2578125
                  - 48.45835188280866
                - - -34.453125
                  - 51.17934297928928
                - - -34.80468749999999
                  - 64.47279382008166
                - - -78.3984375
                  - 59.35559611001632
          reference_point:
            type: Polygon
            coordinates:
            - - - -78.3984375
                - 59.35559611001632
              - - -69.2578125
                - 48.45835188280866
              - - -34.453125
                - 51.17934297928928
              - - -34.80468749999999
                - 64.47279382008166
              - - -78.3984375
                - 59.35559611001632
        pageable:
          sort:
            sorted: false
            unsorted: true
            empty: true
          offset: 0
          page_size: 10
          page_number: 0
          paged: true
          unpaged: false
        last: true
        total_elements: 1
        total_pages: 1
        size: 10
        number: 0
        number_of_elements: 1
        first: true
        sort:
          sorted: false
          unsorted: true
          empty: true
        empty: false
    BasicField:
      value:
        name: Field Example
        property_id: aab63ec2-4756-11ea-8d24-5e6d0beb7caa
        parent_region_id: acfce85d-14ce-42d5-9685-cf260192550f
        json_extended_attributes:
          name: string
        geometry:
          type: Polygon
          coordinates:
          - - - -43.938330709934235
              - -19.93101503667817
            - - -43.93878936767578
              - -19.93277002901534
            - - -43.93769234418869
              - -19.933012095394105
            - - -43.937163949012756
              - -19.931247019541928
            - - -43.938330709934235
              - -19.93101503667817
        declared_area: 8.1
        event_date: '2019-10-02T00:00:00.000Z'
    Field:
      value:
        name: Field Example
        property_id: aab63ec2-4756-11ea-8d24-5e6d0beb7caa
        parent_region_id: acfce85d-14ce-42d5-9685-cf260192550f
        json_extended_attributes:
          name: string
        geometry:
          type: Polygon
          coordinates:
          - - - -43.938330709934235
              - -19.93101503667817
            - - -43.93878936767578
              - -19.93277002901534
            - - -43.93769234418869
              - -19.933012095394105
            - - -43.937163949012756
              - -19.931247019541928
            - - -43.938330709934235
              - -19.93101503667817
        declared_area: 8.1
        event_date: '2019-10-02T00:00:00.000Z'
        id: ba69208b-d8fa-4603-be43-aef2ebda9003
    FieldList:
      value:
      - name: Field Example
        property_id: aab63ec2-4756-11ea-8d24-5e6d0beb7caa
        parent_region_id: acfce85d-14ce-42d5-9685-cf260192550f
        geometry:
          type: Polygon
          coordinates:
          - - - -43.938330709934235
              - -19.93101503667817
            - - -43.93878936767578
              - -19.93277002901534
            - - -43.93769234418869
              - -19.933012095394105
            - - -43.937163949012756
              - -19.931247019541928
            - - -43.938330709934235
              - -19.93101503667817
        declared_area: 8.1
        event_date: '2019-10-02T00:00:00.000Z'
        id: ba69208b-d8fa-4603-be43-aef2ebda9003
    PagedField:
      value:
        content:
        - name: Field Example
          property_id: aab63ec2-4756-11ea-8d24-5e6d0beb7caa
          parent_region_id: acfce85d-14ce-42d5-9685-cf260192550f
          geometry:
            type: Polygon
            coordinates:
            - - - -43.938330709934235
                - -19.93101503667817
              - - -43.93878936767578
                - -19.93277002901534
              - - -43.93769234418869
                - -19.933012095394105
              - - -43.937163949012756
                - -19.931247019541928
              - - -43.938330709934235
                - -19.93101503667817
          declared_area: 8.1
          event_date: '2019-10-02T00:00:00.000Z'
          id: ba69208b-d8fa-4603-be43-aef2ebda9003
        pageable:
          sort:
            sorted: false
            unsorted: true
            empty: true
          offset: 0
          page_size: 10
          page_number: 0
          paged: true
          unpaged: false
        last: true
        total_elements: 1
        total_pages: 1
        size: 10
        number: 0
        number_of_elements: 1
        first: true
        sort:
          sorted: false
          unsorted: true
          empty: true
        empty: false
    PagedProperty:
      value:
        content:
        - org_id: 384f0b5f-25a5-4102-85ca-7c4fa43a7832
          root_region_id: ad23de56-0312-4a6c-b576-27a16ee8cc2d
          name: User's Farm
          time_zone: Asia/Kolkata
          country: 
          state: 
          city: 
          address: 
          zip_code: 
          place_id: 
          reference_point:
            type: Point
            coordinates:
            - 20.9235175
            - 77.7673384
          deleted: false
          id: dc2b45a4-3554-4c81-ab55-635d231c2810
        pageable:
          sort:
            sorted: false
            unsorted: true
            empty: true
          page_size: 2000
          page_number: 0
          offset: 0
          unpaged: false
          paged: true
        total_pages: 1
        total_elements: 1
        last: true
        first: true
        sort:
          sorted: false
          unsorted: true
          empty: true
        number_of_elements: 1
        size: 2000
        number: 0
        empty: false
    PagedOrg:
      value:
        content:
        - name: Test user's Company
          address: Inconfidentes St, 911
          city: Belo Horizonte
          state: Minas Gerais
          country: Brazil
          zip_code: 33000-999
          place_id: ChIJrTLr-GyuEmsRBfy61i59si0
          currency: USD
          unit_system: METRIC
          phone: "+5531911112222"
          id: 34550190-7d4f-4a03-91ec-4f5568e50029
        pageable:
          sort:
            sorted: false
            unsorted: true
            empty: true
          offset: 0
          page_size: 10
          page_number: 0
          paged: true
          unpaged: false
        last: true
        total_elements: 1
        total_pages: 1
        size: 10
        number: 0
        number_of_elements: 1
        first: true
        sort:
          sorted: false
          unsorted: true
          empty: true
        empty: false
    PagedInviteStatus:
      value:
        content:
        - name: Cathy
          email_address: Cathy76@hotmail.com
          reference: LUFFY
          login: 
          phone: 
          role: MANAGER
          status: ONE_STEP
          inviter_user_id: 7a8658e6-3b51-497a-83b6-3a62e59b7f01
          invitee_user_id: 870d3c3e-4cf3-4804-a5a5-d8ad724f7e30
          sent_invite_date: '2019-12-01T08:24:28.000+0000'
          accepted_invite_date: '2019-12-01T08:24:28.000+0000'
          accept_status: AUTOMATIC
          id: 841a1bb4-a6f9-4363-82d9-7718df088f5c
        - name: Avs
          email_address: avs@ddd.com
          reference: LUFFY
          login: 
          phone: 
          role: MANAGER
          status: ACCEPTED
          inviter_user_id: ff87ae97-198f-454b-85e1-7a8292ccdf82
          invitee_user_id: 870d3c3e-4cf3-4804-a5a5-d8ad724f7e30
          sent_invite_date: '2020-05-31T08:24:28.000+0000'
          accepted_invite_date: '2021-04-29T20:26:31.000+0000'
          accept_status: MANUAL
          id: b4575f88-15f1-4078-82e1-413ba1c9f87c
        pageable:
          sort:
            sorted: false
            unsorted: true
            empty: true
          offset: 0
          page_size: 10
          page_number: 0
          paged: true
          unpaged: false
        last: true
        total_elements: 2
        total_pages: 1
        size: 10
        number: 0
        number_of_elements: 2
        first: true
        sort:
          sorted: false
          unsorted: true
          empty: true
        empty: false
    PolicyDTO:
      value:
        id: DevEdit
        name: Dev Edit
        context: system
        version: 1
        level: app
        permissions:
        - action:
          - app_info:write
          - app_credentials:write
          - app_email_template:write
          - app_widgets:write
          resource: crn:app:{app_id}
    FeatureCollectionForKML:
      value:
        type: FeatureCollection
        features:
        - type: Feature
          geometry:
            type: Polygon
            coordinates:
            - - - 12.4726
                - 41.8859
              - - 12.4949
                - 41.8859
              - - 12.4949
                - 41.8992
              - - 12.4726
                - 41.8992
              - - 12.4726
                - 41.8859
          properties:
            visibility: true
            open: true
          id: fid--74c273ac_170cb596d51_-7fff
    FeatureCollectionForShapefile:
      value:
        type: FeatureCollection
        crs:
          type: name
          properties:
            name: EPSG:4326
        features:
        - type: Feature
          geometry:
            type: MultiPolygon
            coordinates:
            - - - - 12.4726
                  - 41.8859
                - - 12.4949
                  - 41.8859
                - - 12.4949
                  - 41.8992
                - - 12.4726
                  - 41.8992
                - - 12.4726
                  - 41.8859
          properties: {}
          id: fid--7479e0fb_170cbaca082_-8000
    PageablePolicyDTO:
      value:
        content:
        - id: DevEdit
          name: Dev Edit
          context: system
          version: 1
          level: app
          permissions:
          - action:
            - app_info:write
            - app_credentials:write
            - app_email_template:write
            - app_widgets:write
            resource: crn:app:{app_id}
        pageable:
          current_key: 
          size: 100
          next_key: 
        number_of_elements: 1
        last: true
        first: true
        empty: false
    PagedWorker:
      value:
        content:
        - name: Worker Name
          org_id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
          property_ids:
          - 06a36cd3-9e09-4b8d-8a7d-112ac0777622
          id: 002f4753-5c5b-5dbd-8ed6-f0a83f86090d
          note: string
          address: string
          type: EMPLOYEE
          applicator_licensing_number: string
          license_valid_through: '2020-04-01T09:06:26.000+0000'
        - name: Other Worker Name
          org_id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
          property_ids:
          - 06a36cd3-9e09-4b8d-8a7d-112ac0777622
          id: 010b7b54-e006-4afc-a843-436b909ce90d
          note: string
          address: string
          type: EXTERNAL_COMPANY
          phone: string
          email: string
        pageable:
          sort:
            sorted: false
            unsorted: true
            empty: true
          offset: 0
          page_size: 10
          page_number: 0
          paged: true
          unpaged: false
        last: true
        total_elements: 2
        total_pages: 1
        size: 10
        number: 0
        number_of_elements: 2
        first: true
        sort:
          sorted: false
          unsorted: true
          empty: true
        empty: false
    PagedEquipment:
      value:
        content:
        - name: Name
          org_id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
          type: VEHICLE
          id: 002f4753-5c5b-5dbd-8ed6-f0a83f86090d
          property_ids:
          - 06a36cd3-9e09-4b8d-8a7d-112ac0777622
        - name: Other
          org_id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
          type: IMPLEMENT
          id: 010b7b54-e006-4afc-a843-436b909ce90d
          property_ids:
          - 06a36cd3-9e09-4b8d-8a7d-112ac0777622
        pageable:
          sort:
            sorted: false
            unsorted: true
            empty: true
          offset: 0
          page_size: 10
          page_number: 0
          paged: true
          unpaged: false
        last: true
        total_elements: 2
        total_pages: 1
        size: 10
        number: 0
        number_of_elements: 2
        first: true
        sort:
          sorted: false
          unsorted: true
          empty: true
        empty: false
    PageableCanonProductDTO:
      value:
        content:
        - id: b657476c-afbe-4645-90de-e4a2d87344b1
          name: Product BR
          indication: FUNGICIDE/HERBICIDE/INSECTICIDE/NEMATICIDE/RODENTICIDE
          selling_units: METERS
          deleted: false
          source: TUBE
          country: BR
          company: Cropwise Catalog
          company_group: Cropwise GmBH
          gov_source: MINISTERY/SPAIN,
          created_at: '2023-01-18T16:34:04.068Z'
          updated_at: '2023-01-18T16:34:04.068Z'
          registration_number: 123
          twin_pack_code: 123
          language: Spanish
          phrases:
          - name: NO-INFORMATION
            group_name: NO-INFORMATION
            code: S01
            abbreviation: NO-INFO
            group_code: 99999
          formulation:
            company_group: VARIOUS
            indication: ACARICIDE
            active_ingredients:
            - name: N. TENUIS
              concentration_unit: KG/mL
        - id: b657476c-afbe-4645-90de-e4a2d87344b2
          name: Product BR 2
          indication: FUNGICIDE
          selling_units: METERS
          deleted: true
          source: TUBE
          country: BR
          company: Cropwise Catalog
          company_group: Cropwise GmBH
          gov_source: MINISTERY/SPAIN,
          created_at: '2023-01-18T16:34:04.068Z'
          updated_at: '2023-01-18T16:34:04.068Z'
          registration_number: 123
          twin_pack_code: 123
          language: Spanish
          phrases:
          - name: NO-INFORMATION
            group_name: NO-INFORMATION
            code: S01
            abbreviation: NO-INFO
            group_code: 99999
          formulation:
            company_group: VARIOUS
            indication: ACARICIDE
            active_ingredients:
            - name: N. TENUIS
              concentration_unit: KG/mL
        pageable:
          current_key: eyJwayI6IkNBTk9OI1RVQkUjQlIiLCJyayI6ImZhbHNlI2Jlc3Bva2Ugc29mdCBwYW50cyAzYzlhNDg4Mi1lMWNjLTQwOTMtOWE4OC01YmMwYjU2M2IwZmMjM2M5YTQ4ODItZTFjYy00MDkzLTlhODgtNWJjMGI1NjNiMGZjIiwib3JpZ2luIjoiQ0FOT04ifQ==
          size: 100
          next_key: eyJwayI6IkNBTk9OI1RVQkUjQlIiLCJyayI6ImZhbHNlI2Jlc3Bva2Ugc29mdCBwYW50cyAzYzlhNDg4Mi1lMWNjLTQwOTMtOWE4OC01YmMwYjU2M2IwZmMjM2M5YTQ4ODItZTFjYy00MDkzLTlhODgtNWJjMGI1NjNiMGZjIiwib3JpZ2luIjoiQ0FOT04ifQ==
        number_of_elements: 2
        last: true
        first: true
        empty: false
    PageableOrganizationProductsDTO:
      value:
        content:
        - id: b657476c-afbe-4645-90de-e4a2d87344b2
          name: Product Org A
          indication: FUNGICIDE
          selling_units: METERS
          deleted: false
          org_id: b38f2731-d20f-40aa-91f8-316caf4261e5
        - id: b657476c-afbe-4645-90de-e4a2d87344b1
          name: Product BR
          indication: FUNGICIDE/HERBICIDE/INSECTICIDE/NEMATICIDE/RODENTICIDE
          selling_units: METERS
          deleted: false
          source: TUBE
          country: BR
        - id: b657476c-afbe-4645-90de-e4a2d87344b2
          name: Product BR 2
          indication: FUNGICIDE
          selling_units: METERS
          deleted: true
          source: TUBE
          country: BR
          company: Cropwise Catalog
          company_group: Cropwise GmBH
          gov_source: MINISTERY/SPAIN,
          created_at: '2023-01-18T16:34:04.068Z'
          updated_at: '2023-01-18T16:34:04.068Z'
          registration_number: 123
          twin_pack_code: 123
          language: Spanish
          phrases:
          - name: NO-INFORMATION
          - group_name: NO-INFORMATION
          - code: S01
          - abbreviation: NO-INFO
          - group_code: 99999
          formulation:
            company_group: VARIOUS
            indication: ACARICIDE
            active_ingredients:
            - name: N. TENUIS
              concentration_unit: KG/mL
        pageable:
          current_key: eyJwayI6IkNBTk9OI1RVQkUjQlIiLCJyayI6ImZhbHNlI2Jlc3Bva2Ugc29mdCBwYW50cyAzYzlhNDg4Mi1lMWNjLTQwOTMtOWE4OC01YmMwYjU2M2IwZmMjM2M5YTQ4ODItZTFjYy00MDkzLTlhODgtNWJjMGI1NjNiMGZjIiwib3JpZ2luIjoiQ0FOT04ifQ==
          size: 100
          next_key: eyJwayI6IkNBTk9OI1RVQkUjQlIiLCJyayI6ImZhbHNlI2Jlc3Bva2Ugc29mdCBwYW50cyAzYzlhNDg4Mi1lMWNjLTQwOTMtOWE4OC01YmMwYjU2M2IwZmMjM2M5YTQ4ODItZTFjYy00MDkzLTlhODgtNWJjMGI1NjNiMGZjIiwib3JpZ2luIjoiQ0FOT04ifQ==
        number_of_elements: 3
        last: true
        first: true
        empty: false
    PageableEppoDTO:
      value:
        content:
        - created_by: 
          updated_by: 
          deleted_at: 
          created_at: '2023-04-05T20:49:28.000Z'
          updated_at: '2023-04-05T20:49:28.000Z'
          id: f3a33bab-0f3a-4eab-beee-99e6395ac61d
          eppo_code: VITVI
          scientific_name: Vitis vinifera
          en_name: Grape
        - created_by: 
          updated_by: 
          deleted_at: 
          created_at: '2023-04-05T20:49:28.000Z'
          updated_at: '2023-04-05T20:49:28.000Z'
          id: f3a33bab-0f3a-4eab-beee-99e6395ac61d
          eppo_code: VITVI
          scientific_name: Vitis vinifera
          en_name: Grape
        pageable:
          sort:
            sorted: false
            unsorted: true
            empty: true
          page_size: 2000
          page_number: 0
          offset: 0
          unpaged: false
          paged: true
        total_pages: 1
        total_elements: 1
        last: true
        first: true
        sort:
          sorted: false
          unsorted: true
          empty: true
        number_of_elements: 1
        size: 2000
        number: 0
        empty: false
    EppoDTO:
      value:
        created_by: 
        updated_by: 
        deleted_at: 
        created_at: '2023-04-05T20:49:28.000Z'
        updated_at: '2023-04-05T20:49:28.000Z'
        id: f3a33bab-0f3a-4eab-beee-99e6395ac61d
        eppo_code: VITVI
        scientific_name: Vitis vinifera
        en_name: Grape
    CreateEppoDTO:
      value:
        eppo_code: VITVI
        scientific_name: Vitis vinifera
        en_name: Grape
    EditEppoDTO:
      value:
        scientific_name: Vitis vinifera
        en_name: Grape
    VerifyEppoDTO:
      value:
        eppos:
        - VITVI
        - VITAE
        - VITCL
    VerifyEppoResonseDTO:
      value:
        valid_eppos:
        - VITVI
        - VITAE
        invalid_eppos:
        - VITCL
    PageableGrowthScaleDTO:
      value:
        content:
        - id: 254ee0fe-e45b-11ed-b5ea-0242ac120002
          name: Growth Scale
          org_id: d5fc8087-5791-4da5-909f-7331da2c9149
          growth_stages:
          - name: Growth Stage One
            order: 1
            type: emergence
            type_order: 1
            image_url: url
            instruction: Intructions for growth stage one
        pageable:
          sort:
            sorted: false
            unsorted: true
            empty: true
          page_size: 2000
          page_number: 0
          offset: 0
          unpaged: false
          paged: true
        total_pages: 1
        total_elements: 1
        last: true
        first: true
        sort:
          sorted: false
          unsorted: true
          empty: true
        number_of_elements: 1
        size: 2000
        number: 0
        empty: false
    PageableCropsDTO:
      value:
        content:
        - id: '05833896-e380-11ed-b5ea-0242ac120002'
          name:
          - language: en
            name: crop 1
          image_url: url
          icon: CORN
          specialization_type: type
          label: label for crop 1
        - id: 7b2fba08-f8fe-4691-9a90-9d3f6d380fc1
          name:
          - language: en
            name: crop 2
          image_url: url
          icon: WHEAT
          specialization_type: type
          label: label for crop 2
        pageable:
          sort:
            sorted: false
            unsorted: true
            empty: true
          page_size: 2000
          page_number: 0
          offset: 0
          unpaged: false
          paged: true
        total_pages: 1
        total_elements: 1
        last: true
        first: true
        sort:
          sorted: false
          unsorted: true
          empty: true
        number_of_elements: 1
        size: 2000
        number: 0
        empty: false
    PagedStorePerWorkspace:
      value:
        content:
        - name: Workspace A,
          workspace_id: 1ebe3408-cf14-4424-ab39-ebee50ec8047
          workspace_apps:
          - updated_at: '2021-11-24T13:46:29.000+0000'
            last_updated_by_id: df20403e-36bc-456e-8465-b4385d7b5284
            name: Cropwise Base
            short_description: Set up the digital representation of your farm and
              its areas.
            detailed_description: Set up the digital representation of your farm and
              its areas.
            published: true
            type: APPLICATION
            supported_apps: []
            site_uri: https://qa.app.cropwise.com/
            apple_store_uri: https://qa.app.cropwise.com/
            play_store_uri: https://qa.app.cropwise.com/
            icon_uri: https://base-strix-assets-dev.s3.amazonaws.com/app/43524f50-5749-5345-4253-434149554249-en
            image_uri: https://base-strix-assets-dev.s3.amazonaws.com/app/43524f50-5749-5345-4253-434149554249-en
            id: 43524f50-5749-5345-4253-434149554249"
        - name: Workspace B
          workspace_id: '06954e91-c0da-4f1a-a3ea-142ade8b0e90'
          workspace_apps:
          - updated_at: '2022-03-04T12:18:38.000+0000'
            last_updated_by_id: a6dbc7c8-f976-40cb-b0f9-b2b09172d45a
            name: Strider Tracker
            short_description: Strider Tracker
            detailed_description: null,
            published: true
            type: APPLICATION
            supported_apps: []
            site_uri: https://qa.app.cropwise.com/
            apple_store_uri: https://qa.app.cropwise.com/
            play_store_uri: https://qa.app.cropwise.com/
            icon_uri: https://base-strix-assets-dev.s3.amazonaws.com/app/53444454-5241-434b-4552-434149554249-en
            image_uri: https://base-strix-assets-dev.s3.amazonaws.com/app/43524f50-5749-5345-4253-434149554249-en
            id: 53444454-5241-434b-4552-434149554249"
          - updated_at: '2021-11-24T13:46:29.000+0000'
            last_updated_by_id: df20403e-36bc-456e-8465-b4385d7b5284
            name: Cropwise Base
            short_description: Set up the digital representation of your farm and
              its areas.
            detailed_description: Set up the digital representation of your farm and
              its areas.
            published: true
            type: APPLICATION
            supported_apps: []
            site_uri: https://qa.app.cropwise.com/
            apple_store_uri: https://qa.app.cropwise.com/
            play_store_uri: https://qa.app.cropwise.com/
            icon_uri: https://base-strix-assets-dev.s3.amazonaws.com/app/43524f50-5749-5345-4253-434149554249-en
            image_uri: https://base-strix-assets-dev.s3.amazonaws.com/app/43524f50-5749-5345-4253-434149554249-en
            id: 43524f50-5749-5345-4253-434149554249"
        - name: Workspace C
          workspace_id: d35ef7dc-269a-4507-abc9-d969abd3577e
          workspace_apps:
          - updated_at: '2021-11-24T13:46:29.000+0000'
            last_updated_by_id: df20403e-36bc-456e-8465-b4385d7b5284
            name: Cropwise Base
            short_description: Set up the digital representation of your farm and
              its areas.
            detailed_description: Set up the digital representation of your farm and
              its areas.
            published: true
            type: APPLICATION
            supported_apps: []
            site_uri: https://qa.app.cropwise.com/
            apple_store_uri: https://qa.app.cropwise.com/
            play_store_uri: https://qa.app.cropwise.com/
            icon_uri: https://base-strix-assets-dev.s3.amazonaws.com/app/43524f50-5749-5345-4253-434149554249-en
            image_uri: https://base-strix-assets-dev.s3.amazonaws.com/app/43524f50-5749-5345-4253-434149554249-en
            id: 43524f50-5749-5345-4253-434149554249"
          - updated_at: '2021-08-03T16:37:25.000+0000'
            last_updated_by_id: df20403e-36bc-456e-8465-b4385d7b5284
            name: Protector
            short_description: Cropwise Protector
            detailed_description: null,
            published: true
            type: APPLICATION
            supported_apps: []
            site_uri: https://qa.app.cropwise.com/
            apple_store_uri: https://qa.app.cropwise.com/
            play_store_uri: https://qa.app.cropwise.com/
            icon_uri: https://base-strix-assets-dev.s3.amazonaws.com/app/50524f54-4543-544f-5226-434149554249-en
            image_uri: https://base-strix-assets-dev.s3.amazonaws.com/app/43524f50-5749-5345-4253-434149554249-en
            id: 50524f54-4543-544f-5226-434149554249"
          - updated_at: '2022-03-04T12:18:38.000+0000'
            last_updated_by_id: a6dbc7c8-f976-40cb-b0f9-b2b09172d45a
            name: Strider Tracker
            short_description: Strider Tracker
            detailed_description: null,
            published: true
            type: APPLICATION
            supported_apps: []
            site_uri: https://qa.app.cropwise.com/
            apple_store_uri: https://qa.app.cropwise.com/
            play_store_uri: https://qa.app.cropwise.com/
            icon_uri: https://base-strix-assets-dev.s3.amazonaws.com/app/53444454-5241-434b-4552-434149554249-en
            image_uri: https://base-strix-assets-dev.s3.amazonaws.com/app/43524f50-5749-5345-4253-434149554249-en
            id: 53444454-5241-434b-4552-434149554249"
        pageable:
          sort:
            sorted: false,
            unsorted: true,
            empty: true
          page_number: '0,'
          page_size: 2147483647,
          offset: '0,'
          paged: true,
          unpaged: false
        total_elements: 3,
        total_pages: 1,
        last: true,
        first: true,
        number: '0,'
        sort:
          sorted: false,
          unsorted: true,
          empty: true
        number_of_elements: 3,
        size: 2147483647,
        empty: false
    PageableAccountRoleDTO:
      value:
        content:
        - id: account:a13924d5-cb9d-47a3-96d9-b31a169e6e09/system/WorkspaceOwner/crn:workspace:636f56f2-e0db-415c-8d31-237931c9e9b7
          account_id: a13924d5-cb9d-47a3-96d9-b31a169e6e09
          role_id: WorkspaceOwner
          name: Workspace Owner
          context: system
          version: 13
          level: workspace
          resource_attachment: crn:workspace:636f56f2-e0db-415c-8d31-237931c9e9b7
          resources:
          - crn:workspace:636f56f2-e0db-415c-8d31-237931c9e9b7
          - crn:workspace:636f56f2-e0db-415c-8d31-237931c9e9b7/org/*
        pageable:
          current_key: 
          size: 2500
          next_key: 
        number_of_elements: 1
        last: true
        first: true
        empty: false
  requestBodies:
    GrowthScaleDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        org_id:
          "$ref": "#/components/schemas/UUID"
        growth_stages:
          type: array
          items:
            "$ref": "#/components/schemas/Growth-Stage"
    AssociateCropsWithGrowthScaleBody:
      type: object
      properties:
        relationship:
          type: array
          items:
            type: object
            properties:
              crop_id:
                "$ref": "#/components/schemas/UUID"
              location:
                type: string
              operation:
                type: string
                enum:
                - ADD
                - REMOVE
    CreateGrowthScale:
      type: object
      properties:
        name:
          type: string
        org_id:
          type: string
        growth_stages:
          type: array
          items:
            "$ref": "#/components/schemas/Growth-Stage"
    EditGrowthScale:
      type: object
      properties:
        name:
          type: string
        org_id:
          type: string
        growht_stages:
          type: array
          items:
            "$ref": "#/components/schemas/Growth-Stage"
      required:
      - name
      - growht_stages
    AllocateGrowthScales:
      type: object
      properties:
        org_id:
          "$ref": "#/components/schemas/UUID"
        growth_scale:
          "$ref": "#/components/schemas/UUID"
        crop_id:
          "$ref": "#/components/schemas/UUID"
        location:
          type: string
      required:
      - org_id
      - growth_scale
      - crop_id
      - location
    EditCropsBody:
      title: EditCropsBody
      type: object
      propeties:
        name:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/CropNameModel"
        localized_crops:
          type: array
          items:
            "$ref": "#/components/schemas/LocalizedCrop"
          parent_id:
            type: string
          specialization_type:
            type: string
        required:
        - name
        - parent_id
    CropsCreate:
      type: object
      properties:
        name:
          type: array
          items:
            "$ref": "#/components/schemas/CropNameModel"
        localized_crops:
          type: array
          items:
            "$ref": "#/components/schemas/LocalizedCrop"
        specialization_type:
          type: string
        icon:
          type: string
        label:
          type: string
        image_url:
          type: string
        eppo_code:
          type: string
        parent_id:
          "$ref": "#/components/schemas/UUID"
  responses:
    LocalizedCropandGrowthScaleAssociationResponse:
      type: object
      properties:
        succeeded:
          type: array
          items:
            type: object
            properties:
              item:
                type: object
                properties:
                  crop_id:
                    "$ref": "#/components/schemas/UUID"
                  growth_scale_id:
                    "$ref": "#/components/schemas/UUID"
                  location:
                    type: string
                  operation:
                    type: string
                    enum:
                    - ADD
                    - REMOVE
        failed:
          type: array
          items:
            type: object
            properties:
              item:
                type: object
                properties:
                  crop_id:
                    "$ref": "#/components/schemas/UUID"
                  growth_scale_id:
                    "$ref": "#/components/schemas/UUID"
                  location:
                    type: string
                  operation:
                    type: string
                    enum:
                    - ADD
                    - REMOVE
              reason:
                type: string
    CreateGrowthScaleResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        org_id:
          type: string
        growht_stages:
          type: array
          items:
            "$ref": "#/components/schemas/Growth-Stage"
    LocalizedCropFromGrowthScaleResponse:
      type: object
      properties:
        location:
          type: string
        crop_id:
          "$ref": "#/components/schemas/UUID"
    AllocationGrowthScaleResponse:
      type: object
      properties:
        org_id:
          "$ref": "#/components/schemas/UUID"
        localized_crop:
          type: string
        growth_scale:
          "$ref": "#/components/schemas/UUID"
    CropsResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: array
          items:
            type: object
            properties:
              language:
                type: string
              name:
                type: string
        localized_crops:
          type: array
          items:
            "$ref": "#/components/schemas/LocalizedCrop"
        image_url:
          type: string
        icon:
          type: string
        specialization_type:
          type: string
        label:
          type: string
        scientific_name:
          type: string
        parent_id:
          "$ref": "#/components/schemas/UUID"
        eppo_code:
          type: string
    CreateCropsDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: array
          items:
            type: object
            properties:
              language:
                type: string
                required: true
              name:
                type: string
                required: true
        localized_crops:
          type: array
          items:
            type: object
            properties:
              location:
                type: string
              default_crop_zone_duration:
                type: integer
              varieties_ids:
                type: array
                items:
                  "$ref": "#/components/schemas/UUID"
        image_url:
          type: string
        icon:
          type: string
        specialization_type:
          type: string
        label:
          type: string
        eppo_code:
          type: string
        parent_id:
          "$ref": "#/components/schemas/UUID"
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        password:
          scopes:
            read: Read all resources
            write: Write all resources
          tokenUrl: "/oauth/token"
          refreshUrl: "/oauth/token"
        authorizationCode:
          scopes:
            read: Read all resources
            write: Write all resources
          refreshUrl: "/oauth/token"
          tokenUrl: "/oauth/token"
          authorizationUrl: "/oauth/authorize"
      description: "**NOTE:** OAuth URLs are relative to the server root and do not
        include the `v2/` prefix."
paths:
  "/v2/catalog/crops/{crop_id}":
    parameters:
    - schema:
        "$ref": "#/components/schemas/UUID"
      name: crop_id
      in: path
      required: true
    get:
      summary: Get Crop By Id
      operationId: get-v2-catalog-crops
      description: Get Crop By Id, if location is added to query, return Localized
        Crop
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/CropsResponse"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      tags:
      - Catalog Crop
      parameters:
      - schema:
          type: string
        in: query
        name: location
    delete:
      summary: Delete a crop
      operationId: delete-v2-catalog-crops-crop_id
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      description: Delete Crop By Id
      tags:
      - Catalog Crop
    put:
      summary: Edit Crop
      operationId: put-v2-catalog-crops-crop_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/CropsResponse"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      description: Edit a crop by Id
      tags:
      - Catalog Crop
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/requestBodies/CropsCreate"
  "/v2/catalog/crops":
    post:
      summary: Create a Crop
      operationId: post-v2-catalog-crops
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/CreateCropsDTO"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/requestBodies/CropsCreate"
      tags:
      - Catalog Crop
    get:
      summary: Get all crops from catalog
      tags:
      - Catalog Crop
      parameters:
      - schema:
          type: number
        name: size
        in: query
        required: false
      - schema:
          type: number
        name: page
        in: query
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PageableCropsDTO"
              examples:
                Retrieved crops:
                  "$ref": "#/components/examples/PageableCropsDTO"
  "/v2/catalog/growth-scales/{id}":
    parameters:
    - schema:
        "$ref": "#/components/schemas/UUID"
      name: id
      in: path
      required: true
    get:
      summary: Get Growth Scale By Id
      tags:
      - Catalog Crop Growth Scale
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/requestBodies/GrowthScaleDTO"
      operationId: get-v2-catalog-growth-scales
      description: Get Growth Scale By Id
      parameters: []
    put:
      summary: Update Growth Scale By Id
      operationId: put-v2-catalog-growth-scales-id
      tags:
      - Catalog Crop Growth Scale
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/requestBodies/GrowthScaleDTO"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      description: Update Growth Scale By Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/requestBodies/EditGrowthScale"
    delete:
      summary: Delete Growth Scale By Id
      operationId: delete-v2-catalog-growth-scales-id
      tags:
      - Catalog Crop Growth Scale
      responses:
        '200':
          description: OK
        '403':
          description: Forbbiden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      description: Delete Growth Scale By Id
  v2/catalog/growth-scales/{id}/localized-crops:
    parameters:
    - schema:
        "$ref": "#/components/schemas/UUID"
      name: id
      in: path
      required: true
    get:
      summary: Get all Localized Crops from a growth scale
      operationId: get-v2-localizeds-by-growth-scale
      tags:
      - Catalog Crop Growth Scale
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    "$ref": "#/components/schemas/UUID"
                  name:
                    type: string
                    example: Growth Scale
                  localized_crops:
                    type: array
                    items:
                      "$ref": "#/components/responses/LocalizedCropFromGrowthScaleResponse"
    post:
      summary: Associate a growth scale with localized crops
      operationId: post-v2-growth-scale-with-localized-associate
      tags:
      - Catalog Crop Growth Scale
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/requestBodies/AssociateCropsWithGrowthScaleBody"
      responses:
        '207':
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/LocalizedCropandGrowthScaleAssociationResponse"
  "/v2/catalog/growth-scales/allocation":
    post:
      summary: Create Growth Scale Allocation
      operationId: post-v2-catalog-growth-scale-allocation
      tags:
      - Catalog Crop Growth Scale
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/AllocationGrowthScaleResponse"
      description: Create Growth Scale Allocation
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/requestBodies/AllocateGrowthScales"
  "/v2/catalog/growth-scales":
    get:
      summary: Get All Growth Scales Associated With Org
      operationId: get-all-v2-catalog-growth-scales
      description: Get All Growth Scales Associated With Org using org id, crop id,
        location
      tags:
      - Catalog Crop Growth Scale
      parameters:
      - schema:
          type: string
        in: query
        name: crop_id
        required: true
      - schema:
          type: string
        in: query
        name: org_id
        required: true
      - schema:
          type: string
        in: query
        name: location
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/responses/CreateGrowthScaleResponse"
    post:
      summary: Create a Growth Scale
      operationId: post-v2-catalog-growth-scales
      tags:
      - Catalog Crop Growth Scale
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/CreateGrowthScaleResponse"
      description: Create a Growth Scale
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/requestBodies/GrowthScaleDTO"
  "/v2/catalog/growth-scales/localized-crop":
    get:
      summary: Get Growth Scales By Localized Crop
      tags:
      - Catalog Crop Growth Scale
      operationId: get-v2-g-scale-localized
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  non_default:
                    type: array
                    items:
                      "$ref": "#/components/responses/CreateGrowthScaleResponse"
                  default:
                    "$ref": "#/components/responses/CreateGrowthScaleResponse"
  "/v2/catalog/growth-scales/no-org":
    get:
      summary: Get All Growth Scales Without OrgId
      tags:
      - Catalog Crop Growth Scale
      operationId: get-v2-g-scale-without-org-id
      parameters:
      - schema:
          type: number
        name: page
        in: query
        required: false
      - schema:
          type: number
        name: size
        in: query
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PageableGrowthScaleDTO"
              examples:
                Got all Growth Scales without org:
                  "$ref": "#/components/examples/PageableGrowthScaleDTO"
  "/v2/catalog/eppos/{eppo_code}":
    parameters:
    - schema:
        type: string
      name: eppo_code
      in: path
      required: true
    put:
      summary: Edit an Eppo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
              - "$ref": "#/components/schemas/EppoDTO"
              examples:
                Edited Eppo:
                  "$ref": "#/components/examples/EppoDTO"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '403':
          description: Forbbiden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EditEppoDTO"
            examples:
              Edit Eppo:
                "$ref": "#/components/examples/EditEppoDTO"
      security: []
      operationId: edit-eppo-catalog-crops
      description: Edit Eppo
      tags:
      - Catalog Crop Eppo
    get:
      summary: Get Eppo by Code
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
              - "$ref": "#/components/schemas/EppoDTO"
              examples:
                EppoDTO:
                  "$ref": "#/components/examples/EppoDTO"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      security: []
      operationId: get-eppo-catalog-crops
      description: Get Eppos Code
      tags:
      - Catalog Crop Eppo
    delete:
      summary: Delete Eppos
      responses:
        '200':
          description: OK
        '403':
          description: Forbbiden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      security: []
      operationId: delete-eppo-catalog-crops
      description: delete Eppos Code
      tags:
      - Catalog Crop Eppo
  "/v2/catalog/eppos/verify":
    post:
      summary: Verify Eppos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
              - "$ref": "#/components/schemas/VerifyEppoResonseDTO"
              examples:
                Verify Eppos:
                  "$ref": "#/components/examples/VerifyEppoResonseDTO"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/VerifyEppoDTO"
            examples:
              Verify Eppos:
                "$ref": "#/components/examples/VerifyEppoDTO"
      security: []
      operationId: verify-eppo-catalog-crops
      description: Verify Eppos
      tags:
      - Catalog Crop Eppo
  "/v2/catalog/eppos":
    post:
      summary: Create New Eppo
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
              - "$ref": "#/components/schemas/EppoDTO"
              examples:
                Created Eppo:
                  "$ref": "#/components/examples/EppoDTO"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '403':
          description: Forbbiden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateEppoDTO"
            examples:
              Create a Eppo:
                "$ref": "#/components/examples/CreateEppoDTO"
      security: []
      operationId: create-eppo-catalog-crops
      description: Create New Eppo
      tags:
      - Catalog Crop Eppo
    get:
      summary: Get All Eppos
      parameters:
      - schema:
          type: number
        name: size
        in: query
        required: false
      - schema:
          type: number
        name: page
        in: query
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
              - "$ref": "#/components/schemas/PageableEppoDTO"
              examples:
                Got all Eppos:
                  "$ref": "#/components/examples/PageableEppoDTO"
      security: []
      operationId: get-all-eppo-catalog-crops
      description: Get All Eppos Codes
      tags:
      - Catalog Crop Eppo
  "/v2/catalog/orgs/{org_id}/products":
    parameters:
    - schema:
        type: string
        format: uuid
      name: org_id
      in: path
      required: true
    get:
      summary: Get an Organization's Product in the Catalog
      parameters:
      - schema:
          type: boolean
        name: full
        in: query
        required: false
        description: If all product's attributes will be returned or not. Default
          is false.
      - schema:
          type: boolean
        name: include_hidden
        in: query
        required: false
        description: If hidden products will be returned or not. Default is false
      - schema:
          type: boolean
        name: include_deleted
        in: query
        required: false
        description: If deleted products will be returned or not. Default is false
      - schema:
          type: array
          items:
            type: string
        name: include_attributes
        in: query
        required: false
        description: Which attributes will be included in the response. They will
          appear only if they do exist.
      - schema:
          "$ref": "#/components/schemas/ProductIndication"
        name: indication
        in: query
        required: false
        description: Requested product's type.
      - schema:
          type: string
        name: source
        in: query
        required: false
        description: Requested source. Default is organization's source
      - schema:
          type: string
        name: name
        in: query
        required: false
        description: Requested product's name. Search by "begins_with" and insensitive
          case.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
              - "$ref": "#/components/schemas/PageableOrganizationProductsDTO"
              examples:
                Retrieved canon products:
                  "$ref": "#/components/examples/PageableOrganizationProductsDTO"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      security: []
      operationId: get-org-catalog-products
      description: Get Organization Custom and Canon Products.
      tags:
      - Catalog Product
  "/v2/catalog/products/hidden":
    post:
      summary: Change the visibility of a canon product for a organization
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
              - "$ref": "#/components/schemas/HideProductResponseStatusInfoDTO"
              examples:
                Hidden Product Status:
                  value:
                    success:
                    - product_id: 131c269e-8802-4044-87ef-01fbe232d5dd
                      org_id: 89ffb700-21e6-479f-a248-7cf4c72ce388
                      error: false,
                      status: HIDDEN
                    errors: []
        '207':
          description: Multi-Status
          content:
            application/json:
              schema:
              - "$ref": "#/components/schemas/HideProductResponseStatusInfoDTO"
              examples:
                Hidden Product Status:
                  value:
                    success:
                    - product_id: 131c269e-8802-4044-87ef-01fbe232d5dd
                      org_id: 89ffb700-21e6-479f-a248-7cf4c72ce388
                      error: false,
                      status: HIDDEN
                    errors:
                    - product_id: 131c269e-8802-4044-87ef-01fbe232d5dc
                      org_id: 89ffb700-21e6-479f-a248-7cf4c72ce388
                      error: true,
                      status: 'ERROR: Product id 131c269e-8802-4044-87ef-01fbe232d5dc
                        does not exist or is deleted'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
              - "$ref": "#/components/schemas/HideProductResponseStatusInfoDTO"
              examples:
                Hidden Product Status All Error:
                  value:
                    success: []
                    errors:
                    - product_id: 131c269e-8802-4044-87ef-01fbe232d5dc
                      org_id: 89ffb700-21e6-479f-a248-7cf4c72ce388
                      error: true,
                      status: 'ERROR: Product id 131c269e-8802-4044-87ef-01fbe232d5dc
                        does not exist or is deleted'
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProductVisibilityListDTO"
            examples:
              Hide a Catalog Canon Product:
                value:
                - products:
                  - product_id: 1926a77f-cfe2-48f7-bea2-014293fe09b1
                    org_id: 89ffb700-21e6-479f-a248-7cf4c72ce388
                    hide: true
                  - product_id: 204f5722-5b37-46a8-b386-7d7c35c029c7
                    org_id: 1c43836f-79a1-4454-abfc-d3b91da744bd
                    hide: true
        description: Hidden and Unhidden data
      security: []
      operationId: change-canon-catalog-product-visibility
      description: Change Catalog Canon Product's Visibility.
      tags:
      - Catalog Product
  "/v2/catalog/products/{product_id}":
    parameters:
    - schema:
        type: string
        format: uuid
      name: product_id
      in: path
      required: true
    delete:
      summary: Delete a Custom Product in the Catalog
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      security: []
      operationId: delete-custom-catalog-product
      description: Delete Catalog Custom Product.
      tags:
      - Catalog Product
    get:
      summary: Get a Product in the Catalog
      parameters:
      - schema:
          type: boolean
        in: query
        name: full
        required: false
        description: Gets All the information about the product
      - schema:
          type: boolean
        in: query
        name: include_deleted
        required: false
        description: Include deleted products on search
      - schema:
          type: string
        in: query
        name: include_attributes
        required: false
        description: Add attributes to the product
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CustomProductDTO"
              examples:
                Get Product:
                  "$ref": "#/components/examples/CustomProductDTO"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      security: []
      operationId: get-custom-catalog-product
      description: Get Catalog Custom Product.
      tags:
      - Catalog Product
    put:
      summary: Edit a Custom Product in the Catalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
              - "$ref": "#/components/schemas/CustomProductDTO"
              examples:
                Updated Product:
                  "$ref": "#/components/examples/CustomProductDTO"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      security: []
      operationId: delete-custom-catalog-product
      description: Delete Catalog Custom Product.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EditCustomProductDTO"
            examples:
              Edit a Canon Product:
                "$ref": "#/components/examples/EditCustomProductDTO"
      tags:
      - Catalog Product
  "/v2/catalog/products":
    post:
      summary: Create a Custom Product in the Catalog
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
              - "$ref": "#/components/schemas/CustomProductDTO"
              examples:
                Created Product:
                  "$ref": "#/components/examples/CustomProductDTO"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateCustomProductDTO"
            examples:
              Create a Catalog Product:
                "$ref": "#/components/examples/CreateCustomProductDTO"
      security: []
      operationId: create-custom-catalog-product
      description: Create Catalog Custom Product.
      tags:
      - Catalog Product
    get:
      summary: Get Canon Products in the Catalog
      parameters:
      - schema:
          type: boolean
        name: full
        in: query
        required: false
        description: If all product's attributes will be returned or not. Default
          is false.
      - schema:
          type: boolean
        name: include_deleted
        in: query
        required: false
        description: If deleted products will be returned or not. Default is false
      - schema:
          type: array
          items:
            type: string
        name: include_attributes
        in: query
        required: false
        description: Which attributes will be included in the response. They will
          appear only if they do exist.
      - schema:
          "$ref": "#/components/schemas/ProductIndication"
        name: indication
        in: query
        required: false
        description: Requested product's type.
      - schema:
          type: string
        name: country
        in: query
        required: true
        description: Requested country
      - schema:
          type: string
        name: source
        in: query
        required: false
        description: Requested sourece. Default is TUBE
      - schema:
          type: string
        name: name
        in: query
        required: false
        description: Requested product's name. Search by "begins_with" and insensitive
          case.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
              - "$ref": "#/components/schemas/PageableCanonProductDTO"
              examples:
                Retrieved canon products:
                  "$ref": "#/components/examples/PageableCanonProductDTO"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        description: Get all canon products from a source and a country
      security: []
      operationId: get-canon-catalog-product-country-source
      description: Get Catalog Canon Product-country-source.
      tags:
      - Catalog Product
  "/v2/crops":
    get:
      summary: List crops
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedCrop"
              examples:
                List crops:
                  value:
                    content:
                    - name: Brachiaria
                      image_path: https://demeter-strix-assets.s3.amazonaws.com/crop/f7da51d1-55db-4257-8a52-afe564dd5acb.png
                      wk_slug: BRACHIARIA
                      varieties_ids:
                      - 9f08c50f-595a-425d-aaf3-cccb9d01051f
                      default_variety_id: 9f08c50f-595a-425d-aaf3-cccb9d01051f
                      id: f7da51d1-55db-4257-8a52-afe564dd5acb
                    - name: Bean
                      image_path: https://demeter-strix-assets.s3.amazonaws.com/crop/fe24f715-2715-4df0-be4b-e6a3a5c76d35.png
                      wk_slug: BEAN
                      varieties_ids:
                      - 22b9b970-5f25-43f9-895b-92754d1c3af8
                      default_variety_id: 22b9b970-5f25-43f9-895b-92754d1c3af8
                      id: fe24f715-2715-4df0-be4b-e6a3a5c76d35
                    pageable:
                      sort:
                        sorted: false
                        unsorted: true
                        empty: true
                      page_size: 2000
                      page_number: 0
                      offset: 0
                      unpaged: false
                      paged: true
                    total_pages: 1
                    total_elements: 2
                    last: true
                    first: true
                    sort:
                      sorted: false
                      unsorted: true
                      empty: true
                    number_of_elements: 2
                    size: 2000
                    number: 0
                    empty: false
      operationId: get-crops
      description: List Crops
      security: []
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          type: string
        name: Accept-Language
        in: header
        required: false
        description: Crop names will be responded in the chosen language
      tags:
      - Crop
  "/v2/cycles/{cycleId}/season-fields":
    get:
      parameters:
      - schema:
          type: string
        name: cycleId
        in: path
        required: true
        description: Cycle ID.
      summary: Get Cycle's season-fields
      responses:
        '200':
          description: Cycle's Season-fields Details
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedSeasonField"
              examples:
                Cycles and Season-fields Relationship:
                  "$ref": "#/components/examples/PagedSeasonField"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      tags:
      - Cycle
      - Field
      security: []
      operationId: get-cycle-season-fields
      description: Get Cycle's Season-fields
  "/v2/cycles/{cycleId}/seasons":
    get:
      parameters:
      - schema:
          type: string
        name: cycleId
        in: path
        required: true
        description: Cycle ID.
      - schema:
          type: boolean
        name: include_deleted
        in: query
        required: false
      summary: Get Cycle's season
      responses:
        '200':
          description: Cycle's Seasons Details
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedSeason"
              examples:
                Cycle's Seasons:
                  "$ref": "#/components/examples/PagedSeason"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      tags:
      - Cycle
      - Season
      security: []
      operationId: get-cycle-seasons
      description: Get Cycle's Seasons
    post:
      parameters:
      - schema:
          type: string
        name: cycleId
        in: path
        required: true
        description: Cycle ID.
      summary: Attach/Deattach Cycle's season
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AttachSeasonDTO"
            examples:
              AttachSeasonDTO:
                "$ref": "#/components/examples/AttachSeasonDTO"
      responses:
        '200':
          description: Attach/Deattach Cycle's season
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AttachSeasonResultDTO"
              examples:
                Cycle's Seasons:
                  "$ref": "#/components/examples/AttachSeasonResultDTO"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      tags:
      - Cycle
      - Season
      security: []
      operationId: attach-cycle-seasons
      description: Attach/Deattach Cycle's season
  "/v2/cycles/{cycleId}":
    get:
      parameters:
      - schema:
          type: string
        name: cycleId
        in: path
        required: true
        description: Cycle ID.
      summary: Get a Cycle
      responses:
        '200':
          description: Cycle Details
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CycleDTO"
              examples:
                CycleDTO:
                  "$ref": "#/components/examples/CycleDTO"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      tags:
      - Cycle
      security: []
      operationId: get-cycle
      description: Get a Cycle
    delete:
      parameters:
      - schema:
          type: string
        name: cycleId
        in: path
        required: true
        description: Cycle ID.
      summary: Delete a Cycle
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      tags:
      - Cycle
      security: []
      operationId: delete-cycle
      description: Delete a Cycle
    put:
      parameters:
      - schema:
          type: string
        name: cycleId
        in: path
        required: true
        description: Cycle ID.
      summary: Edit a Cycle
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EditCycleDTO"
            examples:
              EditCycleDTO:
                "$ref": "#/components/examples/EditCycleDTO"
        description: Edit cycle's details
      responses:
        '201':
          description: |-
            EDITED
            The `Cycle` was successfully edited
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CycleDTO"
              examples:
                CycleDTO:
                  "$ref": "#/components/examples/CycleDTO"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      tags:
      - Cycle
      security: []
      operationId: edit-cycle
      description: Edit a Cycle
  "/v2/cycles":
    post:
      summary: Create a Cycle
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateCycleDTO"
            examples:
              CreateCycleDTO:
                "$ref": "#/components/examples/CreateCycleDTO"
        description: Created cycle's details
      responses:
        '201':
          description: |-
            CREATED
            The `Cycle` was successfuly created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CycleDTO"
              examples:
                CycleDTO:
                  "$ref": "#/components/examples/CycleDTO"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      tags:
      - Cycle
      security: []
      operationId: create-cycle
      description: Create a Cycle
  "/v2/equipments/{id}":
    parameters:
    - schema:
        type: string
      name: id
      in: path
      required: true
    get:
      summary: List Equipment By ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EquipmentCatalogue"
              examples:
                List Equipment:
                  value:
                    name: Name
                    org_id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
                    type: VEHICLE
                    id: 002f4753-5c5b-5dbd-8ed6-f0a83f86090d
                    property_ids:
                    - 06a36cd3-9e09-4b8d-8a7d-112ac0777622
                    label: TRUCK
                    licensing_number: string
                    unit_id: string
                    serial_number: string
                    notes: string
                    current_status: OWNER
                    current_status_date: '2019-10-02T15:00:00Z'
                    model: string
                    year: 2021
                    manufacturer: string
      description: List Equipment
      operationId: get-equipment-by-id
      tags:
      - Equipment
    put:
      summary: Update Equipment
      parameters:
      - in: header
        name: client-id
        schema:
          type: string
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EquipmentCatalogue"
              examples:
                Updated worker:
                  value:
                    name: Name
                    org_id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
                    type: VEHICLE
                    id: 002f4753-5c5b-5dbd-8ed6-f0a83f86090d
                    json_extended_attributes:
                      name: string
                    property_ids:
                    - 06a36cd3-9e09-4b8d-8a7d-112ac0777622
                    label: TRUCK
                    licensing_number: string
                    unit_id: string
                    serial_number: string
                    notes: string
                    current_status: OWNER
                    current_status_date: '2019-10-02T15:00:00Z'
                    model: string
                    year: 2021
                    manufacturer: string
      operationId: update-equipment-by-id
      description: Update Equipment
      security: []
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EquipmentCatalogue"
      tags:
      - Equipment
    delete:
      summary: ''
      operationId: delete-equipment-by-id
      responses:
        '200':
          description: OK
      security: []
      tags:
      - Equipment
      description: Delete the specified Equipment.
  "/v2/equipments/ids":
    parameters:
    - schema:
        type: boolean
      name: include_deleted
      in: query
      required: false
      description: Return only non-deleted or both deleted and non-deleted organizations
    - schema:
        type: integer
      name: page
      in: query
      required: false
      description: Requested page number. Starting from zero. Default is zero.
    - schema:
        type: integer
      name: size
      in: query
      required: false
      description: Requested page size. Default is unpaged
    - schema:
        type: string
        enum:
        - VEHICLE
        - IMPLEMENT
        items:
          type: string
      name: type
      in: query
      required: false
      description: Equipment can be filtered by type. The type query can be VEHICLE
        or IMPLEMENT or empty (return both types)
    post:
      summary: Get Equipments by Ids
      operationId: get-equipments-by-equipments_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedEquipment"
              examples:
                'Equipments have been found:':
                  "$ref": "#/components/examples/PagedEquipment"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UUIDListModel"
            examples:
              Valid example:
                value:
                  ids:
                  - c8f6a433-a8a2-481d-83c9-c2ee29681f6b
                  - 15587d25-67bd-4b45-8ae4-f8d06f780940
                  - aa68ea62-7ab1-42b7-84da-bbb4d1c54536
      description: Get Equipments by its Ids. If an id does not exist, it does not
        return it.
      tags:
      - Equipment
  "/v2/equipments":
    post:
      summary: Equipment Creator
      parameters:
      - in: header
        name: client-id
        schema:
          type: string
        required: false
      operationId: post-v2-equipments
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EquipmentCatalogue"
              examples:
                Equipment Created:
                  value:
                    id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
                    org_id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
                    property_ids:
                    - 06a36cd3-9e09-4b8d-8a7d-112ac0777622
                    type: VEHICLE
                    name: Equip Name
                    label: TRUCK
                    json_extended_attributes:
                      name: string
                    licensing_number: string
                    unit_id: string
                    serial_number: string
                    notes: string
                    current_status: OWNER
                    current_status_date: '2019-10-02T15:00:00Z'
                    model: string
                    year: 2021
                    manufacturer: string
      description: Creates equipments for organizations
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BasicEquipmentCatalogue"
      tags:
      - Equipment
  "/v2/fields/{id}/current-season":
    parameters:
    - schema:
        "$ref": "#/components/schemas/UUID"
      name: id
      in: path
      required: true
    - schema:
        type: string
      in: header
      name: client-id
      required: false
    - schema:
        type: boolean
      name: include_extended
      in: query
      required: false
    get:
      summary: Get Current Season by Field Id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Season"
              examples:
                Season has been found:
                  value:
                    name: Watermelon season 2020
                    start_date: '2020-04-01T09:06:26.000+0000'
                    end_date: '2020-07-31T09:06:26.000+0000'
                    crop_id: 6d5203f7-2b5c-485e-a6f8-b080ef1cf1a9
                    org_id: 384f0b5f-25a5-4102-85ca-7c4fa43a7832
                    active: true
                    deleted: false
                    json_extended_attributes:
                      name: string
                    id: d06e2de7-6b50-4dda-853e-ab7952def05f
      operationId: get-current-season-by-field-id
      description: Get Current Season by Field Id
      security: []
      tags:
      - Field
      - Season
  "/v2/fields/{id}/history/{version_id}":
    delete:
      summary: Delete Field history by id
      responses:
        '200':
          description: OK
      operationId: deleteAreaHistoryUsingDELETE
      description: |
        Delete a field's version.
        The request is executed asynchronously, so at the end of the request the process may not be completed.
      parameters:
      - name: id
        in: path
        description: UUID from field
        required: true
        schema:
          "$ref": "#/components/schemas/UUID"
      - name: version_id
        in: path
        description: UUID from field versioning
        required: true
        schema:
          "$ref": "#/components/schemas/UUID"
      security: []
      tags:
      - Field
  "/v2/fields/{id}/history":
    get:
      summary: Field history details by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FieldHistoryDTO"
      operationId: get-areaHistory-ByEntityId
      description: Get the history of field by id
      parameters:
      - description: UUID from area
        name: id
        in: path
        schema:
          "$ref": "#/components/schemas/UUID"
        required: true
      - description: True to fetch deleted area
        name: include_deleted
        in: query
        schema:
          type: boolean
        required: false
        allowEmptyValue: false
        x-example: false
      - description: Date in format ISO "yyyy-MM-dd", Start date of area history
        name: since
        in: query
        schema:
          "$ref": "#/components/schemas/ISODateTime"
        required: false
        allowEmptyValue: false
      - description: Date in format ISO "yyyy-MM-dd", End date of area history
        name: until
        in: query
        schema:
          "$ref": "#/components/schemas/ISODateTime"
        required: false
        allowEmptyValue: false
      security: []
      tags:
      - Field
  "/v2/fields/{id}/seasons":
    parameters:
    - schema:
        "$ref": "#/components/schemas/UUID"
      name: id
      in: path
      required: true
    get:
      summary: Get Seasons by Field Id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/SeasonField"
              examples:
                Season has been found:
                  value:
                    content:
                    - created_at: '2020-09-28T01:46:15.000+0000'
                      updated_at: '2020-09-28T03:04:08.000+0000'
                      season_id: a174fce8-ef67-495f-aa0b-3af06ef8985f
                      property_id: 3275eda0-7f32-47f0-98dd-835a878f0257
                      deleted: false
                      varieties_ids:
                      - 37942bf2-ccbd-4981-a2c8-6ffa2d84de0e
                      planting_date: '2020-09-01T04:00:00.000+0000'
                      harvesting_date: 
                      emergency_date: '2020-09-06T04:00:00.000+0000'
                      start_date: '2020-09-01T04:00:00.000+0000'
                      end_date: '2021-08-31T04:00:00.000+0000'
                      id: 9d31a5e7-49e4-4d11-add6-04f732405038
                    - created_at: '2020-09-11T21:01:17.000+0000'
                      updated_at: '2020-09-28T01:32:52.000+0000'
                      season_id: '0807528e-6b9e-4400-ae23-49cc301c8225'
                      property_id: 3275eda0-7f32-47f0-98dd-835a878f0257
                      deleted: true
                      varieties_ids:
                      - a38ef304-c0d5-45ef-8203-a4da68ffd6fc
                      planting_date: '2020-08-28T04:00:00.000+0000'
                      harvesting_date: 
                      emergency_date: '2020-09-02T04:00:00.000+0000'
                      start_date: '2020-08-28T04:00:00.000+0000'
                      end_date: '2021-03-31T04:00:00.000+0000'
                      id: 9d31a5e7-49e4-4d11-add6-04f732405038
                    pageable:
                      sort:
                        unsorted: true
                        sorted: false
                        empty: true
                      offset: 0
                      page_number: 0
                      page_size: 2147483647
                      unpaged: false
                      paged: true
                    total_pages: 1
                    total_elements: 2
                    last: true
                    size: 2147483647
                    number: 0
                    first: true
                    sort:
                      unsorted: true
                      sorted: false
                      empty: true
                    number_of_elements: 2
                    empty: false
      operationId: get-seasons-by-field-id
      description: Get Seasons by Field Id
      security: []
      tags:
      - Field
      - Season
  "/v2/fields/{id}/versioning":
    parameters:
    - schema:
        "$ref": "#/components/schemas/UUID"
      name: id
      in: path
      required: true
    get:
      summary: Field details by version
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Field"
              examples:
                Fields details:
                  "$ref": "#/components/examples/Field"
      operationId: get-field-by-version
      description: Get the specified field by version
      parameters:
      - schema:
          type: array
          items:
            type: string
            enum:
            - geometry
        in: query
        name: attributes
        style: form
        explode: false
        description: Enable geometry in response
      - schema:
          type: string
          format: date-time
        example: '2021-01-30T08:30:00Z'
        in: query
        name: reference_date
        style: form
        explode: false
        description: The reference date as ISO ("yyyy-mm-dd")
      security: []
      tags:
      - Field
    post:
      summary: Restore field by version
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Field"
              examples:
                Fields details:
                  "$ref": "#/components/examples/Field"
      operationId: post-field-by-version
      description: Get the specified field by version
      parameters:
      - schema:
          type: array
          items:
            type: string
            enum:
            - geometry
        in: query
        name: attributes
        style: form
        explode: false
        description: Enable geometry in response
      - schema:
          type: string
          format: date-time
        example: '2021-01-30T08:30:00Z'
        in: query
        name: reference_date
        style: form
        explode: false
        description: The reference date as ISO ("yyyy-mm-dd")
      - schema:
          type: boolean
        in: query
        name: restore
        style: form
        explode: false
        description: Restore or return the field by version
      security: []
      tags:
      - Field
  "/v2/fields/{id}":
    parameters:
    - schema:
        "$ref": "#/components/schemas/UUID"
      name: id
      in: path
      required: true
    get:
      summary: Field details
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Field"
              examples:
                Fields details:
                  "$ref": "#/components/examples/Field"
      operationId: get-field-by-id
      description: Get the specified Field details.
      parameters:
      - schema:
          type: array
          items:
            type: string
            enum:
            - geometry
        in: query
        name: attributes
        style: form
        explode: false
        description: Enable geometry in response
      - schema:
          "$ref": "#/components/schemas/ISODateTime"
        in: query
        name: reference_date
        required: false
        description: Filter on reference_date
      security: []
      tags:
      - Field
    put:
      summary: Edit existing Field
      operationId: edit-field-by-id
      parameters:
      - in: header
        name: client-id
        schema:
          type: string
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Field"
              examples:
                Field was edited:
                  "$ref": "#/components/examples/Field"
      description: |
        Edits an existing `Field` with the specified id.
        The `event_date` param will define if the field will be edit or will create a new version.
        The request is executed asynchronously, so at the end of the request the process may not be completed.
      security: []
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Field"
            examples:
              Field to edit:
                "$ref": "#/components/examples/Field"
        description: Details of the field to be updated.
      tags:
      - Field
    delete:
      summary: Delete Field By ID
      operationId: delete-field-by-id
      responses:
        '200':
          description: OK
      tags:
      - Field
      description: |
        Delete the specified `Field`.
        The request is executed asynchronously, so at the end of the request the process may not be completed.
      security: []
  "/v2/fields/ids":
    parameters:
    - schema:
        "$ref": "#/components/schemas/ISODateTime"
      in: query
      name: reference_date
      required: false
      description: Filter on reference_date
    - schema:
        type: array
        items:
          type: string
          enum:
          - geometry
      in: query
      name: attributes
      style: form
      explode: false
      description: Enable geometry in response
    - schema:
        type: integer
      name: page
      in: query
      required: false
      description: Requested page number. Starting from zero. Default is zero.
    - schema:
        type: integer
      name: size
      in: query
      required: false
      description: Requested page size. Default is unpaged
    post:
      summary: Get Fields by Ids
      operationId: get-fields-by-field_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedField"
              examples:
                Fields by property:
                  "$ref": "#/components/examples/PagedField"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UUIDListModel"
            examples:
              Valid example:
                value:
                  ids:
                  - c8f6a433-a8a2-481d-83c9-c2ee29681f6b
                  - 15587d25-67bd-4b45-8ae4-f8d06f780940
                  - aa68ea62-7ab1-42b7-84da-bbb4d1c54536
      description: Get Fields by its Ids. If an id does not exist, it does not return
        it.
      tags:
      - Field
  "/v2/fields":
    get:
      summary: List fields
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedField"
              examples:
                Fields by property:
                  "$ref": "#/components/examples/PagedField"
      operationId: get-fields
      description: List the fields of a given Region.
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          "$ref": "#/components/schemas/UUID"
        name: parent_region_id
        in: query
        required: true
      - schema:
          type: array
          items:
            type: string
            enum:
            - geometry
        in: query
        name: attributes
        style: form
        explode: false
        description: Enable geometry in response
      - schema:
          type: array
          items:
            type: string
        in: query
        name: tags
        required: false
        description: Tags to filter
      - schema:
          "$ref": "#/components/schemas/ISODateTime"
        in: query
        name: reference_date
        required: false
        description: Filter on reference_date
      security: []
      tags:
      - Field
    post:
      summary: Create Field
      parameters:
      - in: header
        name: client-id
        schema:
          type: string
        required: false
      operationId: create-field
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Field"
              examples:
                Field was created:
                  "$ref": "#/components/examples/Field"
      description: |
        Create a `Field`.
        The request is executed asynchronously, so at the end of the request the process may not be completed.
      security: []
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BasicField"
            examples:
              Field to create:
                "$ref": "#/components/examples/BasicField"
        description: Details of the field to be created.
      tags:
      - Field
  "/v2/regions/{id}/history":
    get:
      summary: Region history details by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BaseRegionHistoryDTO"
      operationId: get-regionHistory-ByEntityId
      description: Get the history of region by id
      parameters:
      - name: include_deleted
        in: query
        description: True to fetch deleted area
        required: false
        schema:
          type: boolean
        allowEmptyValue: false
        x-example: false
      - name: id
        in: path
        description: UUID from region
        required: true
        schema:
          "$ref": "#/components/schemas/UUID"
      - name: since
        in: query
        description: Date in format ISO "yyyy-MM-ddTHH:mm:ssZ", Start date of area
          history
        required: false
        schema:
          "$ref": "#/components/schemas/ISODateTime"
        allowEmptyValue: false
      - name: until
        in: query
        description: Date in format ISO "yyyy-MM-ddTHH:mm:ssZ", End date of area history
        required: false
        schema:
          "$ref": "#/components/schemas/ISODateTime"
        allowEmptyValue: false
      security: []
      tags:
      - Region
  "/v2/regions":
    post:
      summary: Region
      operationId: post-v2-regions
      parameters:
      - in: header
        name: client-id
        schema:
          type: string
        required: false
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Region"
              examples:
                Region details:
                  value:
                    id: b152e9b1-f858-4f89-83ca-be18054c8048
                    name: region35
                    parent_id: 20b014b1-e81e-4a4f-991e-e8db908aee42
                    property_id: 2e5e26a4-95d8-4198-83eb-3bcfc62f95e3
                    declared_area: 30
                    calculated_area: 2.5
                    event_date: '2019-10-02T15:00:00.000Z'
                    json_extended_attributes:
                      name: string
                    geometry:
                      type: Feature
                      properties:
                        name: Example
                      geometry:
                        type: Polygon
                        coordinates:
                        - - - -78.3984375
                            - 59.35559611001632
                          - - -69.2578125
                            - 48.45835188280866
                          - - -34.453125
                            - 51.17934297928928
                          - - -34.80468749999999
                            - 64.47279382008166
                          - - -78.3984375
                            - 59.35559611001632
                    reference_point:
                      type: Polygon
                      coordinates:
                      - - - -78.3984375
                          - 59.35559611001632
                        - - -69.2578125
                          - 48.45835188280866
                        - - -34.453125
                          - 51.17934297928928
                        - - -34.80468749999999
                          - 64.47279382008166
                        - - -78.3984375
                          - 59.35559611001632
      description: |
        Create a `Region`.
        The request is executed asynchronously, so at the end of the request the process may not be completed.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BasicRegionV2"
            examples:
              Create Region:
                value:
                  name: region35
                  property_id: 2e5e26a4-95d8-4198-83eb-3bcfc62f95e3
                  parent_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  calculated_area: 2.5
                  declared_area: '30'
                  event_date: '2019-10-02T15:00:00.000Z'
                  json_extended_attributes:
                    name: string
                  geometry:
                    type: Feature
                    properties:
                      name: Example
                    geometry:
                      type: Polygon
                      coordinates:
                      - - - -78.3984375
                          - 59.35559611001632
                        - - -69.2578125
                          - 48.45835188280866
                        - - -34.453125
                          - 51.17934297928928
                        - - -34.80468749999999
                          - 64.47279382008166
                        - - -78.3984375
                          - 59.35559611001632
                  reference_point:
                    type: Polygon
                    coordinates:
                    - - - -78.3984375
                        - 59.35559611001632
                      - - -69.2578125
                        - 48.45835188280866
                      - - -34.453125
                        - 51.17934297928928
                      - - -34.80468749999999
                        - 64.47279382008166
                      - - -78.3984375
                        - 59.35559611001632
      tags:
      - Region
  "/v2/regions/{regionId}/fields":
    get:
      summary: List fields by regions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                  - "$ref": "#/components/schemas/BasicField"
              examples:
                Valid Field:
                  value:
                  - name: region35
                    parent_region_id: 20b014b1-e81e-4a4f-991e-e8db908aee42
                    property_id: 2e5e26a4-95d8-4198-83eb-3bcfc62f95e3
                    region_id: bf1ac975-482e-405d-a9f0-efe8ad7d7481
                    declared_area: 30
                    geometry:
                      type: Feature
                      properties:
                        name: Example
                      geometry:
                        type: Polygon
                        coordinates:
                        - - - -78.3984375
                            - 59.35559611001632
                          - - -69.2578125
                            - 48.45835188280866
                          - - -34.453125
                            - 51.17934297928928
                          - - -34.80468749999999
                            - 64.47279382008166
                          - - -78.3984375
                            - 59.35559611001632
                    reference_point:
                      type: Polygon
                      coordinates:
                      - - - -78.3984375
                          - 59.35559611001632
                        - - -69.2578125
                          - 48.45835188280866
                        - - -34.453125
                          - 51.17934297928928
                        - - -34.80468749999999
                          - 64.47279382008166
                        - - -78.3984375
                          - 59.35559611001632
                    tags:
                    - string
      operationId: get-fields-by-region
      description: Get the fields of an specified region
      parameters:
      - schema:
          "$ref": "#/components/schemas/UUID"
        name: regionId
        in: path
        required: true
      - schema:
          "$ref": "#/components/schemas/ISODateTime"
        in: query
        name: reference_date
        required: false
        description: Filter on reference_date
      security: []
      tags:
      - Region
  "/v2/regions/{id}/history/{version_id}":
    delete:
      summary: Delete Region history by id
      responses:
        '200':
          description: OK
      operationId: deleteRegionHistoryUsingDELETE
      description: |
        Delete a region's version.
        The request is executed asynchronously, so at the end of the request the process may not be completed.
      parameters:
      - name: id
        in: path
        description: UUID from region
        required: true
        schema:
          "$ref": "#/components/schemas/UUID"
      - name: version_id
        in: path
        description: UUID from region versioning
        required: true
        schema:
          "$ref": "#/components/schemas/UUID"
      security: []
      tags:
      - Region
  "/v2/regions/{regionId}/parent":
    get:
      summary: List regions by parent
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Region"
              examples:
                Valid Parent:
                  value:
                    id: b152e9b1-f858-4f89-83ca-be18054c8048
                    name: region35 new
                    parent_id: 20b014b1-e81e-4a4f-991e-e8db908aee42
                    property_id: 2e5e26a4-95d8-4198-83eb-3bcfc62f95e3
                    declared_area: 40
                    calculated_area: 2.5
                    geometry:
                      type: Feature
                      properties:
                        name: Example
                      geometry:
                        type: Polygon
                        coordinates:
                        - - - -78.3984375
                            - 59.35559611001632
                          - - -69.2578125
                            - 48.45835188280866
                          - - -34.453125
                            - 51.17934297928928
                          - - -34.80468749999999
                            - 64.47279382008166
                          - - -78.3984375
                            - 59.35559611001632
                    reference_point:
                      type: Polygon
                      coordinates:
                      - - - -78.3984375
                          - 59.35559611001632
                        - - -69.2578125
                          - 48.45835188280866
                        - - -34.453125
                          - 51.17934297928928
                        - - -34.80468749999999
                          - 64.47279382008166
                        - - -78.3984375
                          - 59.35559611001632
      operationId: get-regions-by-parentRegion
      description: Get the parentRegion of an specified region
      parameters:
      - schema:
          "$ref": "#/components/schemas/UUID"
        name: regionId
        in: path
        required: true
      - schema:
          "$ref": "#/components/schemas/ISODateTime"
        in: query
        name: reference_date
        required: false
        description: Filter on reference_date
      security: []
      tags:
      - Region
  "/v2/regions/{regionId}/region-tree":
    get:
      summary: List regionTree
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OutputRegionDTO"
              examples:
                Valid RegionTree:
                  value:
                    calculated_area: 
                    children_region:
                    - calculated_area: 0
                      children_region: []
                      created_at: '2021-04-27T23:22:09.000Z'
                      declared_area: 50
                      deleted_at: 
                      fields:
                      - declared_area: 2.06
                        geometry:
                          type: Feature
                          properties:
                            name: Example
                          geometry:
                            type: Polygon
                            coordinates:
                            - - - -78.3984375
                                - 59.35559611001632
                              - - -69.2578125
                                - 48.45835188280866
                              - - -34.453125
                                - 51.17934297928928
                              - - -34.80468749999999
                                - 64.47279382008166
                              - - -78.3984375
                                - 59.35559611001632
                        id: 2267331b-c31f-4781-a5ea-0ba84c0381de
                        name: Field26
                        parent_region_id: b04be56c-c865-4130-8a7e-422432a7bf61
                        property_id: 593b6155-d5b1-4876-9885-3bc3ea0409de
                        tags: []
                      - declared_area: 2.06
                        id: ccda1db8-8722-436a-8d83-9cbbd4883834
                        name: Field25
                        parent_region_id: b04be56c-c865-4130-8a7e-422432a7bf61
                        property_id: 593b6155-d5b1-4876-9885-3bc3ea0409de
                        tags: []
                      id: b04be56c-c865-4130-8a7e-422432a7bf61
                      last_modified: '2021-04-28T03:23:30.000Z'
                      name: test field
                      parent_id: b327eff3-629a-436c-bdf3-232239aaf33e
                      property_id: 593b6155-d5b1-4876-9885-3bc3ea0409de
                    created_at: '2021-03-24T23:42:33.000Z'
                    declared_area: 
                    deleted_at: 
                    fields: []
                    id: b327eff3-629a-436c-bdf3-232239aaf33e
                    last_modified: '2021-04-29T02:23:59.000Z'
                    name: ajays region
                    parent_id: 
                    property_id: 593b6155-d5b1-4876-9885-3bc3ea0409de
      operationId: get-regionTree
      description: Get the regionTree of an specified region
      parameters:
      - schema:
          "$ref": "#/components/schemas/UUID"
        name: regionId
        in: path
        required: true
      - schema:
          "$ref": "#/components/schemas/ISODateTime"
        in: query
        name: reference_date
        required: false
        description: Filter on reference_date
      security: []
      tags:
      - Region
  "/v2/regions/{regionId}/regions":
    get:
      summary: List regions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Region"
              examples:
                Valid Parent:
                  value:
                  - id: b152e9b1-f858-4f89-83ca-be18054c8048
                    name: region35
                    parent_id: 20b014b1-e81e-4a4f-991e-e8db908aee42
                    property_id: 2e5e26a4-95d8-4198-83eb-3bcfc62f95e3
                    declared_area: 30
                    calculated_area: 2.5
                    geometry:
                      type: Feature
                      properties:
                        name: Example
                      geometry:
                        type: Polygon
                        coordinates:
                        - - - -78.3984375
                            - 59.35559611001632
                          - - -69.2578125
                            - 48.45835188280866
                          - - -34.453125
                            - 51.17934297928928
                          - - -34.80468749999999
                            - 64.47279382008166
                          - - -78.3984375
                            - 59.35559611001632
                    reference_point:
                      type: Polygon
                      coordinates:
                      - - - -78.3984375
                          - 59.35559611001632
                        - - -69.2578125
                          - 48.45835188280866
                        - - -34.453125
                          - 51.17934297928928
                        - - -34.80468749999999
                          - 64.47279382008166
                        - - -78.3984375
                          - 59.35559611001632
      operationId: get-regions by regionId
      description: Get the Region of an specified region
      parameters:
      - schema:
          "$ref": "#/components/schemas/UUID"
        name: regionId
        in: path
        required: true
      - schema:
          "$ref": "#/components/schemas/ISODateTime"
        in: query
        name: reference_date
        required: false
        description: Filter on reference_date
      security: []
      tags:
      - Region
  "/v2/regions/{id}":
    parameters:
    - schema:
        "$ref": "#/components/schemas/UUID"
      name: id
      in: path
      required: true
    get:
      summary: Region details
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Region"
              examples:
                Region details:
                  value:
                    id: b152e9b1-f858-4f89-83ca-be18054c8048
                    name: region35
                    parent_id: 20b014b1-e81e-4a4f-991e-e8db908aee42
                    property_id: 2e5e26a4-95d8-4198-83eb-3bcfc62f95e3
                    declared_area: 30
                    calculated_area: 2.5
                    geometry:
                      type: Feature
                      properties:
                        name: Example
                      geometry:
                        type: Polygon
                        coordinates:
                        - - - -78.3984375
                            - 59.35559611001632
                          - - -69.2578125
                            - 48.45835188280866
                          - - -34.453125
                            - 51.17934297928928
                          - - -34.80468749999999
                            - 64.47279382008166
                          - - -78.3984375
                            - 59.35559611001632
                    reference_point:
                      type: Polygon
                      coordinates:
                      - - - -78.3984375
                          - 59.35559611001632
                        - - -69.2578125
                          - 48.45835188280866
                        - - -34.453125
                          - 51.17934297928928
                        - - -34.80468749999999
                          - 64.47279382008166
                        - - -78.3984375
                          - 59.35559611001632
      operationId: get-region-by-id
      description: 'Get the specified Region details.

        '
      security: []
      tags:
      - Region
    put:
      summary: Edit existing Region
      operationId: edit-region-by-id
      parameters:
      - in: header
        name: client-id
        schema:
          type: string
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Region"
              examples:
                Region was edited:
                  value:
                    id: b152e9b1-f858-4f89-83ca-be18054c8048
                    name: region35 new
                    parent_id: 20b014b1-e81e-4a4f-991e-e8db908aee42
                    property_id: 2e5e26a4-95d8-4198-83eb-3bcfc62f95e3
                    declared_area: 40
                    calculated_area: 2.5
                    event_date: '2019-10-02T00:00:00.000Z'
                    json_extended_attributes:
                      name: string
                    geometry:
                      type: Feature
                      properties:
                        name: Example
                      geometry:
                        type: Polygon
                        coordinates:
                        - - - -78.3984375
                            - 59.35559611001632
                          - - -69.2578125
                            - 48.45835188280866
                          - - -34.453125
                            - 51.17934297928928
                          - - -34.80468749999999
                            - 64.47279382008166
                          - - -78.3984375
                            - 59.35559611001632
                    reference_point:
                      type: Polygon
                      coordinates:
                      - - - -78.3984375
                          - 59.35559611001632
                        - - -69.2578125
                          - 48.45835188280866
                        - - -34.453125
                          - 51.17934297928928
                        - - -34.80468749999999
                          - 64.47279382008166
                        - - -78.3984375
                          - 59.35559611001632
      description: |
        Edits an existing `Region` with the specified id.
        The `event_date` param will define if the region will be edit or will create a new version.
        The request is executed asynchronously, so at the end of the request the process may not be completed.
      security: []
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Region"
            examples:
              Region to edit:
                value:
                  name: region35 new
                  parent_id: 20b014b1-e81e-4a4f-991e-e8db908aee42
                  property_id: 2e5e26a4-95d8-4198-83eb-3bcfc62f95e3
                  declared_area: 40
                  event_date: '2019-10-02T00:00:00.000Z'
                  calculated_area: 2.5
                  json_extended_attributes:
                    name: string
                  geometry:
                    type: Feature
                    properties:
                      name: Example
                    geometry:
                      type: Polygon
                      coordinates:
                      - - - -78.3984375
                          - 59.35559611001632
                        - - -69.2578125
                          - 48.45835188280866
                        - - -34.453125
                          - 51.17934297928928
                        - - -34.80468749999999
                          - 64.47279382008166
                        - - -78.3984375
                          - 59.35559611001632
                  reference_point:
                    type: Polygon
                    coordinates:
                    - - - -78.3984375
                        - 59.35559611001632
                      - - -69.2578125
                        - 48.45835188280866
                      - - -34.453125
                        - 51.17934297928928
                      - - -34.80468749999999
                        - 64.47279382008166
                      - - -78.3984375
                        - 59.35559611001632
              Root region to edit:
                value:
                  name: region35 new
                  parent_id: 
                  property_id: 2e5e26a4-95d8-4198-83eb-3bcfc62f95e3
                  declared_area: 40
                  calculated_area: 2.5
                  event_date: '2019-10-02T00:00:00.000Z'
                  json_extended_attributes:
                    name: string
                  geometry:
                    type: Feature
                    properties:
                      name: Example
                    geometry:
                      type: Polygon
                      coordinates:
                      - - - -78.3984375
                          - 59.35559611001632
                        - - -69.2578125
                          - 48.45835188280866
                        - - -34.453125
                          - 51.17934297928928
                        - - -34.80468749999999
                          - 64.47279382008166
                        - - -78.3984375
                          - 59.35559611001632
                  reference_point:
                    type: Polygon
                    coordinates:
                    - - - -78.3984375
                        - 59.35559611001632
                      - - -69.2578125
                        - 48.45835188280866
                      - - -34.453125
                        - 51.17934297928928
                      - - -34.80468749999999
                        - 64.47279382008166
                      - - -78.3984375
                        - 59.35559611001632
        description: Details of the Region to be updated.
      tags:
      - Region
    delete:
      summary: Delete Region By ID
      operationId: delete-Region-by-id
      responses:
        '200':
          description: OK
      tags:
      - Region
      description: |
        Delete the specified `Region`.
        The request is executed asynchronously, so at the end of the request the process may not be completed.
      security: []
  "/v2/regions/ids":
    post:
      summary: Get all regions by its ids
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedRegion"
              examples:
                Region have been found:
                  "$ref": "#/components/examples/PagedRegion"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      operationId: get-regions-ids
      description: Get the Regions by its ids
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UUIDListModel"
            examples:
              Valid example:
                value:
                  ids:
                  - c8f6a433-a8a2-481d-83c9-c2ee29681f6b
                  - 15587d25-67bd-4b45-8ae4-f8d06f780940
                  - aa68ea62-7ab1-42b7-84da-bbb4d1c54536
      parameters:
      - schema:
          type: boolean
        name: include_deleted
        in: query
        required: false
        description: Return only non-deleted or both deleted and non-deleted regions
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          "$ref": "#/components/schemas/ISODateTime"
        in: query
        name: reference_date
        required: false
        description: Filter on reference_date
      security: []
      tags:
      - Region
  "/v2/orgs/{org_id}/equipments/extended-search":
    get:
      summary: List Organization equipments with filtered extra_attribute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedEquipment"
              examples:
                List:
                  value:
                    content:
                    - json_extended_attributes:
                        name: equipment1
                      name: equipment91
                      type: VEHICLE
                      org_id: 325ebba0-7931-46df-a6f6-d3aaf5a1ee9f
                      property_ids:
                      - 7a7e48c7-6e72-40db-baab-6a2a13a9e4a8
                      label: 
                      id: 7ca58a94-89ed-452f-aa93-38fa06a9db51
                    - json_extended_attributes:
                        name: equipment1
                        type: eqip
                      name: equipment89
                      type: IMPLEMENT
                      org_id: 325ebba0-7931-46df-a6f6-d3aaf5a1ee9f
                      property_ids:
                      - 7a7e48c7-6e72-40db-baab-6a2a13a9e4a8
                      label: 
                      id: b9278c78-9dbf-4a55-b4ea-3f4b62056f03
                    pageable:
                      sort:
                        sorted: false
                        unsorted: true
                        empty: true
                      offset: 0
                      page_size: 2147483647
                      page_number: 0
                      unpaged: false
                      paged: true
                    total_pages: 1
                    last: true
                    total_elements: 3
                    size: 2147483647
                    number: 0
                    number_of_elements: 3
                    sort:
                      sorted: false
                      unsorted: true
                      empty: true
                    first: true
                    empty: false
      operationId: get-equipments-with-extendedAttribute
      description: List Organization Equipments with ExtendedAttribute
      security: []
      parameters:
      - schema:
          type: string
        name: org_id
        in: path
        required: true
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          type: string
        name: Accept-Language
        in: header
        required: false
        description: Names will be responded in the chosen language
      - schema:
          type: string
        name: name
        in: query
        required: false
        description: Equipments will be filtered by names containing the string in
          Equipment name
      - schema:
          type: string
        name: type
        in: query
        required: false
        description: Equipment can be filtered by type. The type query can be VEHICLE
          or IMPLEMENT
      - schema:
          type: string
        name: extra_attribute
        in: query
        required: false
        description: Filtered by multiple key-value pair "name":"some-name","type":"some-type"
      - schema:
          type: string
        in: header
        name: client-id
        required: false
      - schema:
          type: boolean
        name: include_extended
        in: query
        required: true
        description: Filtered extra-Attribute only if include_extended = true
      tags:
      - Organization
      - Equipment
  "/v2/orgs/{org_id}/properties/extended-search":
    get:
      summary: List Organization properties with filtered extra_attribute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedProperty"
              examples:
                Organization has Properties:
                  value:
                    content:
                    - json_extended_attributes:
                        name: property9
                      org_id: 325ebba0-7931-46df-a6f6-d3aaf5a1ee9f
                      root_region_id: bb4c1c2a-9e7f-448e-90d6-815d02c8683d
                      name: Property13
                      time_zone: Asia/Kolkata
                      country: India
                      state: MH
                      city: Kongaon
                      address: 421302, Kalyan - Bhiwandi Rd
                      zip_code: '421302'
                      place_id: 
                      fields_updated_at: '2021-05-07T10:24:53.000+0000'
                      reference_point:
                        type: Point
                        coordinates:
                        - 0
                        - 0
                      deleted: false
                      regulatory_zone: IN
                      id: 7a7e48c7-6e72-40db-baab-6a2a13a9e4a8
                    - json_extended_attributes:
                        name: property9
                        type: property
                      org_id: 325ebba0-7931-46df-a6f6-d3aaf5a1ee9f
                      root_region_id: ed54067a-6b7a-4bcd-b4b9-cbdc788d571b
                      name: Property14
                      time_zone: Asia/Kolkata
                      country: India
                      state: MH
                      city: Kongaon
                      address: 421302, Kalyan - Bhiwandi Rd
                      zip_code: '421302'
                      place_id: 
                      fields_updated_at: '2021-05-09T08:08:37.000+0000'
                      reference_point:
                        type: Point
                        coordinates:
                        - 0
                        - 0
                      deleted: false
                      regulatory_zone: IN
                      id: ccb755fc-b9d0-428e-bdb5-87e4718a9420
                    pageable:
                      sort:
                        sorted: false
                        unsorted: true
                        empty: true
                      offset: 0
                      page_size: 2147483647
                      page_number: 0
                      unpaged: false
                      paged: true
                    total_pages: 1
                    last: true
                    total_elements: 2
                    size: 2147483647
                    number: 0
                    number_of_elements: 2
                    sort:
                      sorted: false
                      unsorted: true
                      empty: true
                    first: true
                    empty: false
      operationId: get-properties-by-org-extended-search
      description: Gets all properties of an `Organization` and optionally the total
        area of each property.
      security: []
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          type: array
          items:
            type: string
            enum:
            - total_area
        in: query
        name: attributes
        style: form
        explode: false
        description: Optional area sum for property
      - schema:
          type: string
        name: extra_attribute
        in: query
        required: false
        description: Filtered by multiple key-value pair "name":"some-name","type":"some-type"
      - schema:
          type: string
        in: header
        name: client-id
        required: false
      - schema:
          type: boolean
        name: include_extended
        in: query
        required: true
        description: Filtered extra-Attribute only if include_extended = true
      tags:
      - Organization
      - Property
    parameters:
    - schema:
        type: string
      name: org_id
      in: path
      required: true
  "/v2/orgs/{org_id}/seasons/extended-search":
    get:
      summary: List Organization seasons with filtered extra_attribute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedSeason"
              examples:
                Organization has Seasons:
                  value:
                    content:
                    - name: Wheat season 2020
                      start_date: '2019-12-01T08:24:28.000+0000'
                      end_date: '2020-05-31T08:24:28.000+0000'
                      crop_id: 5ae35c1e-35f1-4c67-ba05-997c5191759f
                      org_id: 384f0b5f-25a5-4102-85ca-7c4fa43a7832
                      active: false
                      deleted: false
                      json_extended_attributes:
                        name: season1
                      id: 6dba7432-fc66-4659-b4af-91e8a8ab021a
                    - name: Watermelon season 2020
                      start_date: '2020-04-01T09:06:26.000+0000'
                      end_date: '2020-07-31T09:06:26.000+0000'
                      crop_id: 6d5203f7-2b5c-485e-a6f8-b080ef1cf1a9
                      org_id: 384f0b5f-25a5-4102-85ca-7c4fa43a7832
                      active: true
                      deleted: false
                      json_extended_attributes:
                        name: season1
                      id: d06e2de7-6b50-4dda-853e-ab7952def05f
                    pageable:
                      sort:
                        sorted: false
                        unsorted: true
                        empty: true
                      page_size: 2000
                      page_number: 0
                      offset: 0
                      unpaged: false
                      paged: true
                    total_pages: 1
                    total_elements: 2
                    last: true
                    first: true
                    sort:
                      sorted: false
                      unsorted: true
                      empty: true
                    number_of_elements: 2
                    size: 2000
                    number: 0
                    empty: false
      operationId: get-seasons-by-org-with-extended-attribute
      description: Gets all seasons of an `Organization with ExtendedAttribute`
      security: []
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          type: boolean
        name: include_extended
        in: query
        required: false
      - schema:
          type: string
        name: extra_attribute
        in: query
        required: false
        description: Filtered by multiple key-value pair "name":"some-name","type":"some-type"
      tags:
      - Organization
      - Season
    parameters:
    - schema:
        type: string
      name: org_id
      in: path
      required: true
    - schema:
        type: string
      in: header
      name: client-id
      required: false
  "/v2/orgs/extended-search":
    get:
      summary: List allowed Organizations with filtered extra_attribute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedOrg"
              examples:
                Oganizations have been found:
                  value:
                    content:
                    - json_extended_attributes:
                        name: syn org
                        type: org
                      name: Syngenta Org 2
                      address: Inconfidentes St, 911
                      city: Belo Horizonte
                      state: Minas Gerais
                      country: Brazil
                      zip_code: 33000-999
                      place_id: ChIJrTLr-GyuEmsRBfy61i59si0
                      currency: EUR
                      unit_system: METRIC
                      phone: "+5531911112222"
                      email: thorvetejal@gmail.com
                      employer_identification_number: 
                      picture_url: https://io-strider-pictures.s3-sa-east-1.amazonaws.com/org/1b06c6e4-7a7c-4c54-bc21-9711b8198cef
                      deleted: false
                      reference_point: 
                      id: 1b06c6e4-7a7c-4c54-bc21-9711b8198cef
                    pageable:
                      sort:
                        sorted: false
                        unsorted: true
                        empty: true
                      offset: 0
                      page_number: 0
                      page_size: 2147483647
                      paged: true
                      unpaged: false
                    total_elements: 1
                    total_pages: 1
                    last: true
                    size: 2147483647
                    number: 0
                    sort:
                      sorted: false
                      unsorted: true
                      empty: true
                    number_of_elements: 1
                    first: true
                    empty: false
      operationId: get-allowed-orgs-extended-search
      description: 'Gets all Organizations that are allowed to the authenticated Account.

        '
      security: []
      parameters:
      - schema:
          type: array
          items:
            type: string
        name: workspaces
        in: query
        required: false
        description: Filter results by workspaces.
      - schema:
          type: array
          items:
            type: string
        name: licensing_accounts
        in: query
        required: false
        description: Filter results by workspaces.
      - schema:
          type: string
        name: name
        in: query
        required: false
        description: Filter results by name.
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          type: string
        name: extra_attribute
        in: query
        required: false
        description: Filtered by multiple key-value pair "name":"some-name","type":"some-type"
      - schema:
          type: string
        in: header
        name: client-id
        required: false
      - schema:
          type: boolean
        name: include_extended
        in: query
        required: true
        description: Filtered extra-Attribute only if include_extended = true
      tags:
      - Organization
  "/v2/orgs/{orgId}/cycles":
    get:
      summary: List Organization's Cycles
      operationId: get-org-cycles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedCycleDTO"
              examples:
                Organization has Cycles:
                  "$ref": "#/components/examples/PagedCycleDTO"
      description: Gets all cycles of an `Organization`
      security: []
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      tags:
      - Organization
      - Cycle
    parameters:
    - schema:
        type: string
      name: orgId
      in: path
      required: true
  "/v2/orgs/{org_id}/equipments":
    get:
      summary: List Organization equipments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedEquipment"
              examples:
                'Equipments have been found:':
                  "$ref": "#/components/examples/PagedEquipment"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      operationId: get-equipments
      description: List Organization Equipments
      security: []
      parameters:
      - schema:
          type: string
        name: org_id
        in: path
        required: true
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          type: string
        name: Accept-Language
        in: header
        required: false
        description: Names will be responded in the chosen language
      - schema:
          type: string
        name: name
        in: query
        required: false
        description: Equipments will be filtered by names containing the string in
          Equipment name
      - schema:
          type: string
        name: type
        in: query
        required: false
        description: Equipment can be filtered by type. The type query can be VEHICLE
          or IMPLEMENT
      tags:
      - Organization
      - Equipment
  "/v2/orgs/{org_id}/picture":
    parameters:
    - schema:
        type: string
      name: org_id
      in: path
      required: true
    get:
      summary: Get Organization Photo
      responses:
        '302':
          description: Found (Redirects to actual image url)
        '404':
          description: Not Found
      operationId: get-org-picture-by-org-id
      description: Requests the `Organization` main photo.
      security: []
      tags:
      - Organization
    post:
      summary: Upload Organization Photo
      operationId: post-org-picture
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  avatar_url:
                    type: string
              examples:
                Upload Successful:
                  value:
                    avatar_url: 'https://base-strix-assets-dev.s3.amazonaws.com/org/a36eb6ab-0fb5-41fe-9a37-36c463e224bc                '
      description: Uploads Organization main photo.
      security: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        description: Multipart Form including the picture file
      tags:
      - Organization
    delete:
      summary: Remove Organization Photo
      operationId: delete-org-picture-by-org-id
      responses:
        '200':
          description: OK
      description: Removes the `Organization` main photo.
      security: []
      tags:
      - Organization
  "/v2/orgs/{org_id}/products":
    get:
      summary: List Organization Products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedProduct"
              examples:
                List:
                  value:
                    content:
                    - org_id: 06a34cd3-9e09-7b8d-8a7d-112ac07776a3
                      name: Update Product Name
                      id: 06a36cd3-9e09-4b8d-8a7d-112ac07776a3
                      manufacturer: Manufacturer Name
                      unit_of_measurement: KILOGRAMS
                      type: VARIETY
                    - org_id: 06a34cd3-9e09-7b8d-8a7d-112ac07776a3
                      name: Update Product Name
                      id: 06a36cd3-9e09-4b8d-8a7d-112ac07776a3
                      manufacturer: Manufacturer Name
                      unit_of_measurement: KILOGRAMS
                      type: VARIETY
                    pageable:
                      sort:
                        sorted: false
                        unsorted: true
                        empty: true
                      offset: 0
                      page_size: 10
                      page_number: 0
                      paged: true
                      unpaged: false
                    last: true
                    total_elements: 2
                    total_pages: 1
                    size: 10
                    number: 0
                    number_of_elements: 2
                    first: true
                    sort:
                      sorted: false
                      unsorted: true
                      empty: true
                    empty: false
      operationId: get-products-by-org-id
      description: List Organization Products
      security: []
      parameters:
      - schema:
          type: string
        name: org_id
        in: path
        required: true
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          type: string
        name: Accept-Language
        in: header
        required: false
        description: Names will be responded in the chosen language
      - schema:
          type: string
        name: filters
        in: query
        required: false
        description: A boolean filter kind of logical expression to filter data
      - schema:
          type: boolean
        name: show_canonicals
        in: query
        required: false
        description: Shows the canonical products in the response
      - schema:
          type: string
        name: location
        in: query
        required: false
        description: Filter by location
      tags:
      - Organization
      - Product
  "/v2/orgs/{org_id}/properties":
    get:
      summary: List Organization properties
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedProperty"
              examples:
                Organization has Properties:
                  "$ref": "#/components/examples/PagedProperty"
      operationId: get-properties-by-org
      description: Gets all properties of an `Organization` and optionally the total
        area of each property.
      security: []
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          type: array
          items:
            type: string
            enum:
            - total_area
        in: query
        name: attributes
        style: form
        explode: false
        description: Optional area sum for property
      tags:
      - Organization
      - Property
    parameters:
    - schema:
        type: string
      name: org_id
      in: path
      required: true
  "/v2/orgs/{org_id}/seasons":
    get:
      summary: List Organization seasons
      operationId: get-seasons-by-org
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedSeason"
              examples:
                Organization has Seasons:
                  "$ref": "#/components/examples/PagedSeason"
      description: Gets all seasons of an `Organization`
      security: []
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          type: boolean
        name: include_extended
        in: query
        required: false
      tags:
      - Organization
      - Season
    parameters:
    - schema:
        type: string
      name: org_id
      in: path
      required: true
    - schema:
        type: string
      in: header
      name: client-id
      required: false
  "/v2/orgs/{org_id}":
    get:
      summary: Organization Details
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Organization"
              examples:
                Organization has been found:
                  value:
                    name: User's Organization
                    address: 
                    city: 
                    state: 
                    country: 
                    zip_code: 
                    place_id: 
                    currency: USD
                    unit_system: METRIC
                    phone: "+91 98765-4321"
                    email: user@email.com
                    employer_identification_number: 
                    picture_url: https://base-strix-assets-dev.s3.amazonaws.com/org/384f0b5f-25a5-4102-85ca-7c4fa43a7832
                    deleted: false
                    id: 384f0b5f-25a5-4102-85ca-7c4fa43a7832
      operationId: get-org-by-id
      description: Gets the specified Organization details.
      security: []
      parameters:
      - schema:
          type: string
        name: org_id
        in: path
        required: true
        description: ''
      tags:
      - Organization
    put:
      summary: Organization Updater
      parameters:
      - in: header
        name: client-id
        schema:
          type: string
        required: false
      responses:
        '200':
          description: |-
            OK
            The `Organization` was successfuly updated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Organization"
              examples:
                Organization Updated successfuly:
                  value:
                    name: Dummy's Organization
                    address: 
                    city: 
                    state: 
                    country: India
                    zip_code: 
                    place_id: 
                    currency: USD
                    unit_system: METRIC
                    phone: "+91 97686-6211"
                    email: dummy@dum.com
                    employer_identification_number: 
                    json_extended_attributes:
                      name: string
                    picture_url: https://base-strix-assets-dev.s3.amazonaws.com/org/a36eb6ab-0fb5-41fe-9a37-36c463e224bc
                    deleted: false
                    id: a36eb6ab-0fb5-41fe-9a37-36c463e224bc
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Organization"
            examples:
              Update Organization:
                value:
                  id: 34550190-7d4f-4a03-91ec-4f5568e50029
                  name: Test user's Company
                  address: Inconfidentes St, 911
                  city: Belo Horizonte
                  state: Minas Gerais
                  country: Brazil
                  zip_code: 33000-999
                  place_id: ChIJrTLr-GyuEmsRBfy61i59si0
                  currency: USD
                  unit_system: METRIC
                  phone: "+5531911112222"
                  json_extended_attributes:
                    name: string
        description: Details of the Organization to be updated.
      tags:
      - Organization
      security: []
      operationId: update-org-by-id
      description: Edits an existing `Organization` with the specified id.
    parameters:
    - schema:
        type: string
      name: org_id
      in: path
      required: true
    delete:
      summary: ''
      operationId: delete-org-by-id
      responses:
        '200':
          description: OK
      security: []
      tags:
      - Organization
      description: Delete the specified Organization.
  "/v2/orgs/ids/properties":
    parameters:
    - schema:
        type: boolean
      name: include_deleted
      in: query
      required: false
      description: Return only non-deleted or both deleted and non-deleted properties
    - schema:
        type: integer
      name: page
      in: query
      required: false
      description: Requested page number. Starting from zero. Default is zero.
    - schema:
        type: integer
      name: size
      in: query
      required: false
      description: Requested page size. Default is unpaged
    post:
      summary: Get Orgs' Properties by Orgs' Ids
      operationId: get-properties-by-orgs_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedProperty"
              examples:
                Organizations have Properties:
                  "$ref": "#/components/examples/PagedProperty"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UUIDListModel"
            examples:
              Valid example:
                value:
                  ids:
                  - c8f6a433-a8a2-481d-83c9-c2ee29681f6b
                  - 15587d25-67bd-4b45-8ae4-f8d06f780940
                  - aa68ea62-7ab1-42b7-84da-bbb4d1c54536
      description: Get Properties by its org's Ids. If an id does not exist, it does
        not return it.
      tags:
      - Organization
      - Property
  "/v2/orgs/ids/seasons":
    parameters:
    - schema:
        type: boolean
      name: include_deleted
      in: query
      required: false
      description: Return only non-deleted or both deleted and non-deleted seasons
    - schema:
        type: integer
      name: page
      in: query
      required: false
      description: Requested page number. Starting from zero. Default is zero.
    - schema:
        type: integer
      name: size
      in: query
      required: false
      description: Requested page size. Default is unpaged
    post:
      summary: Get Orgs' Seasons by Orgs' Ids
      operationId: get-seasons-by-orgs_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedSeason"
              examples:
                Organizations have Seasons:
                  "$ref": "#/components/examples/PagedSeason"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UUIDListModel"
            examples:
              Valid example:
                value:
                  ids:
                  - c8f6a433-a8a2-481d-83c9-c2ee29681f6b
                  - 15587d25-67bd-4b45-8ae4-f8d06f780940
                  - aa68ea62-7ab1-42b7-84da-bbb4d1c54536
      description: Get Seasons by its org's Ids. If an id does not exist, it does
        not return it.
      tags:
      - Organization
      - Season
  "/v2/orgs/ids":
    parameters:
    - schema:
        type: boolean
      name: include_deleted
      in: query
      required: false
      description: Return only non-deleted or both deleted and non-deleted organizations
    - schema:
        type: integer
      name: page
      in: query
      required: false
      description: Requested page number. Starting from zero. Default is zero.
    - schema:
        type: integer
      name: size
      in: query
      required: false
      description: Requested page size. Default is unpaged
    post:
      summary: Get Orgs by Ids
      operationId: get-orgs-by-orgs_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedOrg"
              examples:
                'Oganizations have been found:':
                  "$ref": "#/components/examples/PagedOrg"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UUIDListModel"
            examples:
              Valid example:
                value:
                  ids:
                  - c8f6a433-a8a2-481d-83c9-c2ee29681f6b
                  - 15587d25-67bd-4b45-8ae4-f8d06f780940
                  - aa68ea62-7ab1-42b7-84da-bbb4d1c54536
      description: Get Orgs by its Ids. If an id does not exist, it does not return
        it.
      tags:
      - Organization
  "/v2/orgs":
    get:
      summary: List allowed Organizations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedOrg"
              examples:
                Oganizations have been found:
                  "$ref": "#/components/examples/PagedOrg"
      operationId: get-allowed-orgs
      description: 'Gets all Organizations that are allowed to the authenticated Account.

        '
      security: []
      parameters:
      - schema:
          type: array
          items:
            type: string
        name: licensing_accounts
        in: query
        required: false
        description: Filter results by workspaces.
      - schema:
          type: array
          items:
            type: string
        name: workspaces
        in: query
        required: false
        description: Filter results by workspaces.
      - schema:
          type: string
          enum:
          - workspaces
          - licensing_accounts
          items:
            type: string
        name: attributes
        in: query
        required: false
        description: Show organizations with their workspaces
      - schema:
          type: string
        name: name
        in: query
        required: false
        description: Filter results by name.
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      tags:
      - Organization
    post:
      summary: Organization Creator
      parameters:
      - in: header
        name: client-id
        schema:
          type: string
        required: false
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BasicOrganization"
            examples:
              Create Organization:
                value:
                  name: Test user's Company
                  address: Inconfidentes St, 911
                  city: Belo Horizonte
                  state: Minas Gerais
                  country: Brazil
                  zip_code: 33000-999
                  place_id: ChIJrTLr-GyuEmsRBfy61i59si0
                  currency: USD
                  unit_system: METRIC
                  phone: "+5531911112222"
                  json_extended_attributes:
                    name: string
        description: Details of the Organization to be created
      responses:
        '201':
          description: |-
            CREATED
            The `Organization` was successfuly created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Organization"
      tags:
      - Organization
      security: []
      operationId: create-org
      description: Create an Organization
  "/v2/products/{id}":
    parameters:
    - schema:
        type: string
      name: id
      in: path
      required: true
    get:
      summary: Get a Product
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductResponse"
              examples:
                List product:
                  value:
                    org_id: 06a34cd3-9e09-7b8d-8a7d-112ac07776a3
                    name: Product Name
                    id: 06a36cd3-9e09-4b8d-8a7d-112ac07776a3
                    manufacturer: Manufacturer Name
                    unit_of_measurement: KILOGRAMS
                    type: VARIETY
      description: List Product
      operationId: get-product
      tags:
      - Product
    put:
      summary: Update product
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductResponse"
              examples:
                Updated product:
                  value:
                    org_id: 06a34cd3-9e09-7b8d-8a7d-112ac07776a3
                    name: Update Product Name
                    id: 06a36cd3-9e09-4b8d-8a7d-112ac07776a3
                    manufacturer: Manufacturer Name
                    unit_of_measurement: KILOGRAMS
                    type: VARIETY
      operationId: update-product
      description: Update Product
      security: []
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BasicProduct"
      tags:
      - Product
    delete:
      summary: ''
      operationId: delete-product-by-id
      responses:
        '200':
          description: OK
      security: []
      tags:
      - Product
      description: Delete the specified Product.
  "/v2/products":
    get:
      summary: List products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedProduct"
              examples:
                List products:
                  value:
                    content:
                    - name: Hussar
                      unit_of_measurement: LITERS
                      id: 06a36cd3-9e09-4b8d-8a7d-112ac07776a3
                      type: HERBICIDE
                    - name: ORBIS
                      unit_of_measurement: LITERS
                      id: 0ea2ede3-ac6e-5935-baeb-2fe5f6ae9724
                      type: FUNGICIDE
                    pageable:
                      sort:
                        sorted: false
                        unsorted: true
                        empty: true
                      offset: 0
                      page_size: 10
                      page_number: 0
                      paged: true
                      unpaged: false
                    last: true
                    total_elements: 2
                    total_pages: 1
                    size: 10
                    number: 0
                    number_of_elements: 2
                    first: true
                    sort:
                      sorted: false
                      unsorted: true
                      empty: true
                    empty: false
      operationId: get-products
      description: List Products
      security: []
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          type: string
        name: Accept-Language
        in: header
        required: false
        description: Products names will be responded in the chosen language
      tags:
      - Product
    post:
      summary: Create Product
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductResponse"
              examples:
                List worker:
                  value:
                    org_id: 06a34cd3-9e09-7b8d-8a7d-112ac07776a3
                    name: Product Name
                    id: 06a36cd3-9e09-4b8d-8a7d-112ac07776a3
                    manufacturer: Manufacturer Name
                    unit_of_measurement: KILOGRAMS
                    type: VARIETY
      operationId: post-product
      description: Create Product
      security: []
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BasicProduct"
      tags:
      - Product
  "/v2/properties/{property_id}/current-season-fields":
    get:
      summary: List of property's season fields
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedSeasonField"
              examples:
                Property has current season fields:
                  value:
                    content:
                    - createdAt: '2020-07-04T18:38:33+0000'
                      updatedAt: '2020-07-04T18:38:33+0000'
                      seasonId: c80f7206-10b6-4f45-9cd4-8259f098b1ae
                      propertyId: 001fc02b-e702-42e7-9e02-f2dc1f4029a5
                      deleted: false
                      varietiesIds:
                      - 4e764f38-5eda-42d8-860f-162ceaa32444
                      plantingDate: '2020-07-04T03:00:00+0000'
                      harvestingDate: 
                      emergencyDate: '2020-07-09T03:00:00+0000'
                      startDate: '2020-07-04T03:00:00+0000'
                      endDate: '2020-08-03T03:00:00+0000'
                      id: a8b025fe-cda3-497a-9178-e06cdc42ae00
                    - createdAt: '2020-07-04T18:38:33+0000'
                      updatedAt: '2020-07-04T18:38:33+0000'
                      seasonId: c80f7206-10b6-4f45-9cd4-8259f098b1ae
                      propertyId: 001fc02b-e702-42e7-9e02-f2dc1f4029a5
                      deleted: false
                      varietiesIds:
                      - 4e764f38-5eda-42d8-860f-162ceaa32444
                      plantingDate: '2020-07-04T03:00:00+0000'
                      harvestingDate: 
                      emergencyDate: '2020-07-09T03:00:00+0000'
                      startDate: '2020-07-04T03:00:00+0000'
                      endDate: '2020-08-03T03:00:00+0000'
                      id: 628c75d8-cac8-481f-b043-27a6fff7a66a
                    - createdAt: '2020-07-04T18:38:33+0000'
                      updatedAt: '2020-07-04T18:38:33+0000'
                      seasonId: c80f7206-10b6-4f45-9cd4-8259f098b1ae
                      propertyId: 001fc02b-e702-42e7-9e02-f2dc1f4029a5
                      deleted: false
                      varietiesIds:
                      - 4e764f38-5eda-42d8-860f-162ceaa32444
                      plantingDate: '2020-07-04T03:00:00+0000'
                      harvestingDate: 
                      emergencyDate: '2020-07-09T03:00:00+0000'
                      startDate: '2020-07-04T03:00:00+0000'
                      endDate: '2020-08-03T03:00:00+0000'
                      id: 64002ffb-ef98-4023-bc9e-37b8034ccc89
                    - createdAt: '2020-07-04T18:38:33+0000'
                      updatedAt: '2020-07-04T18:38:33+0000'
                      seasonId: c80f7206-10b6-4f45-9cd4-8259f098b1ae
                      propertyId: 001fc02b-e702-42e7-9e02-f2dc1f4029a5
                      deleted: false
                      varietiesIds:
                      - 4e764f38-5eda-42d8-860f-162ceaa32444
                      plantingDate: '2020-07-04T03:00:00+0000'
                      harvestingDate: null,
                      emergencyDate: '2020-07-09T03:00:00+0000'
                      startDate: '2020-07-04T03:00:00+0000'
                      endDate: '2020-08-03T03:00:00+0000'
                      id: defb10ed-ca36-4d74-aa9a-f7c920126da7
                    pageable:
                      sort:
                        sorted: false
                        unsorted: true
                        empty: true
                      offset: 0
                      pageSize: 2147483647
                      pageNumber: 0
                      unpaged: false
                      paged: true
                    totalElements: 4
                    totalPages: 1
                    last: true
                    sort:
                      sorted: false,
                      unsorted: true
                      empty: true
                    numberOfElements: 4
                    first: true
                    size: 2147483647
                    number: 0
                    empty: false
      operationId: get-current-season-fields
      description: Get the current season fields from a specifief property
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          "$ref": "#/components/schemas/UUID"
        name: property_id
        in: path
        required: true
      - schema:
          "$ref": "#/components/schemas/ISODateTime"
        in: query
        name: lastUpdateDate
        required: false
        description: The last updated date. It will find occurrences after or equals
          this date
      - schema:
          type: boolean
        name: deleted
        in: query
        required: true
        description: Indicates which operation should be applied. If true find only
          deleted registers else created/updated
      security: []
      tags:
      - Field
      - Property
  "/v2/properties/{propertyId}/cycles":
    get:
      summary: List Property's Cycles
      operationId: get-property-cycles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedCycleDTO"
              examples:
                Property has Cycles:
                  "$ref": "#/components/examples/PagedCycleDTO"
      description: Gets all cycles of an `Property`
      security: []
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      tags:
      - Property
      - Cycle
    parameters:
    - schema:
        type: string
      name: propertyId
      in: path
      required: true
  "/v2/properties/{property_id}/fields/extended-search":
    get:
      summary: List property fields with ExtendedAttribute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedField"
              examples:
                Fields by property:
                  value:
                    content:
                    - json_extended_attributes:
                        name: field 1
                        type: field
                      name: New field2
                      property_id: ccb755fc-b9d0-428e-bdb5-87e4718a9420
                      parent_region_id: ed54067a-6b7a-4bcd-b4b9-cbdc788d571b
                      declared_area: 2.06
                      tags: []
                      id: a9552812-44dc-4368-8c12-47dea882be64
                    pageable:
                      sort:
                        unsorted: true
                        sorted: false
                        empty: true
                      offset: 0
                      page_number: 0
                      page_size: 2147483647
                      paged: true
                      unpaged: false
                    total_pages: 1
                    total_elements: 1
                    last: true
                    size: 2147483647
                    number: 0
                    sort:
                      unsorted: true
                      sorted: false
                      empty: true
                    number_of_elements: 1
                    first: true
                    empty: false
      operationId: get-fields-by-property-extended-search
      description: Get the Fields of an specified property and optionally the Geometry
        of each Field
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          "$ref": "#/components/schemas/UUID"
        name: property_id
        in: path
        required: true
      - schema:
          type: array
          items:
            type: string
            enum:
            - geometry
        in: query
        name: attributes
        style: form
        explode: false
        description: Enable fields in response
      - schema:
          type: string
        name: extra_attribute
        in: query
        required: false
        description: Filtered by multiple key-value pair "name":"some-name","type":"some-type"
      - schema:
          type: string
        in: header
        name: client-id
        required: false
      - schema:
          type: boolean
        name: include_extended
        in: query
        required: true
        description: Filtered extra-Attribute only if include_extended = true
      security: []
      tags:
      - Field
      - Property
  "/v2/properties/{property_id}/fields/history":
    get:
      summary: List property fields history
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PropertyFieldsHistoryDTO"
      operationId: get-fields-history-by-property
      description: Get the Fields history of an specified property and optionally
        the Geometry of each Field
      parameters:
      - schema:
          "$ref": "#/components/schemas/UUID"
        name: property_id
        in: path
        required: true
      - schema:
          type: array
          items:
            type: string
            enum:
            - geometry
        in: query
        name: attributes
        style: form
        explode: false
        description: Enable fields in
      - schema:
          "$ref": "#/components/schemas/UUID"
        in: query
        name: contract_id
        required: false
      security: []
      tags:
      - Property
  "/v2/properties/{property_id}/fields/updates":
    parameters:
    - schema:
        "$ref": "#/components/schemas/UUID"
      name: property_id
      in: path
      required: true
      description: "`id` of the `Property`.\n"
      example: '42'
    post:
      tags:
      - Field Geometry Updates
      - Field
      summary: Performs field geometry updates
      parameters:
      - schema:
          type: array
          items:
            type: string
            enum:
            - saved_fields
        in: query
        name: attributes
        style: form
        explode: false
        description: Optional parameter that informs that the saved fields must be
          returned
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GeometryUpdateRequest"
      responses:
        '200':
          description: The operation was completed (partially or completely).
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateResponse"
              examples:
                Fully accepted:
                  value:
                    status: FULLY_ACCEPTED
                    errors: []
                Partially accepted:
                  value:
                    status: PARTIALLY_ACCEPTED
                    errors:
                    - key: 75cef3de-4247-4e14-a13a-7b5319f75e99
                      code: E4321
                      message: Invalid geometry for Feature '75cef3de-4247-4e14-a13a-7b5319f75e99'.
                    - key: L15
                      code: abcdeade-4247-4e14-a13a-7b5319f75e99
                      message: Precondition failed for Region 'abcdeade-4247-4e14-a13a-7b5319f75e99'.
                Fully accepted with saved fields:
                  value:
                    status: FULLY_ACCEPTED
                    errors: []
                    saved_fields:
                      created_fields:
                      - name: Created field example,
                        property_id: aab63ec2-4756-11ea-8d24-5e6d0beb7caa,
                        parent_region_id: acfce85d-14ce-42d5-9685-cf260192550f,
                        declared_area: 8.1,
                        event_date: 2019-10-02T00:00:00.000Z,
                        id: ba69208b-d8fa-4603-be43-aef2ebda9003,
                        calculated_area: 111
                        geometry:
                          type: Polygon,
                          coordinates:
                          - "-43.938330709934235, -19.93101503667817"
                          - "-43.93878936767578, -19.93277002901534"
                          - "-43.93769234418869, -19.933012095394105"
                          - "-43.937163949012756, -19.931247019541928"
                          - "-43.938330709934235, -19.93101503667817"
                      updated_fields:
                      - name: Updated field example,
                        property_id: ea74655d-6633-462e-9a7f-ac4fe5429f38,
                        parent_region_id: 2d7da99a-83ca-4f58-8a15-35ee9f5e925b,
                        declared_area: 10.0,
                        event_date: 2020-12-02T00:00:00.000Z,
                        id: aedc9cd0-9781-48b4-ba0c-8808cf523e6c,
                        calculated_area: 150
                        geometry:
                          type: Polygon,
                          coordinates:
                          - "-43.938330709934235, -19.93101503667817"
                          - "-43.93878936767578, -19.93277002901534"
                          - "-43.93769234418869, -19.933012095394105"
                          - "-43.937163949012756, -19.931247019541928"
                          - "-43.938330709934235, -19.93101503667817"
        '400':
          description: Refused. Either all regions contain an error or some contain
            an error and strict mode is on.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateResponse"
              examples:
                PartialOperationExample:
                  value:
                    status: REJECTED
                    errors:
                    - key: L14
                      code: E4321
                      message: Invalid geometry for Feature 'L14'.
                    - key: L15
                      code: E1234
                      message: Precondition failed for Region 'L15'.
                    - key: 75cef3de-4247-4e14-a13a-7b5319f75e99
                      code: EGEO005
                      message: Geometry intersection found
                      overlap:
                        field:
                          field_id: 75cef3de-4247-4e14-a13a-7b5319f75e99
                          event_date: '2020-01-01T00:00:00.000Z'
                          previous_date: '1970-01-01T00:00:00.000Z'
                        field_overlapped:
                          field_id: 55cef3de-4347-4e14-a13a-7b5319f75e99
                          event_date: '1970-01-01T00:00:00.000Z'
                          next_date: '2022-01-01T00:00:00.000Z'
        '500':
          description: API-side error. The client may retry the same request within
            the rate limit.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateResponse"
              examples:
                PartialOperationExample:
                  value:
                    status: ERROR
                    message: The service was not able to complete your request at
                      this time.
      operationId: post-fields-geometry-updates
      security: []
      description: |
        A fields batch that can be created, updated or deleted.
        The request is executed asynchronously, so at the end of the request the process may not be completed.
    get:
      summary: Query results and version identifiers of previous updates.
      parameters:
      - name: since
        in: query
        description: 'Start date of the desired time window (inclusive).

          '
        required: false
        schema:
          "$ref": "#/components/schemas/ISODateTime"
      - name: until
        in: query
        description: 'End date of the desired time window (exclusive).

          '
        required: false
        schema:
          "$ref": "#/components/schemas/ISODateTime"
      - name: reference_date
        in: query
        description: 'Filter on reference_date

          '
        required: false
        schema:
          "$ref": "#/components/schemas/ISODateTime"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RegionCollection"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RegionError"
              examples:
                Wrong Relative Root:
                  value:
                    code: E1312
                    message: The 'relative_root' ID does not exist
                Wrong Time Window:
                  value:
                    code: E1313
                    message: The end date parameter value is before the start date
      operationId: get-fields-geometry-updates
      security: []
      tags:
      - Field
  "/v2/properties/{property_id}/fields":
    get:
      summary: List property fields
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedField"
              examples:
                Fields by property:
                  "$ref": "#/components/examples/PagedField"
      operationId: get-fields-by-property
      description: Get the Fields of an specified property and optionally the Geometry
        of each Field
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          "$ref": "#/components/schemas/UUID"
        name: property_id
        in: path
        required: true
      - schema:
          type: array
          items:
            type: string
            enum:
            - geometry
        in: query
        name: attributes
        style: form
        explode: false
        description: Enable fields in
      - schema:
          type: string
        in: query
        name: reference_date
        required: false
        description: Filter on reference_date
      security: []
      tags:
      - Property
  "/v2/properties/{propertyId}/region-tree":
    get:
      summary: List properties regionTree
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OutputRegionDTO"
              examples:
                Valid RegionTree:
                  value:
                    calculated_area: 
                    children_region:
                    - calculated_area: 0
                      children_region: []
                      created_at: '2021-04-28T03:25:47.000Z'
                      declared_area: 90
                      deleted_at: 
                      fields:
                      - declared_area: 2.06
                        id: d8529788-20a3-4aa7-96bd-bf734bd1f23f
                        name: Field79
                        parent_region_id: 3a2036fb-2f85-47a2-8874-e1a626a591c0
                        property_id: 593b6155-d5b1-4876-9885-3bc3ea0409de
                        event_date: '2019-10-02T00:00:00.000Z'
                        tags: []
                      id: 3a2036fb-2f85-47a2-8874-e1a626a591c0
                      last_modified: '2021-04-29T02:21:57.000Z'
                      name: region for fields
                      parent_id: b327eff3-629a-436c-bdf3-232239aaf33e
                      property_id: 593b6155-d5b1-4876-9885-3bc3ea0409de
                    created_at: '2021-03-24T23:42:33.000Z'
                    declared_area: 
                    deleted_at: 
                    fields: []
                    id: b327eff3-629a-436c-bdf3-232239aaf33e
                    last_modified: '2021-04-29T02:23:59.000Z'
                    name: ajays region
                    parent_id: 
                    property_id: 593b6155-d5b1-4876-9885-3bc3ea0409de
      operationId: get-regionTree by PropertyId
      description: Get the regionTree of an specified property
      parameters:
      - schema:
          "$ref": "#/components/schemas/UUID"
        name: propertyId
        in: path
        required: true
      - schema:
          type: string
        in: query
        name: reference_date
        required: false
        description: Filter on reference_date
      security: []
      tags:
      - Property
  "/v2/properties/{propertyId}/regions/extended-search":
    get:
      summary: List regions with Extra Attribute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OutputParent"
              examples:
                Valid Parent:
                  value:
                  - id: b152e9b1-f858-4f89-83ca-be18054c8048
                    name: region35
                    parent_id: 20b014b1-e81e-4a4f-991e-e8db908aee42
                    property_id: 2e5e26a4-95d8-4198-83eb-3bcfc62f95e3
                    event_date: '2019-10-02T00:00:00.000Z'
      operationId: get-regions-by-propertyId-extended-search
      description: Get the Region of an specified property
      parameters:
      - schema:
          "$ref": "#/components/schemas/UUID"
        name: propertyId
        in: path
        required: true
      - schema:
          type: string
        name: extra_attribute
        in: query
        required: false
        description: Filtered by multiple key-value pair "name":"some-name","type":"some-type"
      - schema:
          type: string
        in: header
        name: client-id
        required: false
      - schema:
          type: boolean
        name: include_extended
        in: query
        required: true
        description: Filtered extra-Attribute only if include_extended = true
      security: []
      tags:
      - Region
  "/v2/properties/{propertyId}/regions/history":
    get:
      summary: List regions history
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BasePropertyRegionsHistoryDTO"
      operationId: get-regions-history-by-propertyId
      description: Get the Region history of an specified property
      parameters:
      - schema:
          "$ref": "#/components/schemas/UUID"
        name: propertyId
        in: path
        required: true
      security: []
      tags:
      - Property
  "/v2/properties/{property_id}/regions/updates":
    parameters:
    - schema:
        "$ref": "#/components/schemas/UUID"
      name: property_id
      in: path
      required: true
      description: "`id` of the `Property`.\n"
      example: '42'
    post:
      tags:
      - Region
      summary: Performs region geometry updates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GeometryUpdateRequest"
      responses:
        '200':
          description: The operation was completed (partially or completely).
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateResponse"
              examples:
                Fully accepted:
                  value:
                    status: FULLY_ACCEPTED
                    errors: []
                Partially accepted:
                  value:
                    status: PARTIALLY_ACCEPTED
                    errors:
                    - key: 75cef3de-4247-4e14-a13a-7b5319f75e99
                      code: E4321
                      message: Invalid geometry for Feature '75cef3de-4247-4e14-a13a-7b5319f75e99'.
                    - key: L15
                      code: abcdeade-4247-4e14-a13a-7b5319f75e99
                      message: Precondition failed for Region 'abcdeade-4247-4e14-a13a-7b5319f75e99'.
        '400':
          description: Refused. Either all regions contain an error or some contain
            an error and strict mode is on.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateResponse"
              examples:
                PartialOperationExample:
                  value:
                    status: REJECTED
                    errors:
                    - key: L14
                      code: E4321
                      message: Invalid geometry for Feature 'L14'.
                    - key: L15
                      code: E1234
                      message: Precondition failed for Region 'L15'.
                    - key: 75cef3de-4247-4e14-a13a-7b5319f75e99
                      code: EGEO005
                      message: Geometry intersection found
                      overlap:
                        field:
                          field_id: 75cef3de-4247-4e14-a13a-7b5319f75e99
                          event_date: '2022-01-01T00:00:00.000Z'
                        field_overlapped:
                          field_id: 55cef3de-4347-4e14-a13a-7b5319f75e99
                          event_date: '1970-01-01T00:00:00.000Z'
                          next_date: '2022-01-01T00:00:00.000Z'
        '500':
          description: API-side error. The client may retry the same request within
            the rate limit.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateResponse"
              examples:
                PartialOperationExample:
                  value:
                    status: ERROR
                    message: The service was not able to complete your request at
                      this time.
      operationId: post-regions-geometry-updates
      security: []
      description: |
        A regions batch that can be created, updated or deleted.
        The request is executed asynchronously, so at the end of the request the process may not be completed.
    get:
      summary: Query results and version identifiers of previous updates.
      parameters:
      - name: since
        in: query
        description: 'Start date of the desired time window (inclusive).

          '
        required: false
        schema:
          "$ref": "#/components/schemas/ISODateTime"
      - name: until
        in: query
        description: 'End date of the desired time window (exclusive).

          '
        required: false
        schema:
          "$ref": "#/components/schemas/ISODateTime"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RegionCollection"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RegionError"
              examples:
                Wrong Relative Root:
                  value:
                    code: E1312
                    message: The 'relative_root' ID does not exist
                Wrong Time Window:
                  value:
                    code: E1313
                    message: The end date parameter value is before the start date
      operationId: get-regions-geometry-updates
      security: []
      tags:
      - Field
  "/v2/properties/{propertyId}/regions":
    get:
      summary: List regions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OutputParent"
              examples:
                Valid Parent:
                  value:
                  - id: b152e9b1-f858-4f89-83ca-be18054c8048
                    name: region35
                    parent_id: 20b014b1-e81e-4a4f-991e-e8db908aee42
                    property_id: 2e5e26a4-95d8-4198-83eb-3bcfc62f95e3
                    event_date: '2019-10-02T00:00:00.000Z'
      operationId: get-regions-by-propertyId
      description: Get the Region of an specified property
      parameters:
      - schema:
          "$ref": "#/components/schemas/UUID"
        name: propertyId
        in: path
        required: true
      - schema:
          type: string
        name: reference_date
        in: query
        required: false
        description: Filter on reference_date
      security: []
      tags:
      - Property
  "/v2/properties/{property_id}/season-areas-updates":
    get:
      summary: List season areas updates since last update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedSeasonField"
              examples:
                Season areas updates:
                  value:
                    content:
                      id: d06e2de7-6b50-4dda-853e-ab7952def05f
                      starts_at: '2020-04-01T09:06:26.418+0000'
                      ends_at: '2020-07-31T09:06:26.418+0000'
                      area_id: 6d5203f7-2b5c-485e-a6f8-b080ef1cf1a9
                      deleted: false
                    pageable:
                      sort:
                        sorted: false
                        unsorted: true
                        empty: true
                      offset: 0
                      page_size: 10
                      page_number: 0
                      paged: true
                      unpaged: false
                      last: true
                      total_elements: 1
                      total_pages: 1
                      size: 10
                      number: 0
                      number_of_elements: 1
                      first: true
                      sorted: false
                      unsorted: true
                      empty: true
      operationId: get-season-areas-by-property-id-and-updated-since
      description: Get the season areas updates since last update by property
      parameters:
      - schema:
          "$ref": "#/components/schemas/UUID"
        name: property_id
        in: path
        required: true
      - schema:
          "$ref": "#/components/schemas/ISODateTime"
        name: last_update_date
        in: query
        required: true
      - schema:
          type: boolean
        name: deleted
        in: query
        required: true
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      security: []
      tags:
      - Property
  "/v2/properties/{property_id}/seasons":
    get:
      summary: List property seasons
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedSeason"
              examples:
                Property has seasons:
                  value:
                    content:
                      id: d06e2de7-6b50-4dda-853e-ab7952def05f
                      name: Watermelon season 2020
                      start_date: '2020-04-01T09:06:26.418+0000'
                      end_date: '2020-07-31T09:06:26.418+0000'
                      crop_id: 6d5203f7-2b5c-485e-a6f8-b080ef1cf1a9
                      org_id: 384f0b5f-25a5-4102-85ca-7c4fa43a7832
                      active: true
                      deleted: false
                    pageable:
                      sort:
                        sorted: false
                        unsorted: true
                        empty: true
                      offset: 0
                      page_size: 10
                      page_number: 0
                      paged: true
                      unpaged: false
                      last: true
                      total_elements: 1
                      total_pages: 1
                      size: 10
                      number: 0
                      number_of_elements: 1
                      first: true
                      sorted: false
                      unsorted: true
                      empty: true
      operationId: get-seasons-by-property
      description: Get the seasons of a specified property
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          "$ref": "#/components/schemas/UUID"
        name: property_id
        in: path
        required: true
      security: []
      tags:
      - Season
      - Property
  "/v2/properties/{property_id}":
    get:
      summary: Property Details
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Property"
              examples:
                Property has been found:
                  value:
                    org_id: 384f0b5f-25a5-4102-85ca-7c4fa43a7832
                    root_region_id: ad23de56-0312-4a6c-b576-27a16ee8cc2d
                    name: User's Farm
                    time_zone: Asia/Kolkata
                    country: 
                    state: 
                    city: 
                    address: 
                    zip_code: 
                    place_id: 
                    reference_point:
                      type: Point
                      coordinates:
                      - 20.9235175
                      - 77.7673384
                    deleted: false
                    id: dc2b45a4-3554-4c81-ab55-635d231c2810
                Property has been found using attributes=total_area:
                  value:
                    org_id: 384f0b5f-25a5-4102-85ca-7c4fa43a7832
                    root_region_id: ad23de56-0312-4a6c-b576-27a16ee8cc2d
                    name: User's Farm
                    time_zone: Asia/Kolkata
                    country: 
                    state: 
                    city: 
                    address: 
                    zip_code: 
                    place_id: 
                    total_area: 0.95
                    reference_point:
                      type: Point
                      coordinates:
                      - 20.9235175
                      - 77.7673384
                    deleted: false
                    id: dc2b45a4-3554-4c81-ab55-635d231c2810
      operationId: get-property-by-id
      description: |-
        Gets the property details and optionally total area.
        Possible query parameters:
        - **total_area**: get total area of this property's Fields.
      security: []
      parameters:
      - schema:
          type: array
          items:
            type: string
            enum:
            - total_area
        in: query
        name: attributes
        style: form
        explode: false
        description: ''
      tags:
      - Property
    parameters:
    - schema:
        type: string
      name: property_id
      in: path
      required: true
      description: ''
    put:
      summary: Edit existing Property
      operationId: edit-property-by-id
      parameters:
      - in: header
        name: client-id
        schema:
          type: string
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BasicProperty"
              examples:
                Property was edited:
                  value:
                    org_id: 85010338-88c4-49ca-a480-79b7146c2058
                    root_region_id: 31f8433c-ff3e-47fd-9ffd-000da1d4c2b4
                    name: User's Farm
                    time_zone: Asia/Kolkata
                    country: India
                    state: Maharashtra
                    city: Pune
                    address: Pune
                    zip_code: '411014'
                    place_id: 
                    json_extended_attributes:
                      name: string
                    reference_point:
                      type: Point
                      coordinates:
                      - 19.7514798
                      - 75.7138884
                    deleted: false
                    id: 3aa8e4e9-9638-49f9-81f9-95f652bd89d3
      description: Edits an existing `Property` with the specified id.
      security: []
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EditableProperty"
            examples:
              Property to edit:
                value:
                  org_id: 6d5ccc3b-bf9a-4678-a6fb-0b9f7b9eb425
                  name: Sample edited Farm
                  time_zone: America/Sao_Paulo
                  country: Brazil
                  state: MG
                  city: BH
                  address: rua
                  zip_code: 33333-111
                  place_id: ChIJrTLr-GyuEmsRBfy61i59si0
                  json_extended_attributes:
                    name: string
                  reference_point:
                    type: Point
                    coordinates:
                    - 3
                    - 4
                  id: 915f59f9-e351-4ab7-974a-41c347826cfa
        description: Details of the Property to be updated.
      tags:
      - Property
    delete:
      summary: Delete Property By ID
      operationId: delete-property-by-id
      responses:
        '200':
          description: OK
      security: []
      tags:
      - Property
      description: Delete the specified property.
  "/v2/properties/ids":
    parameters:
    - schema:
        type: boolean
      name: include_deleted
      in: query
      required: false
      description: Return only non-deleted or both deleted and non-deleted properties
    - schema:
        type: integer
      name: page
      in: query
      required: false
      description: Requested page number. Starting from zero. Default is zero.
    - schema:
        type: integer
      name: size
      in: query
      required: false
      description: Requested page size. Default is unpaged
    post:
      summary: Get Properties By Ids
      operationId: get-properties-by-ids
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedProperty"
              examples:
                Properties have been found:
                  "$ref": "#/components/examples/PagedProperty"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UUIDListModel"
            examples:
              Valid example:
                value:
                  ids:
                  - '0015962e-eecc-49c9-9aa4-e2a4f04068e1'
                  - '000228fd-5361-4964-810e-5cfa05f2f971'
                  - aa68ea62-7ab1-42b7-84da-bbb4d1c54536
      description: Get Properties by its org's Ids. If an id does not exist, it does
        not return it.
      tags:
      - Property
  "/v2/properties":
    post:
      summary: Create property
      parameters:
      - in: header
        name: client-id
        schema:
          type: string
        required: false
      operationId: create-property
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Property"
              examples:
                Property with id:
                  value:
                    org_id: 85010338-88c4-49ca-a480-79b7146c2058
                    root_region_id: cd492bb0-161c-4c98-923c-2f746cb8e5ce
                    name: New Property
                    time_zone: Asia/Kolkata
                    country: India
                    state: MH
                    city: Amravati
                    address: New Address
                    zip_code: '444606'
                    place_id: 
                    json_extended_attributes:
                      name: string
                    reference_point:
                      type: Point
                      coordinates:
                      - 20.9234911
                      - 77.7680833
                    deleted: false
                    id: 76b74b0d-3143-45c9-9fa2-f9a9843b8b02
      description: Creates a property.
      security: []
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EditableProperty"
            examples:
              Valid property:
                value:
                  org_id: 6d5ccc3b-bf9a-4678-a6fb-0b9f7b9eb425
                  name: Sample Farm
                  time_zone: America/Sao_Paulo
                  country: Brazil
                  state: MG
                  city: BH
                  address: rua
                  zip_code: 33333-111
                  place_id: ChIJrTLr-GyuEmsRBfy61i59si0
                  json_extended_attributes:
                    name: string
                  reference_point:
                    type: Point
                    coordinates:
                    - 3
                    - 4
        description: Details of the Property to be created.
      tags:
      - Property
  "/v2/seasons/{season_id}/fields":
    parameters:
    - schema:
        type: string
      name: season_id
      in: path
      required: true
    get:
      summary: List Fields of the Season
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedSeasonField"
              examples:
                Season and Fields Relationship:
                  "$ref": "#/components/examples/PagedSeasonField"
      operationId: get-season-fields-by-season_id
      description: |-
        List the Season/Field relationship of the specified Season.
        It can be filtered using a query parameter to specify a Property.
      security: []
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          type: string
        in: query
        name: property_id
        description: An UUID `Property` id
      tags:
      - Season
      - Field
  "/v2/seasons/{season_id}/land/updates":
    parameters:
    - schema:
        type: string
      name: season_id
      in: path
      required: true
    post:
      summary: Perform a batch of operations related to Season and `land` (Properties
        and Fields)
      responses:
        '200':
          description: OK
      security: []
      operationId: season-land-updates
      tags:
      - Season
      - Property
      - Field
      description: Associate/dissociate properties and/or fields to/from a Season.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SeasonLandUpdatesList"
            examples:
              Season land batch update:
                "$ref": "#/components/examples/SeasonLandBatchUpdate"
        description: ''
  "/v2/seasons/{season_id}/properties":
    parameters:
    - schema:
        type: string
      name: season_id
      in: path
      required: true
    get:
      summary: List Properties of the Season
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedSeasonProperty"
              examples:
                Season and Properties relationship:
                  value:
                    content:
                    - season_id: d06e2de7-6b50-4dda-853e-ab7952def05f
                      deleted: false
                      id: dc2b45a4-3554-4c81-ab55-635d231c2810
                    pageable:
                      sort:
                        sorted: false
                        unsorted: true
                        empty: true
                      page_size: 2000
                      page_number: 0
                      offset: 0
                      unpaged: false
                      paged: true
                    total_pages: 1
                    total_elements: 1
                    last: true
                    first: true
                    sort:
                      sorted: false
                      unsorted: true
                      empty: true
                    number_of_elements: 1
                    size: 2000
                    number: 0
                    empty: false
      operationId: get-season-properties-by-season_id
      description: List the Season/Property relationship of the specified Season and
        optionally the Season/Field relationship for each Season/Property.
      security: []
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      tags:
      - Season
      - Property
  "/v2/seasons/{season_id}":
    get:
      summary: Season Details
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Season"
              examples:
                Season has been found:
                  value:
                    name: Watermelon season 2020
                    start_date: '2020-04-01T09:06:26.000+0000'
                    end_date: '2020-07-31T09:06:26.000+0000'
                    crop_id: 6d5203f7-2b5c-485e-a6f8-b080ef1cf1a9
                    org_id: 384f0b5f-25a5-4102-85ca-7c4fa43a7832
                    active: true
                    deleted: false
                    json_extended_attributes:
                      name: string
                    id: d06e2de7-6b50-4dda-853e-ab7952def05f
      operationId: get-season-by-id
      description: Gets the specified Season details.
      security: []
      parameters:
      - schema:
          type: string
        name: season_id
        in: path
        required: true
        description: ''
      - schema:
          type: boolean
        name: include_extended
        in: query
        required: false
      - in: header
        name: client-id
        schema:
          type: string
        required: false
      tags:
      - Season
    put:
      summary: Season Updater
      parameters:
      - in: header
        name: client-id
        schema:
          type: string
        required: false
      responses:
        '200':
          description: |-
            OK
            The `Season` was successfuly updated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Season"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Season"
            examples:
              Update Season:
                value:
                  name: Apple season 2020
                  start_date: '2020-06-01T12:13:37.000+0000'
                  end_date: '2020-07-28T12:13:37.000+0000'
                  crop_id: '09616ba5-c12d-4028-a1f6-5f10ca2a4ff0'
                  org_id: 85010338-88c4-49ca-a480-79b7146c2058
                  active: true
                  deleted: false
                  json_extended_attributes:
                    name: string
                  id: bbb41ba0-a337-4949-9959-ed371d04ebbc
        description: Details of the Season to be updated.
      tags:
      - Season
      security: []
      operationId: update-season-by-id
      description: Update the specified Season.
    parameters:
    - schema:
        type: string
      name: season_id
      in: path
      required: true
    delete:
      summary: ''
      operationId: delete-season-by-id
      responses:
        '200':
          description: OK
      security: []
      tags:
      - Season
      description: Delete the specified Season.
  "/v2/seasons/ids/properties/ids/fields":
    parameters:
    - schema:
        type: boolean
      name: include_deleted
      in: query
      required: false
      description: Return only non-deleted or both deleted and non-deleted organizations
    - schema:
        type: integer
      name: page
      in: query
      required: false
      description: Requested page number. Starting from zero. Default is zero.
    - schema:
        type: integer
      name: size
      in: query
      required: false
      description: Requested page size. Default is unpaged
    post:
      summary: List Seasons Fields of Seasons and Properties
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedSeasonField"
              examples:
                Season and Fields Relationship:
                  "$ref": "#/components/examples/PagedSeasonField"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SeasonAndPropertiesIdsList"
            examples:
              Valid example:
                "$ref": "#/components/examples/SeasonAndPropertiesIdsList"
      operationId: get-season-fields-by-seasons_ids-and-properties_ids
      description: |-
        List the Season/Field relationship for specifieds Seasons.
        It can be filtered by passing a property id. If none is passed, no season field is filtered.
      security: []
      tags:
      - Season
      - Field
      - Property
  "/v2/seasons/ids":
    parameters:
    - schema:
        type: boolean
      name: include_deleted
      in: query
      required: false
      description: Return only non-deleted or both deleted and non-deleted seasons
    - schema:
        type: integer
      name: page
      in: query
      required: false
      description: Requested page number. Starting from zero. Default is zero.
    - schema:
        type: integer
      name: size
      in: query
      required: false
      description: Requested page size. Default is unpaged
    post:
      summary: Get Seasons by Ids
      operationId: get-seasons-by-ids
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedSeason"
              examples:
                Seasons have been found:
                  "$ref": "#/components/examples/PagedSeason"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UUIDListModel"
            examples:
              Valid example:
                value:
                  ids:
                  - 0022a42d-b4f5-4930-a6ea-075f9a6e34bd
                  - 00317ded-2367-479c-8fc8-9dd38d042bf2
                  - 0034dee9-2bc1-4bf3-bde8-3ac074585262
      description: Get Seasons by its Ids. If an id does not exist, it does not return
        it.
      tags:
      - Season
  "/v2/seasons/land/updates":
    post:
      summary: Perform batch of operations related to each Season and `land` (Properties
        and Fields)
      responses:
        '200':
          description: OK
      security: []
      operationId: season-land-batch-updates
      tags:
      - Season
      - Property
      - Field
      description: Associate/dissociate properties and/or fields to/from each Season.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SeasonLandBatchList"
            examples:
              Season land batch updates:
                "$ref": "#/components/examples/SeasonLandBatchUpdatesList"
        description: ''
  "/v2/seasons":
    post:
      summary: Season Creator
      parameters:
      - in: header
        name: client-id
        schema:
          type: string
        required: false
      responses:
        '201':
          description: |-
            CREATED
            The `Season` was successfuly created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Season"
              examples:
                Created Season:
                  value:
                    name: Watermelon season 2020
                    start_date: '2020-04-01T09:06:26.418+0000'
                    end_date: '2020-07-31T09:06:26.418+0000'
                    crop_id: 6d5203f7-2b5c-485e-a6f8-b080ef1cf1a9
                    org_id: 384f0b5f-25a5-4102-85ca-7c4fa43a7832
                    active: true
                    deleted: false
                    json_extended_attributes:
                      name: string
                    id: d06e2de7-6b50-4dda-853e-ab7952def05f
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SeasonWithLand"
            examples:
              Create Season:
                value:
                  name: Season Test - 2020/21
                  org_id: 34550190-7d4f-4a03-91ec-4f5568e50029
                  start_date: '2020-01-31T20:47:15.767Z'
                  end_date: '2021-01-31T20:47:15.767Z'
                  crop_id: 010b7b54-e006-4afc-a843-436b909ce90d
              Create Season with relationships:
                value:
                  name: Season Test - 2020/21
                  org_id: 34550190-7d4f-4a03-91ec-4f5568e50029
                  start_date: '2020-01-31T20:47:15.767Z'
                  end_date: '2021-01-31T20:47:15.767Z'
                  crop_id: 010b7b54-e006-4afc-a843-436b909ce90d
                  json_extended_attributes:
                    name: string
                  land:
                    properties:
                    - id: b76bac1f-2833-4a5e-9cb1-72c02812c5bd
                    fields:
                    - id: af3528c4-b9ec-460f-bc13-361963dba7bc
                      planting_date: '2020-02-02T15:00:00Z'
                      emergency_date: '2020-05-02T15:00:00Z'
                      harvesting_date: '2020-10-02T15:00:00Z'
                      start_date: '2020-02-02T15:00:00Z'
                      end_date: '2020-10-02T15:00:00Z'
                      varieties_ids:
                      - 3f830f32-5a36-4ec7-81f3-39f7d904d9f4
        description: Details of the Season to be created
      security: []
      operationId: create-season
      description: Create a season.
      tags:
      - Season
  "/v2/utils/geo/as-geojson":
    post:
      summary: Convert KML or Shapefile to GeoJSON
      tags:
      - Utils
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FeatureCollection"
              examples:
                FeatureCollection for KML file:
                  "$ref": "#/components/examples/FeatureCollectionForKML"
                FeatureCollection for shapefile:
                  "$ref": "#/components/examples/FeatureCollectionForShapefile"
      description: ''
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: array
                  items:
                    type: string
                    format: binary
            examples: {}
        description: Multipart Form including either one single .kml file or a set
          of shapefiles (at least .shp, .shx and .dbf)
      operationId: geojson-converter
  "/v2/utils/geo/regulatory-zones":
    post:
      summary: Get List of country codes in ISO3166Alpha2 format.
      tags:
      - Utils
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedISO3166Alpha2Object"
              examples:
                List ISO3166Aplha2Codes:
                  value:
                    content:
                    - id: 06a36cd3-9e09-4b8d-8a7d-112ac07776a3
                      country_name: India
                      iso3166_alpha2_code: IN
                    - id: 06a36cd3-9e09-4b8d-8a7d-112ac07776a3
                      country_name: Brazil
                      iso3166_alpha2_code: BR
                    pageable:
                      sort:
                        sorted: false
                        unsorted: true
                        empty: true
                      offset: 0
                      page_size: 10
                      page_number: 0
                      paged: true
                      unpaged: false
                    last: true
                    total_elements: 2
                    total_pages: 1
                    size: 10
                    number: 0
                    number_of_elements: 2
                    first: true
                    sort:
                      sorted: false
                      unsorted: true
                      empty: true
                    empty: false
      description: ''
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          type: string
        name: Accept-Language
        in: header
        required: false
        description: regulatory zone list
      operationId: regulatory-zones
  "/v2/varieties":
    get:
      summary: List varieties
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedVariety"
              examples:
                List varieties:
                  value:
                    content:
                    - org_id: 
                      name: Cotton Growth Seed
                      manufacturer:
                        name: Syngenta
                        org_id: 
                        countries: 
                        id: c2f0d39d-e75b-4302-95b5-e858377cac79
                      unit_of_measurement: KILOGRAMS
                      id: 06a36cd3-9e09-4b8d-8a7d-112ac07776a3
                    - org_id: 
                      name: Banana
                      manufacturer:
                        name: Bayer
                        org_id: 
                        countries: 
                        id: 1081f14f-37a8-455a-8223-bd9da76cdda0
                      unit_of_measurement: KILOGRAMS
                      id: 0ea2ede3-ac6e-5935-baeb-2fe5f6ae9724
                    pageable:
                      sort:
                        sorted: false
                        unsorted: true
                        empty: true
                      offset: 0
                      page_size: 10
                      page_number: 0
                      paged: true
                      unpaged: false
                    last: true
                    total_elements: 2
                    total_pages: 1
                    size: 10
                    number: 0
                    number_of_elements: 2
                    first: true
                    sort:
                      sorted: false
                      unsorted: true
                      empty: true
                    empty: false
      operationId: get-variesties
      description: List Varieties
      security: []
      parameters:
      - schema:
          type: integer
        name: page
        in: query
        required: false
        description: Requested page number. Starting from zero. Default is zero.
      - schema:
          type: integer
        name: size
        in: query
        required: false
        description: Requested page size. Default is unpaged
      - schema:
          type: string
        name: Accept-Language
        in: header
        required: false
        description: Variety names will be responded in the chosen language
      tags:
      - Variety
servers:
- url: https://api.base.cropwise.com
  description: Production API
- url: https://api.staging.beta.base.strider.ag
  description: Beta API
- url: https://api.staging.base.cropwise.com
  description: Staging API
- url: https://api.qa.base.cropwise.com
  description: QA API
- url: http://localhost:8080
  description: Local API
tags:
- name: Catalog Crop
  description: "` Catalog Crop Crop` listing, editing and creation"
- name: Catalog Crop Eppo
  description: "` Catalog Crop Eppo` listing, editing and creation"
- name: Catalog Crop Growth Scale
  description: "`Catalog Crop Growth Scale` listing, editing and creation"
- name: Catalog Product
  description: "`Catalog Product` listing, editing and creation"
- name: Crop
  description: "`Crop` listing"
- name: Cycle
  description: "`Cycle` listing, editing and creation"
- name: Equipment
  description: "`Equipment` listing, editing and creation"
- name: Field
  description: "`Field` listing, editing and creation"
- name: Field Geometry Updates
  description: Creates and retrieves results of map update operations.
- name: Organization
  description: "`Organization` listing, editing and creation"
- name: Product
  description: "`Product` listing, editing and creation"
- name: Property
  description: "`Property` listing, editing and creation"
- name: Region
  description: "`Region` listing, editing and creation"
- name: Season
  description: "`Season` listing, editing and creation"
- name: Utils
  description: General utility services
- name: Variety
  description: "`Variety` listing"
